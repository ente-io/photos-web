{"version":3,"file":"ort.wasm-core.min.js","mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAa,IAAID,IAEjBD,EAAU,IAAIC,GACf,CATD,CASGK,MAAM,KACT,O,+CCPA,eACA,SAEA,SACA,SAQa,KAAkB,KAa7B,IAZoC,iBAAzB,EAAAC,IAAIC,KAAKC,aAA4B,EAAAF,IAAIC,KAAKC,YAAc,KACrE,EAAAF,IAAIC,KAAKC,YAAc,GAGI,kBAAlB,EAAAF,IAAIC,KAAKE,OAClB,EAAAH,IAAIC,KAAKE,MAAO,GAGY,kBAAnB,EAAAH,IAAIC,KAAKG,QAClB,EAAAJ,IAAIC,KAAKG,OAAQ,GAGgB,iBAAxB,EAAAJ,IAAIC,KAAKI,aAA4BC,OAAOC,UAAU,EAAAP,IAAIC,KAAKI,aAAe,EAAAL,IAAIC,KAAKI,YAAc,EAAG,CACjH,MAAMG,EAA0C,oBAAdC,WAA4B,IAAAC,QAAOC,OAASF,UAAUG,oBACxF,EAAAZ,IAAIC,KAAKI,WAAaQ,KAAKC,IAAI,EAAGD,KAAKE,MAAMP,GAAsB,GAAK,G,GAsB/D,KAAc,IAlB3B,MACEQ,cAEE,gBAGM,IAAAC,gCACR,CAGAD,2BAA2BE,EAAiCC,GAE1D,MAAMC,EAAU,IAAI,EAAAC,qCAEpB,aADMD,EAAQE,UAAUJ,EAAcC,GAC/BI,QAAQC,QAAQJ,EACzB,E,ugBCzCF,YACA,eACA,SAO8B,CAC5B,MAAMK,EAAc,WAIpB,IAAAC,iBAAgB,MAAOD,EAAa,KACpC,IAAAC,iBAAgB,OAAQD,EAAa,KACrC,IAAAC,iBAAgB,UAAWD,EAAa,IACxC,IAAAC,iBAAgB,QAASD,EAAa,E,CAGxC,EAAAzB,IAAI2B,SAASC,IAAM,EAAAC,O,6FCtBN,EAAAA,QAAU,Q,+3BCHvB,eAGA,YACA,SA2FsC,oBAAbC,WAAyE,QAA7C,EAAQ,OAARA,eAAQ,IAARA,cAAQ,EAARA,SAAUC,qBAAmC,SAAEC,KAEvF,EAAAf,8BAAgCD,UAgClC,IAAAiB,uBAAsB,EAAAjC,IAAIC,MAIxB,EAAAiC,kBAAoBlB,MAAMhB,UAS7BmC,EAAKC,YAAYpC,E,EAId,EAAAqC,sBAAwBrB,MAAMsB,GAShCH,EAAKE,sBAAsBC,GAIzB,EAAAC,sBAAwBvB,MAAMwB,EAAkCrB,IAU9DgB,EAAKI,sBAAsBC,EAAWrB,GAIxC,EAAAsB,cACTzB,MAAMsB,EAAmBnB,IASlBgB,EAAKM,cAAcH,EAAOnB,GAIxB,EAAAuB,eAAiB1B,MAAM2B,IAShCR,EAAKO,eAAeC,E,EAIX,EAAAC,IAAM5B,MACf2B,EAAmBE,EAAwBC,EAA8BC,EACzE5B,IASOgB,EAAKS,IAAID,EAAWE,EAAcC,EAAQC,EAAe5B,GAIvD,EAAA6B,aAAehC,MAAM2B,IAS9BR,EAAKa,aAAaL,E,sGC9NtB,eACA,SAEa,EAAAM,cAAiB9B,IAC5B,MAAMlB,GAAO,IAAAiD,eACb,IAAIC,EAAmB,EACvB,MAAMC,EAAmB,GAEnBC,EAA0ClC,GAAW,CAAC,EAE5D,IACE,QAAkCmC,KAA9BnC,aAAO,EAAPA,EAASoC,kBACXF,EAAWE,iBAAmB,OACzB,GACiC,iBAA7BpC,EAAQoC,mBAAkCjD,OAAOC,UAAUY,EAAQoC,mBAC1EpC,EAAQoC,iBAAmB,GAAKpC,EAAQoC,iBAAmB,EAC7D,MAAM,IAAIC,MAAM,qCAAqCrC,EAAQoC,oBAG/D,QAAmCD,KAA/BnC,aAAO,EAAPA,EAASsC,mBACXJ,EAAWI,kBAAoB,OAC1B,GAAyC,iBAA9BtC,EAAQsC,oBAAmCnD,OAAOC,UAAUY,EAAQsC,mBACpF,MAAM,IAAID,MAAM,qCAAqCrC,EAAQsC,0BAGpCH,KAAvBnC,aAAO,EAAPA,EAASuC,aACXL,EAAWK,WAAY,GAGzB,IAAIC,EAAgB,EAsBpB,YArBqBL,KAAjBnC,aAAO,EAAPA,EAASyC,OACXD,GAAgB,IAAAE,iBAAgB1C,EAAQyC,IAAKR,IAG/CD,EAAmBlD,EAAK6D,qBACpBT,EAAWE,iBAAmBF,EAAWI,oBAAsBJ,EAAWK,UAAYC,GACjE,IAArBR,IACF,IAAAY,gBAAe,kCAGMT,KAAnBnC,aAAO,EAAPA,EAAS6C,SACX,IAAAC,qBAAoB9C,EAAQ6C,MAAO,GAAI,IAAIE,SAAoC,CAACC,EAAKC,KACnF,MAAMC,GAAgB,IAAAR,iBAAgBM,EAAKf,GACrCkB,GAAkB,IAAAT,iBAAgBO,EAAOhB,GAEsC,IAAjFnD,EAAKsE,sBAAsBpB,EAAkBkB,EAAeC,KAC9D,IAAAP,gBAAe,iCAAiCI,OAASC,K,IAKxD,CAACjB,EAAkBC,E,CAC1B,MAAOoB,GAKP,MAJyB,IAArBrB,GACFlD,EAAKwE,sBAAsBtB,GAE7BC,EAAOsB,SAAQC,GAAS1E,EAAK2E,MAAMD,KAC7BH,C,8HC3DV,eACA,SACA,SAGA,SAEA,IAAIK,EAEJ,6CAME7D,4BAA4B8D,GAG1B,MAAMC,QAAiBC,MAAMF,GAC7B,GAAwB,MAApBC,EAASE,OACX,MAAM,IAAIzB,MAAM,yBAAyBsB,KAE3C,MAAMI,QAAoBH,EAASG,cACnC,OAAO,IAAA7C,uBAAsB,IAAI8C,WAAWD,GAC9C,CAEAlE,gBAAgBE,EAAiCC,GAM/C,GALK0D,UACG,IAAA3C,mBAAkB,EAAAlC,KACxB6E,GAAqB,GAGK,iBAAjB3D,EACT,GAAuB,oBAAZkE,SAA2BA,QAAQzD,UAAYyD,QAAQzD,SAAS0D,KAAM,CAE/E,MAAM/C,QAAc,IAAAgD,WAAU,EAAAC,SAAV,CAAoBrE,IACvCsE,KAAK7C,UAAW6C,KAAKC,WAAYD,KAAKE,mBAAqB,IAAAjD,eAAcH,EAAOnB,E,KAC5E,CAGL,MAAMwE,QAAyCH,KAAKnD,sBAAsBnB,IAEzEsE,KAAK7C,UAAW6C,KAAKC,WAAYD,KAAKE,mBAAqB,IAAAnD,uBAAsBoD,EAAWxE,E,MAG9FqE,KAAK7C,UAAW6C,KAAKC,WAAYD,KAAKE,mBAAqB,IAAAjD,eAAcvB,EAAcC,EAE5F,CAEAH,gBACE,OAAO,IAAA0B,gBAAe8C,KAAK7C,UAC7B,CAEA3B,UAAU4E,EAAiCC,EAAqC1E,GAE9E,MAAM2E,EAAuB,GACvBjD,EAAyB,GAC/BkD,OAAOC,QAAQJ,GAAOlB,SAAQuB,IAC5B,MAAMC,EAAOD,EAAI,GACXE,EAASF,EAAI,GACbG,EAAQZ,KAAKC,WAAWY,QAAQH,GACtC,IAAe,IAAXE,EACF,MAAM,IAAI5C,MAAM,kBAAkB0C,MAEpCJ,EAAWQ,KAAKH,GAChBtD,EAAayD,KAAKF,EAAM,IAG1B,MAAMrD,EAA0B,GAChCgD,OAAOC,QAAQH,GAASnB,SAAQuB,IAC9B,MAAMC,EAAOD,EAAI,GAEXG,EAAQZ,KAAKE,YAAYW,QAAQH,GACvC,IAAe,IAAXE,EACF,MAAM,IAAI5C,MAAM,mBAAmB0C,MAErCnD,EAAcuD,KAAKF,EAAM,IAG3B,MAAMG,QACI,IAAA3D,KAAI4C,KAAK7C,UAAWE,EAAciD,EAAWU,KAAIC,GAAK,CAACA,EAAEC,KAAMD,EAAEE,KAAMF,EAAEG,QAAQ7D,EAAe5B,GAEpG0F,EAAoC,CAAC,EAC3C,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQ5F,OAAQmG,IAClCD,EAAOrB,KAAKE,YAAY3C,EAAc+D,KAAO,IAAI,EAAAC,OAAOR,EAAQO,GAAG,GAAIP,EAAQO,GAAG,GAAIP,EAAQO,GAAG,IAEnG,OAAOD,CACT,CAEAG,iBAEA,CAEAhE,gBACO,IAAAA,cAAawC,KAAK7C,UACzB,E,yGC7FF,eACA,SAmGa,EAAAsE,kBAAqB9F,I,YAChC,MAAMlB,GAAO,IAAAiD,eACb,IAAIgE,EAAuB,EAC3B,MAAM9D,EAAmB,GAEnB+D,EAAkDhG,GAAW,CAAC,EA5EzC,CAACA,IACvBA,EAAQ6C,QACX7C,EAAQ6C,MAAQ,CAAC,GAEd7C,EAAQ6C,MAAMoD,UACjBjG,EAAQ6C,MAAMoD,QAAU,CAAC,GAE3B,MAAMA,EAAUjG,EAAQ6C,MAAMoD,QACzBA,EAAQC,+BAEXD,EAAQC,6BAA+B,KAIrClG,EAAQmG,oBACRnG,EAAQmG,mBAAmBC,MAAKC,GAAkD,YAA7B,iBAAPA,EAAkBA,EAAKA,EAAGtB,UAC1E/E,EAAQsG,kBAAmB,E,EA6D7BC,CAAqBP,GAErB,IACE,MAAMQ,EA1GuB,CAACA,IAChC,OAAQA,GACN,IAAK,WACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,IAAK,MACH,OAAO,GACT,QACE,MAAM,IAAInE,MAAM,yCAAyCmE,K,EA+F5BC,CAA8D,QAArC,EAAAT,EAAeQ,8BAAsB,QAAI,OAC3FE,EA5Fe,CAACA,IACxB,OAAQA,GACN,IAAK,aACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,QACE,MAAM,IAAIrE,MAAM,+BAA+BqE,K,EAqF3BC,CAA6C,QAA5B,EAAAX,EAAeU,qBAAa,QAAI,cACjEE,EAC8B,iBAAzBZ,EAAea,OAAqB,IAAAnE,iBAAgBsD,EAAea,MAAO5E,GAAU,EAEzFG,EAAkD,QAA/B,EAAA4D,EAAe5D,wBAAgB,QAAI,EAC5D,IAAKjD,OAAOC,UAAUgD,IAAqBA,EAAmB,GAAKA,EAAmB,EACpF,MAAM,IAAIC,MAAM,qCAAqCD,KAGvD,MAAME,EAAoD,QAAhC,EAAA0D,EAAe1D,yBAAiB,QAAI,EAC9D,IAAKnD,OAAOC,UAAUkD,IAAsBA,EAAoB,GAAKA,EAAoB,EACvF,MAAM,IAAID,MAAM,qCAAqCC,KAGvD,MAAMwE,EAAgF,iBAA1Cd,EAAee,wBACvD,IAAArE,iBAAgBsD,EAAee,uBAAwB9E,GACvD,EAyBJ,OAvBA8D,EAAuBjH,EAAKkI,yBACxBR,IAA0BR,EAAeiB,oBAAqBjB,EAAeM,iBAAkBI,IAC7FV,EAAekB,gBAAiB,EAAGN,EAAiBxE,EAAkBE,EACxEwE,GACyB,IAAzBf,IACF,IAAAnD,gBAAe,iCAGboD,EAAeG,oBAtFnB,EAACJ,EAA8BI,EAC9BlE,KACC,IAAK,MAAMoE,KAAMF,EAAoB,CACnC,IAAIgB,EAAuB,iBAAPd,EAAkBA,EAAKA,EAAGtB,KAG9C,OAAQoC,GACN,IAAK,UACHA,EAAS,UACT,MACF,IAAK,QAEH,GADAA,EAAS,QACS,iBAAPd,EAAiB,CAC1B,MAAMe,EAAef,EACrB,GAAIe,aAAY,EAAZA,EAAcC,WAAY,CAC5B,MAAMnE,GAAgB,IAAAR,iBAAgB,aAAcT,GAC9CkB,GAAkB,IAAAT,iBAAgB0E,EAAaC,WAAYpF,GAE7D,KADA,IAAAF,eAAcuF,0BAA0BvB,EAAsB7C,EAAeC,KAE/E,IAAAP,gBAAe,oDAAoDwE,EAAaC,c,CAGpF,GAAID,aAAY,EAAZA,EAAcG,gBAAiB,CACjC,MAAMrE,GAAgB,IAAAR,iBAAgB,kBAAmBT,GACnDkB,GAAkB,IAAAT,iBAAgB0E,EAAaG,gBAAiBtF,GAElE,KADA,IAAAF,eAAcuF,0BAA0BvB,EAAsB7C,EAAeC,KAE/E,IAAAP,gBACI,yDAAyDwE,EAAaG,mB,EAIhF,MACF,IAAK,SACHJ,EAAS,KACT,MACF,IAAK,OACL,IAAK,MACH,SACF,QACE,MAAM,IAAI9E,MAAM,qCAAqC8E,KAGzD,MAAMK,GAAmB,IAAA9E,iBAAgByE,EAAQlF,GACyC,KAAtF,IAAAF,eAAc0F,4BAA4B1B,EAAsByB,KAClE,IAAA5E,gBAAe,oCAAoCuE,K,GA0CvDO,CAAsB3B,EAAsBC,EAAeG,mBAAoBlE,QAGpDE,IAAzB6D,EAAenD,QACjB,IAAAC,qBAAoBkD,EAAenD,MAAO,GAAI,IAAIE,SAAoC,CAACC,EAAKC,KAC1F,MAAMC,GAAgB,IAAAR,iBAAgBM,EAAKf,GACrCkB,GAAkB,IAAAT,iBAAgBO,EAAOhB,GAE8C,IAAzFnD,EAAKwI,0BAA0BvB,EAAsB7C,EAAeC,KACtE,IAAAP,gBAAe,qCAAqCI,OAASC,K,IAK5D,CAAC8C,EAAsB9D,E,CAC9B,MAAOoB,GAKP,MAJ6B,IAAzB0C,GACFjH,EAAK6I,0BAA0B5B,GAEjC9D,EAAOsB,SAAQC,GAAS1E,EAAK2E,MAAMD,KAC7BH,C,iOCjIG,EAAAuE,2BAA8BrC,IACzC,OAAQA,GACN,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GACT,IAAK,UACH,OAAO,GACT,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,GACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GAET,QACE,MAAM,IAAIlD,MAAM,0BAA0BkD,K,EAOnC,EAAAsC,2BAA8BC,IACzC,OAAQA,GACN,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SACT,KAAK,GACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,GACH,MAAO,UACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SAET,QACE,MAAM,IAAIzF,MAAM,0BAA0ByF,K,EAQnC,EAAAC,qBAAwBC,GACpB,MAAC7F,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAAGA,EAAW,EAAG,EAAG,EAAG,EAAG,OAAGA,OAAWA,OAAWA,GAAW6F,GAKhG,EAAAC,kCAAqC1C,IAG5C,OAAQA,GACN,IAAK,UAQL,IAAK,SACH,OAAO2C,YAPT,IAAK,UACH,OAAOC,aACT,IAAK,QAUL,IAAK,OACH,OAAOnE,WATT,IAAK,OACH,OAAOoE,UAGT,IAAK,QACH,OAAOC,WACT,IAAK,QACH,OAAOC,WAGT,IAAK,UACH,OAAOC,aACT,IAAK,SACH,OAAOC,YACT,IAAK,QACH,OAAOC,cACT,IAAK,SACH,OAAOC,eACT,QACE,MAAM,IAAIrG,MAAM,qBAAqBkD,K,EAOlC,EAAAoD,qBAAwBC,IACnC,OAAQA,GACN,IAAK,UACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,QACE,MAAM,IAAIvG,MAAM,8BAA8BuG,K,uOC7JpD,eACA,SACA,SACA,SACA,SAsCa,EAAA3H,YAAcpB,MAAMhB,IAXjB,IAACK,EAAoB2J,EAApB3J,EAaPL,EAAIC,KAAKI,WAbkB2J,GAaL,IAAAF,sBAAqB9J,EAAI+J,UAXrC,KADA,IAAA7G,eAAc+G,SAAS5J,EAAY2J,KAEnD,IAAAjG,gBAAe,gCAYgB,EAcnC,MAAMmG,EAAiB,IAAIC,IAMd,EAAA9H,sBAAyBC,IACpC,MAAMrC,GAAO,IAAAiD,eACPkH,EAAkBnK,EAAKoK,QAAQ/H,EAAMgI,YAC3C,GAAwB,IAApBF,EACF,MAAM,IAAI5G,MAAM,+DAA+DlB,EAAMgI,eAGvF,OADArK,EAAKsK,OAAOC,IAAIlI,EAAO8H,GAChB,CAACA,EAAiB9H,EAAMgI,WAAW,EAS/B,EAAA/H,sBACT,CAACoD,EAAkCxE,KACjC,MAAMlB,GAAO,IAAAiD,eAEb,IAAIuH,EAAgB,EAChBvD,EAAuB,EACvB9D,EAAmB,GACvB,MAAMsH,EAAwB,GACxBC,EAAyB,GAE/B,KACGzD,EAAsB9D,IAAU,IAAA6D,mBAAkB9F,GAEnDsJ,EAAgBxK,EAAK2K,kBAAkBjF,EAAU,GAAIA,EAAU,GAAIuB,GAC7C,IAAlBuD,IACF,IAAA1G,gBAAe,2BAGjB,MAAO8G,EAAYC,GAzFQ,CAACL,IAClC,MAAMxK,GAAO,IAAAiD,eACP6H,EAAQ9K,EAAK+K,YACnB,IACE,MAAMC,EAAahL,EAAKiL,WAAW,GAKnC,OAHkB,IADAjL,EAAKkL,wBAAwBV,EAAeQ,EAAYA,EAAa,KAErF,IAAAlH,gBAAe,yCAEV,CAAC9D,EAAKmL,OAAOH,EAAa,GAAIhL,EAAKmL,OAAOH,EAAa,EAAI,G,SAElEhL,EAAKoL,aAAaN,E,GA8EoBO,CAA2Bb,GAEvDhF,EAAa,GACbC,EAAc,GACpB,IAAK,IAAIoB,EAAI,EAAGA,EAAI+D,EAAY/D,IAAK,CACnC,MAAMZ,EAAOjG,EAAKsL,iBAAiBd,EAAe3D,GACrC,IAATZ,IACF,IAAAnC,gBAAe,4BAEjB2G,EAAsBpE,KAAKJ,GAC3BT,EAAWa,KAAKrG,EAAKuL,aAAatF,G,CAEpC,IAAK,IAAIY,EAAI,EAAGA,EAAIgE,EAAahE,IAAK,CACpC,MAAMZ,EAAOjG,EAAKwL,kBAAkBhB,EAAe3D,GACtC,IAATZ,IACF,IAAAnC,gBAAe,6BAEjB4G,EAAuBrE,KAAKJ,GAC5BR,EAAYY,KAAKrG,EAAKuL,aAAatF,G,CAIrC,OADAgE,EAAeM,IAAIC,EAAe,CAACA,EAAeC,EAAuBC,IAClE,CAACF,EAAehF,EAAYC,E,CACnC,MAAOlB,GAOP,MANAkG,EAAsBhG,SAAQgH,GAAOzL,EAAK0L,SAASD,KACnDf,EAAuBjG,SAAQgH,GAAOzL,EAAK0L,SAASD,KAE9B,IAAlBjB,GACFxK,EAAK2L,mBAAmBnB,GAEpBjG,C,SAENvE,EAAK2E,MAAMe,EAAU,IACQ,IAAzBuB,GACFjH,EAAK6I,0BAA0B5B,GAEjC9D,EAAOsB,SAAQC,GAAS1E,EAAK2E,MAAMD,I,GAS9B,EAAAlC,cACT,CAACH,EAAmBnB,KAClB,MAAMwE,GAAmC,IAAAtD,uBAAsBC,GAC/D,OAAO,IAAAC,uBAAsBoD,EAAWxE,EAAQ,EAGzC,EAAAuB,eAAkBC,IAC7B,MAAM1C,GAAO,IAAAiD,eACPkE,EAAU8C,EAAe2B,IAAIlJ,GACnC,IAAKyE,EACH,MAAM,IAAI5D,MAAM,+CAA+Cb,KAEjE,MAAO8H,EAAeC,EAAuBC,GAA0BvD,EAEvEsD,EAAsBhG,SAAQgH,GAAOzL,EAAK0L,SAASD,KACnDf,EAAuBjG,SAAQgH,GAAOzL,EAAK0L,SAASD,KACpDzL,EAAK2L,mBAAmBnB,GACxBP,EAAe4B,OAAOnJ,EAAU,EAMrB,EAAAC,IAAM5B,MACf2B,EAAmBE,EAAwBC,EAA8BC,EACzE5B,KACF,MAAMlB,GAAO,IAAAiD,eACPkE,EAAU8C,EAAe2B,IAAIlJ,GACnC,IAAKyE,EACH,MAAM,IAAI5D,MAAM,6CAA6Cb,KAE/D,MAAO8H,EAAeC,EAAuBC,GAA0BvD,EAEjEyD,EAAahI,EAAalC,OAC1BmK,EAAc/H,EAAcpC,OAElC,IAAIwC,EAAmB,EACnB4I,EAA6B,GAEjC,MAAMC,EAAwB,GACxBC,EAAwB,GAE9B,KACG9I,EAAkB4I,IAAoB,IAAA9I,eAAc9B,GAGrD,IAAK,IAAI2F,EAAI,EAAGA,EAAI+D,EAAY/D,IAAK,CACnC,MAAMoF,EAAWpJ,EAAOgE,GAAG,GACrBH,EAAO7D,EAAOgE,GAAG,GACjBF,EAAO9D,EAAOgE,GAAG,GAEvB,IAAImE,EACAkB,EAEJ,GAAIC,MAAMC,QAAQzF,GAAO,CAEvBuF,EAAiB,EAAIvF,EAAKjG,OAC1BsK,EAAahL,EAAKoK,QAAQ8B,GAC1BF,EAAY3F,KAAK2E,GACjB,IAAIqB,EAAYrB,EAAa,EAC7B,IAAK,IAAInE,EAAI,EAAGA,EAAIF,EAAKjG,OAAQmG,IAAK,CACpC,GAAuB,iBAAZF,EAAKE,GACd,MAAM,IAAIyF,UAAU,wBAAwBzF,qBAE9C7G,EAAKuM,QAAQF,MAAe,IAAAzI,iBAAgB+C,EAAKE,GAAImF,E,OAGvDE,EAAiBvF,EAAK0D,WACtBW,EAAahL,EAAKoK,QAAQ8B,GAC1BF,EAAY3F,KAAK2E,GACjBhL,EAAKsK,OAAOC,IAAI,IAAIrF,WAAWyB,EAAK6F,OAAQ7F,EAAK8F,WAAYP,GAAiBlB,GAGhF,MAAMF,EAAQ9K,EAAK+K,YACb2B,EAAa1M,EAAKiL,WAAW,EAAIvE,EAAKhG,QAC5C,IACE,IAAIiM,EAAWD,EAAa,EAC5BhG,EAAKjC,SAAQmI,GAAK5M,EAAKmL,OAAOwB,KAAcC,IAC5C,MAAM1G,EAASlG,EAAK6M,kBAChB,IAAA/D,4BAA2BmD,GAAWjB,EAAYkB,EAAgBQ,EAAYhG,EAAKhG,QACxE,IAAXwF,IACF,IAAApC,gBAAe,iCAAiC+C,OAElDkF,EAAY1F,KAAKH,E,SAEjBlG,EAAKoL,aAAaN,E,EAItB,MAAMgC,EAAiB9M,EAAK+K,YACtBgC,EAAoB/M,EAAKiL,WAAwB,EAAbL,GACpCoC,EAAmBhN,EAAKiL,WAAwB,EAAbL,GACnCqC,EAAqBjN,EAAKiL,WAAyB,EAAdJ,GACrCqC,EAAoBlN,EAAKiL,WAAyB,EAAdJ,GAE1C,IACE,IAAIsC,EAAmBJ,EAAoB,EACvCK,EAAkBJ,EAAmB,EACrCK,EAAoBJ,EAAqB,EACzCK,EAAmBJ,EAAoB,EAC3C,IAAK,IAAIrG,EAAI,EAAGA,EAAI+D,EAAY/D,IAC9B7G,EAAKuM,QAAQY,KAAsBpB,EAAYlF,GAC/C7G,EAAKuM,QAAQa,KAAqB3C,EAAsB7H,EAAaiE,IAEvE,IAAK,IAAIA,EAAI,EAAGA,EAAIgE,EAAahE,IAC/B7G,EAAKuM,QAAQc,KAAuB,EACpCrN,EAAKuM,QAAQe,KAAsB5C,EAAuB5H,EAAc+D,IAI1E,IAAI0G,EAAYvN,EAAKwN,QACjBhD,EAAewC,EAAkBD,EAAmBnC,EAAYsC,EAAmBrC,EACnFoC,EAAoB/J,GAGxB,MAAMuK,EAAazN,EAAK0N,eACpBD,QAAyC,IAApBA,EAAWE,OAClCJ,QAAkBE,GAGpB,MAAMG,EAA+B,GAEnB,IAAdL,IACF,IAAAzJ,gBAAe,4BAGjB,IAAK,IAAI+C,EAAI,EAAGA,EAAIgE,EAAahE,IAAK,CACpC,MAAMX,EAASlG,EAAKuM,QAAQU,EAAqB,EAAIpG,GAE/CgH,EAA2B7N,EAAK+K,YAEhC+C,EAAmB9N,EAAKiL,WAAW,IAEzC,IAAIxE,EAA6BuE,EAAa,EAC9C,IACEuC,EAAYvN,EAAK+N,kBACb7H,EAAQ4H,EAAkBA,EAAmB,EAAGA,EAAmB,EAAGA,EAAmB,IAC3E,IAAdP,IACF,IAAAzJ,gBAAe,4CAA4C+C,MAE7D,IAAImH,EAAkBF,EAAmB,EACzC,MAAM7B,EAAWjM,EAAKuM,QAAQyB,KAC9BhD,EAAahL,EAAKuM,QAAQyB,KAC1B,MAAMtB,EAAa1M,EAAKuM,QAAQyB,KAC1BC,EAAajO,EAAKuM,QAAQyB,KAC1BtH,EAAO,GACb,IAAK,IAAIG,EAAI,EAAGA,EAAIoH,EAAYpH,IAC9BH,EAAKL,KAAKrG,EAAKuM,QAAQG,EAAa,EAAI7F,IAE1C7G,EAAK0L,SAASgB,GAEd,MAAMwB,EAAuB,IAAhBxH,EAAKhG,OAAe,EAAIgG,EAAKyH,QAAO,CAACC,EAAGC,IAAMD,EAAIC,IAE/D,GADA5H,GAAO,IAAAsC,4BAA2BkD,GACrB,WAATxF,EAAmB,CACrB,MAAM6H,EAAuB,GAC7B,IAAIjC,EAAYrB,EAAa,EAC7B,IAAK,IAAInE,EAAI,EAAGA,EAAIqH,EAAMrH,IAAK,CAC7B,MAAM0H,EAASvO,EAAKuM,QAAQF,KACtBmC,EAAiB3H,IAAMqH,EAAO,OAAI7K,EAAYrD,EAAKuM,QAAQF,GAAakC,EAC9ED,EAAWjI,KAAKrG,EAAKuL,aAAagD,EAAQC,G,CAE5CZ,EAAOvH,KAAK,CAACI,EAAMC,EAAM4H,G,KACpB,CACL,MACM3H,EAAO,KADiB,IAAAwC,mCAAkC1C,GACnD,CAA0ByH,GACvC,IAAIhJ,WAAWyB,EAAK6F,OAAQ7F,EAAK8F,WAAY9F,EAAK0D,YAC7CE,IAAIvK,EAAKsK,OAAOmE,SAASzD,EAAYA,EAAarE,EAAK0D,aAC5DuD,EAAOvH,KAAK,CAACI,EAAMC,EAAMC,G,UAG3B3G,EAAKoL,aAAayC,GACL,WAATpH,GAAqBuE,GACvBhL,EAAK2E,MAAMqG,GAEbhL,EAAK0O,kBAAkBxI,E,EAI3B,OAAO0H,C,SAEP5N,EAAKoL,aAAa0B,E,UAGpBf,EAAYtH,SAAQkK,GAAK3O,EAAK0O,kBAAkBC,KAChD3C,EAAYvH,SAAQmK,GAAK5O,EAAK2E,MAAMiK,KAEX,IAArB1L,GACFlD,EAAKwE,sBAAsBtB,GAE7B4I,EAAiBrH,SAAQmK,GAAK5O,EAAK2E,MAAMiK,I,GAOhC,EAAA7L,aAAgBL,IAC3B,MAAM1C,GAAO,IAAAiD,eACPkE,EAAU8C,EAAe2B,IAAIlJ,GACnC,IAAKyE,EACH,MAAM,IAAI5D,MAAM,sBAElB,MAAMiH,EAAgBrD,EAAQ,GAGxB0H,EAAkB7O,EAAK8O,iBAAiBtE,GACtB,IAApBqE,IACF,IAAA/K,gBAAe,mCAEjB9D,EAAK0L,SAASmD,EAAgB,EAGnB,EAAAE,2BAA8BC,IACzC,MAAMC,EAA6B,GACnC,IAAK,MAAM/I,KAAU8I,EAAS,CAC5B,MAAMrI,EAAOT,EAAO,IACfiG,MAAMC,QAAQzF,IAASA,EAAK6F,QAC/ByC,EAAQ5I,KAAKM,EAAK6F,O,CAGtB,OAAOyC,CAAO,C,mxBC/WhB,gBAMMC,EAC0B,EAAQ,KAElCC,EAGFD,EAGJ,IAAIlP,EACAoP,GAAc,EACdC,GAAe,EACfC,GAAU,EA2DD,EAAAtN,sBAAwBjB,MAAMwO,IACzC,GAAIH,EACF,OAAO9N,QAAQC,UAEjB,GAAI8N,EACF,MAAM,IAAI9L,MAAM,yDAElB,GAAI+L,EACF,MAAM,IAAI/L,MAAM,sDAGlB8L,GAAe,EAGf,MAAMG,EAAUD,EAAMtP,YAChBG,EAAamP,EAAMnP,WACnBF,EAAOqP,EAAMrP,KAEbuP,EAAarP,EAAa,GA3EH,MAC7B,IAEE,MAAiC,oBAAtBsP,oBAMmB,oBAAnBC,iBACT,IAAIA,gBAAiBC,MAAMC,YAAY,IAAIH,kBAAkB,IAKxDI,YAAYC,SAAS,IAAI7K,WAAW,CACzC,EAAG,GAAI,IAAK,IAAK,EAAG,EAAI,EAAI,EAAG,EAAG,EAAG,EAAI,GAAI,EAAK,EAAI,EAAG,EAAG,EAAI,EAAG,EACnE,EAAG,EAAI,EAAK,EAAK,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAI,IAAK,GAAI,EAAG,EAAG,GAAI,M,CAElE,MAAOX,GACP,OAAO,C,GAuD4ByL,GAC/BC,EAAU/P,GApDM,MACtB,IAeE,OAAO4P,YAAYC,SAAS,IAAI7K,WAAW,CACzC,EAAK,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAK,GAAK,EAAG,GAAI,EACvF,IAAK,GAAI,IAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAI,IAAK,IAAK,EAAG,GAAI,K,CAEzF,MAAOX,GACP,OAAO,C,GA+Be2L,GAElBC,EAAYZ,EAAMY,UAClBC,EAA0C,iBAAdD,EAAyBA,OAAY9M,EACjEgN,EA/BgB,EAACJ,EAAkBR,IACrCA,EACKQ,EAAU,8BAAgC,yBAE1CA,EAAU,qBAAuB,gBA2BrBK,CAAgBL,EAASR,GACxCc,EAAwC,iBAAdJ,EAAyBA,EAAUE,QAAgBhN,EAEnF,IAAImN,GAAY,EAEhB,MAAMC,EAA8B,GA6EpC,GA1EIjB,EAAU,GACZiB,EAAMpK,KAAK,IAAI/E,SAASC,IACtBmP,YAAW,KACTF,GAAY,EACZjP,GAAS,GACRiO,EAAQ,KAKfiB,EAAMpK,KAAK,IAAI/E,SAAQ,CAACC,EAASoP,MACflB,EAAaN,EAAyBD,GACf,CACrC0B,WAAY,CAACC,EAAkBC,IAYzBD,EAASE,SAAS,SAChBR,IAIWH,QAAAA,EAAsBU,GAUrBT,EAGXS,EAAkBD,IAablD,MAEZhO,IACE0P,GAAe,EACfD,GAAc,EACdpP,EAAOL,EACP4B,GAAS,IAGVyP,IACC3B,GAAe,EACfC,GAAU,EACVqB,EAAOK,EAAK,GACZ,WAGF1P,QAAQ2P,KAAKR,GAEfD,EACF,MAAM,IAAIjN,MAAM,2DAA2DiM,M,EAIlE,EAAAvM,YAAc,KACzB,GAAImM,GAAepP,EACjB,OAAOA,EAGT,MAAM,IAAIuD,MAAM,sCAAsC,EAG3C,EAAA2N,QAAU,K,OACjB9B,GAAgBC,GAAiBC,IACnCD,GAAe,EAEwB,QAAtC,EAAArP,EAA+BmR,eAAO,SAAEC,sBACzCpR,OAAOqD,EAEPgM,GAAe,EACfD,GAAc,EACdE,GAAU,E,+IC7Md,eAEa,EAAA1L,gBAAkB,CAAC+C,EAAcxD,KAC5C,MAAMnD,GAAO,IAAAiD,eAEPoO,EAAarR,EAAKsR,gBAAgB3K,GAAQ,EAC1CqE,EAAahL,EAAKoK,QAAQiH,GAIhC,OAHArR,EAAKuR,aAAa5K,EAAMqE,EAAYqG,GACpClO,EAAOkD,KAAK2E,GAELA,CAAU,EAON,EAAAhH,oBACT,CAAC9C,EAAkCsQ,EAAgBC,EAClDtQ,KACC,GAAsB,iBAAXD,GAAmC,OAAZA,EAAkB,CAClD,GAAIuQ,EAAKC,IAAIxQ,GACX,MAAM,IAAIqC,MAAM,iCAEhBkO,EAAKE,IAAIzQ,E,CAIb4E,OAAOC,QAAQ7E,GAASuD,SAAQ,EAAEP,EAAKC,MACrC,MAAM8B,EAAO,EAAWuL,EAAStN,EAAMA,EACvC,GAAqB,iBAAVC,GACT,IAAAH,qBAAoBG,EAAkC8B,EAAO,IAAKwL,EAAMtQ,QACnE,GAAqB,iBAAVgD,GAAuC,iBAAVA,EAC7ChD,EAAQ8E,EAAM9B,EAAMyN,gBACf,IAAqB,kBAAVzN,EAGhB,MAAM,IAAIZ,MAAM,0CAA0CY,GAF1DhD,EAAQ8E,EAAM,EAAU,IAAM,I,IAIhC,EAOK,EAAAnC,eAAkB+N,IAC7B,MAAM7R,GAAO,IAAAiD,eAEP6H,EAAQ9K,EAAK+K,YACnB,IACE,MAAM+G,EAAe9R,EAAKiL,WAAW,GACrCjL,EAAK+R,iBAAiBD,EAAcA,EAAe,GACnD,MAAMvE,EAAYvN,EAAKmL,OAAO2G,EAAe,GACvCE,EAAsBhS,EAAKuM,QAAQuF,EAAe,EAAI,GACtDG,EAAeD,EAAsBhS,EAAKuL,aAAayG,GAAuB,GACpF,MAAM,IAAIzO,MAAM,GAAGsO,iBAAuBtE,qBAA6B0E,I,SAEvEjS,EAAKoL,aAAaN,E,kBC5DtB,IACMoH,WADFC,GACED,WAAiC,oBAAbrQ,UAA4BA,SAASC,cAAgBD,SAASC,cAAcC,SAAMsB,EAChF,oBAAf+O,aAA4BF,WAAaA,YAAcE,YAC3D,SACAC,EAAY,CAAC,GAEtB,IAAgBC,EAAGC,EAAfhO,EAAE8N,EAAe9N,EAAEiO,MAAM,IAAIlR,SAAQ,CAAC8M,EAAEC,KAAKiE,EAAGlE,EAAEmE,EAAElE,KAAI,IAA2OoE,EAAEC,EAAEC,EAA3OC,EAAG9M,OAAO+M,OAAO,CAAC,EAAEtO,GAAGuO,EAAE,iBAAiBC,EAAE,CAAC3E,EAAEC,KAAK,MAAMA,CAAC,EAAG2E,EAAG,iBAAiBC,OAAOtE,EAAE,mBAAmBuE,cAAcC,EAAE,iBAAiBhO,SAAS,iBAAiBA,QAAQzD,UAAU,iBAAiByD,QAAQzD,SAAS0D,KAAKgO,EAAE,GACpS,GAAGD,EAAE,CAAC,IAAIE,EAAG,EAAQ,KAAMC,EAAE,EAAQ,KAAQF,EAAEzE,EAAE2E,EAAEC,QAAQH,GAAG,IAAII,UAAU,IAAIf,EAAE,CAACrE,EAAEC,KAAKD,EAAEA,EAAEqF,WAAW,WAAW,IAAIC,IAAItF,GAAGkF,EAAEK,UAAUvF,GAAUiF,EAAGO,aAAaxF,EAAEC,OAAE,EAAO,SAASsE,EAAEvE,KAAIA,EAAEqE,EAAErE,GAAE,IAAM5B,SAAS4B,EAAE,IAAIlJ,WAAWkJ,IAAWA,GAAGsE,EAAE,CAACtE,EAAEC,EAAEwF,EAAEC,GAAE,KAAM1F,EAAEA,EAAEqF,WAAW,WAAW,IAAIC,IAAItF,GAAGkF,EAAEK,UAAUvF,GAAGiF,EAAG/N,SAAS8I,EAAE0F,OAAE,EAAO,QAAO,CAACC,EAAEC,KAAKD,EAAEF,EAAEE,GAAG1F,EAAEyF,EAAEE,EAAExH,OAAOwH,EAAC,GAAE,GAAIzP,EAAE0P,aAAa,EAAE9O,QAAQ+O,KAAKxT,SAASoS,EAAE3N,QAAQ+O,KAAK,GAAGC,QAAQ,MAAM,MAAMhP,QAAQ+O,KAAKE,MAAM,GAAGrB,EAAE,CAAC3E,EAAEC,KAC/d,MADoelJ,QAAQkP,SAC9ejG,EAAQC,CAAC,EAAG9J,EAAE+P,QAAQ,IAAI,4BAA4B,MAAStB,GAAIrE,KAAEA,EAAEyE,EAAEtT,KAAKyU,SAASC,KAAK,oBAAoB3S,UAAUA,SAASC,gBAAgBsR,EAAEvR,SAASC,cAAcC,KAAKmQ,aAAakB,EAAElB,YAAmCkB,EAAvB,IAAIA,EAAEhN,QAAQ,SAAWgN,EAAEqB,OAAO,EAAErB,EAAEe,QAAQ,SAAS,IAAIO,YAAY,KAAK,GAAK,GAAGjC,EAAErE,IAAI,IAAIC,EAAE,IAAIsG,eAA+C,OAAhCtG,EAAEuG,KAAK,MAAMxG,GAAE,GAAIC,EAAEwG,KAAK,MAAaxG,EAAEyG,cAAcnG,IAAIgE,EAAEvE,IAAI,IAAIC,EAAE,IAAIsG,eAA4E,OAA7DtG,EAAEuG,KAAK,MAAMxG,GAAE,GAAIC,EAAE0G,aAAa,cAAc1G,EAAEwG,KAAK,MAAa,IAAI3P,WAAWmJ,EAAEvJ,SAAQ,GACtf4N,EAAE,CAACtE,EAAEC,EAAEwF,KAAK,IAAIC,EAAE,IAAIa,eAAeb,EAAEc,KAAK,MAAMxG,GAAE,GAAI0F,EAAEiB,aAAa,cAAcjB,EAAEkB,OAAO,KAAK,KAAKlB,EAAE9O,QAAQ,GAAG8O,EAAE9O,QAAQ8O,EAAEhP,SAASuJ,EAAEyF,EAAEhP,UAAU+O,GAAE,EAAGC,EAAEmB,QAAQpB,EAAEC,EAAEe,KAAK,KAAI,GAAG,IAAwKK,EAApKC,EAAG5Q,EAAE6Q,OAAOC,QAAQC,IAAIC,KAAKF,SAASG,EAAEjR,EAAEkR,UAAUJ,QAAQK,MAAMH,KAAKF,SAASvP,OAAO+M,OAAOtO,EAAEqO,GAAIA,EAAG,KAAKrO,EAAE0P,cAAcnB,EAAEvO,EAAE0P,aAAa1P,EAAEoR,OAAO5C,EAAExO,EAAEoR,MAAYpR,EAAEqR,aAAaV,EAAE3Q,EAAEqR,YAAY,IAAIC,EAActR,EAAEsR,gBAAe,EAAG,iBAAiB/F,aAAagG,EAAE,mCACtc,IAAIC,EAAEC,EAAOC,EAAEC,EAAEC,EAAEC,EAAXC,GAAE,EAAW,SAASC,IAAK,IAAIlI,EAAE2H,EAAEvJ,OAAOjI,EAAEgS,MAAMN,EAAE,IAAI3M,UAAU8E,GAAG7J,EAAEiS,OAAO,IAAIjN,WAAW6E,GAAG7J,EAAE4G,OAAOgL,EAAE,IAAI3M,WAAW4E,GAAG7J,EAAE+F,OAAO4L,EAAE,IAAIhR,WAAWkJ,GAAG7J,EAAEkS,QAAQ,IAAIrN,YAAYgF,GAAG7J,EAAEgI,QAAQ6J,EAAE,IAAI1M,YAAY0E,GAAG7J,EAAEmS,QAAQ,IAAIrN,aAAa+E,GAAG7J,EAAEoS,QAAQ,IAAIlN,aAAa2E,EAAE,CAAC,IAAIwI,EAAG,GAAGC,EAAG,GAAGC,EAAG,GAAG,SAASC,IAAK,IAAI3I,EAAE7J,EAAEyS,OAAOC,QAAQL,EAAGM,QAAQ9I,EAAE,CAAC,IACnH+I,EAEkIC,EAHXC,EAAE,EAAEC,EAAE,KAAKC,EAAE,KACpX,SAASzB,EAAE1H,GAA4I,MAAtI7J,EAAEiT,SAAQjT,EAAEiT,QAAQpJ,GAAsBoH,EAAnBpH,EAAE,WAAWA,EAAE,KAASiI,GAAE,EAAGjI,EAAE,IAAI0B,YAAY2H,aAAarJ,EAAE,4CAA4CmE,EAAEnE,GAASA,CAAE,CAAC,SAASsJ,EAAGtJ,GAAG,OAAOA,EAAEqF,WAAW,wCAAwC,CAAyB,IAAIiE,EAAtBP,EAAE,iBAA0B,CAAC,IAAIQ,EAAGR,EAAEA,EAAE5S,EAAEqM,WAAWrM,EAAEqM,WAAW+G,EAAGvE,GAAGA,EAAEuE,CAAE,CAAC,SAASC,EAAGxJ,GAAG,GAAGA,GAAG+I,GAAGjC,EAAE,OAAO,IAAIhQ,WAAWgQ,GAAG,GAAGvC,EAAE,OAAOA,EAAEvE,GAAG,KAAK,iDAAkD,CACjG,SAASyJ,EAAGzJ,EAAEC,EAAEwF,GAAG,OAA5W,SAAYzF,GAAG,IAAI8G,IAAIlC,GAAIrE,GAAG,CAAC,GAAG,mBAAmB5J,QAAQqJ,EAAEqF,WAAW,WAAW,OAAO1O,MAAMqJ,EAAE,CAAC0J,YAAY,gBAAgBnK,MAAKU,IAAI,IAAIA,EAAE0J,GAAG,KAAK,uCAAuC3J,EAAE,IAAI,OAAOC,EAAEpJ,aAAY,IAAI+S,OAAM,IAAIJ,EAAGxJ,KAAI,GAAGsE,EAAE,OAAO,IAAIpR,SAAQ,CAAC+M,EAAEwF,KAAKnB,EAAEtE,GAAE0F,GAAGzF,EAAE,IAAInJ,WAAW4O,KAAID,EAAC,GAAG,CAAC,OAAOvS,QAAQC,UAAUoM,MAAK,IAAIiK,EAAGxJ,IAAG,CAA2B6J,CAAG7J,GAAGT,MAAKmG,GAAGhE,YAAYoI,YAAYpE,EAAEzF,KAAIV,MAAKmG,GAAGA,IAAGnG,KAAKkG,GAAEC,IAAI0B,EAAE,0CAA0C1B,GAAGgC,EAAEhC,EAAC,GAAG,CACtH,SAASqE,EAAG/J,GAAG7I,KAAKU,KAAK,aAAaV,KAAKsM,QAAQ,gCAAgCzD,KAAK7I,KAAKP,OAAOoJ,CAAC,CAAC,IAAIgK,EAAEhK,IAAI,KAAK,EAAEA,EAAE1N,QAAQ0N,EAAE6I,OAAF7I,CAAU7J,EAAC,EAChgB,SAAS8T,EAAGjK,GAAG7I,KAAK4S,GAAG/J,EAAE,GAAG7I,KAAK+S,GAAG,SAASjK,GAAG+H,EAAE7Q,KAAK4S,GAAG,GAAG,IAAI,GAAG9J,CAAC,EAAE9I,KAAKgT,GAAG,SAASlK,GAAG+H,EAAE7Q,KAAK4S,GAAG,GAAG,IAAI,GAAG9J,CAAC,EAAE9I,KAAKiT,GAAG,SAASnK,EAAEwF,GAAGtO,KAAKkT,KAAKlT,KAAK+S,GAAGjK,GAAG9I,KAAKgT,GAAG1E,EAAE,EAAEtO,KAAKkT,GAAG,WAAWrC,EAAE7Q,KAAK4S,GAAG,IAAI,IAAI,GAAG,CAAC,CAAC,CACnN,IAGiJO,EAHnIH,EAAG,oBAAoBI,YAAY,IAAIA,YAAY,aAAQ,EAAOL,EAAG,CAAClK,EAAEC,EAAEwF,KAAY,IAAIC,GAAXzF,KAAK,GAAUwF,EAAE,IAAIA,EAAExF,EAAED,EAAEyF,MAAMA,GAAGC,MAAMD,EAAE,GAAG,GAAGA,EAAExF,GAAGD,EAAE5B,QAAQ+L,EAAG,OAAOA,EAAGK,OAAOxK,EAAEK,SAASJ,EAAEwF,IAAI,IAAIC,EAAE,GAAGzF,EAAEwF,GAAG,CAAC,IAAIE,EAAE3F,EAAEC,KAAK,GAAK,IAAF0F,EAAM,CAAC,IAAIC,EAAS,GAAP5F,EAAEC,KAAQ,GAAG,MAAQ,IAAF0F,GAAOD,GAAG+E,OAAOC,cAAgB,GAAF/E,IAAO,EAAEC,OAAO,CAAC,IAAI+E,EAAS,GAAP3K,EAAEC,KAAwE,OAAhE0F,EAAE,MAAQ,IAAFA,IAAU,GAAFA,IAAO,GAAGC,GAAG,EAAE+E,GAAK,EAAFhF,IAAM,GAAGC,GAAG,GAAG+E,GAAG,EAAS,GAAP3K,EAAEC,MAAgByF,GAAG+E,OAAOC,aAAa/E,IAAIA,GAAG,MAAMD,GAAG+E,OAAOC,aAAa,MAAM/E,GAAG,GAAG,MAAQ,KAAFA,GAAQ,CAAC,MAAMD,GAAG+E,OAAOC,aAAa/E,EAAE,CAAC,OAAOD,GACvgBkF,EAAE,CAAC5K,EAAEC,KAAKD,KAAK,GAAGkK,EAAGpC,EAAE9H,EAAEC,GAAG,GAAG4K,EAAE7K,IAAI,IAAI,IAAIC,EAAE,EAAEwF,EAAE,EAAEA,EAAEzF,EAAE1N,SAASmT,EAAE,CAAC,IAAIC,EAAE1F,EAAE8K,WAAWrF,GAAG,KAAKC,EAAEzF,IAAI,MAAMyF,EAAEzF,GAAG,EAAE,OAAOyF,GAAG,OAAOA,GAAGzF,GAAG,IAAIwF,GAAGxF,GAAG,CAAC,CAAC,OAAOA,GAAG8K,EAAE,CAAC/K,EAAEC,EAAEwF,EAAEC,KAAY,KAAK,EAAEA,GAAG,OAAO,EAAE,IAAIC,EAA9BF,KAAK,EAA6BC,EAAED,EAAEC,EAAE,EAAE,IAAI,IAAIE,EAAE,EAAEA,EAAE5F,EAAE1N,SAASsT,EAAE,CAAC,IAAI+E,EAAE3K,EAAE8K,WAAWlF,GAAgF,GAA1E,OAAO+E,GAAG,OAAOA,IAA2BA,EAAE,QAAU,KAAFA,IAAS,IAAM,KAA3C3K,EAAE8K,aAAalF,IAAoC,KAAK+E,EAAE,CAAC,GAAGlF,GAAGC,EAAE,MAAMzF,EAAEwF,MAAM,GAAGkF,CAAC,KAAK,CAAC,GAAG,MAAMA,EAAE,CAAC,GAAGlF,EAAE,GAAGC,EAAE,MAAMzF,EAAEwF,MAAM,GAAG,IAAIkF,GAAG,CAAC,KAAK,CAAC,GAAG,OAAOA,EAAE,CAAC,GAAGlF,EAAE,GAAGC,EAAE,MAAMzF,EAAEwF,MAAM,GAAG,IAAIkF,GAAG,EAAE,KAAK,CAAC,GAAGlF,EAAE,GACnfC,EAAE,MAAMzF,EAAEwF,MAAM,GAAG,IAAIkF,GAAG,GAAG1K,EAAEwF,MAAM,GAAG,IAAIkF,GAAG,GAAG,EAAE,CAAC1K,EAAEwF,MAAM,GAAG,IAAIkF,GAAG,EAAE,EAAE,CAAC1K,EAAEwF,MAAM,GAAG,IAAM,GAAFkF,CAAI,CAAC,CAAY,OAAX1K,EAAEwF,IAAI,GAAG,EAASA,EAAEE,GAAGqF,EAAEhL,GAAG,GAAIA,EAAE,IAAI,GAAIA,EAAE,KAAK,GAAIA,EAAE,KAAKiL,EAAG,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAGnL,IAAI,IAAIC,EAAE4K,EAAE7K,GAAG,EAAEyF,EAAE2F,GAAGnL,GAAiB,OAAdwF,GAAGsF,EAAE/K,EAAE8H,EAAErC,EAAExF,GAAUwF,GAAG4F,GAAE,CAAC,EAAEC,GAAG,KAAK,IAAIhB,EAAG,CAAC,IACjSrK,EADqSD,EAAE,CAACuL,KAAK,WAAWC,QAAQ,WAAWC,KAAK,IAAIC,IAAI,IAAIC,KAAK,iBAAiBC,MAAM,iBAAiBxZ,WAAWA,UAAUyZ,WAAWzZ,UAAUyZ,UAAU,IAAI,KAAK9F,QAAQ,IACnf,KAAK,SAAS+F,EAAEpH,GAAG,kBAAoB,IAAIzE,KAAKoL,QAAE,IAASA,GAAEpL,UAAUD,EAAEC,GAAGD,EAAEC,GAAGoL,GAAEpL,GAAG,IAAIwF,EAAE,GAAG,IAAIxF,KAAKD,EAAEyF,EAAExN,KAAK,GAAGgI,KAAKD,EAAEC,MAAMqK,EAAG7E,CAAC,CAAC,OAAO6E,GAAOyB,GAAG,CAAC,KAAK,GAAG,IAAmSC,GAAGhM,IAAIgM,GAAnS,MAAK,GAAG,iBAAiBC,QAAQ,mBAAmBA,OAAOC,gBAAgB,OAAOzG,GAAGwG,OAAOC,gBAAgBzG,GAAG,GAAGV,EAAE,IAAI,IAAI/E,EAAE,EAAQ,KAAU,GAAGA,EAAEmM,eAAe,OAAO1G,GAAGzF,EAAEmM,eAAe1G,GAAG,IAAIxF,EAAED,EAAEoM,YAAY,OAAO3G,IAAIA,EAAEtJ,IAAI8D,EAAEwF,EAAExJ,aAAawJ,EAAE,CAAC,MAAMA,GAAG,CAACiC,EAAE,mBAAkB,EAAa2E,IAAMrM,GAAGsM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAClf,GAAG,GAAG,IAAIC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAC/C,SAASC,GAAGxM,EAAEC,EAAEwF,EAAEC,GAAG,SAASC,EAAEnH,EAAEiO,EAAEjM,GAAG,IAAIhC,EAAE,iBAAiBA,EAAEA,EAAEgF,WAAWhF,GAAG,GAAGA,EAAElM,OAAOma,GAAGjO,EAAEgC,EAAE,GAAGhC,EAAE,OAAOA,CAAC,CAAC,SAASoH,EAAEpH,EAAEiO,GAAG,OAAO9G,EAAEnH,EAAEiO,EAAE,IAAI,CAAC,SAAS9B,EAAEnM,EAAEiO,GAAG,SAASjM,EAAEkM,GAAI,OAAO,EAAEA,GAAI,EAAE,EAAEA,EAAG,EAAE,CAAC,CAAC,IAAIC,EAAmH,OAAjH,KAAKA,EAAEnM,EAAEhC,EAAEoO,cAAcH,EAAEG,iBAAiB,KAAKD,EAAEnM,EAAEhC,EAAEqO,WAAWJ,EAAEI,eAAeF,EAAEnM,EAAEhC,EAAEsO,UAAUL,EAAEK,YAAmBH,CAAC,CAAC,SAASI,EAAEvO,GAAG,OAAOA,EAAEwO,UAAU,KAAK,EAAE,OAAO,IAAIC,KAAKzO,EAAEoO,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAOpO,EAAE,KAAK,EAAE,OAAO,IAAIyO,KAAKzO,EAAEoO,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIK,KAAKzO,EAAEoO,cAChf,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIK,KAAKzO,EAAEoO,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIK,KAAKzO,EAAEoO,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAIK,KAAKzO,EAAEoO,cAAc,EAAE,GAAG,IAAI,CAAC,SAASM,EAAE1O,GAAG,IAAIiO,EAAEjO,EAAEgL,GAAG,IAAIhL,EAAE,IAAIyO,KAAK,IAAKA,KAAKzO,EAAEqL,GAAG,KAAK,EAAE,GAAIsD,WAAW,EAAEV,GAAG,CAAC,IAAIjM,EAAEhC,EAAEqO,WAAWF,GAAG3B,EAAExM,EAAEoO,eAAeN,GAAGC,IAAI/L,GAAG,KAAGiM,EAAEE,EAAEnO,EAAEsO,WAAoH,CAACtO,EAAE4O,QAAQ5O,EAAEsO,UAAUL,GAAG,KAAK,CAAzIA,GAAGE,EAAEnO,EAAEsO,UAAU,EAAEtO,EAAE4O,QAAQ,GAAG,GAAG5M,EAAEhC,EAAE6O,SAAS7M,EAAE,IAAIhC,EAAE6O,SAAS,GAAG7O,EAAE8O,YAAY9O,EAAEoO,cAAc,GAAwC,CACxa,OADyapM,EAAE,IAAIyM,KAAKzO,EAAEoO,cAAc,EAAE,EAAE,GAAGH,EAAEM,EAAE,IAAIE,KAAKzO,EAAEoO,cACve,EAAE,IAAIpM,EAAEuM,EAAEvM,GAAU,GAAGmK,EAAE8B,EAAEjO,GAAG,GAAGmM,EAAEnK,EAAEhC,GAAGA,EAAEoO,cAAc,EAAEpO,EAAEoO,cAAcpO,EAAEoO,cAAc,CAAC,CAAC5M,KAAK,EAAEC,KAAK,EAAEwF,KAAK,EAAS,IAAIrN,EAAE2P,EAAI,IAAjBrC,KAAK,IAAgB,IAAI,GACyE,IAAI,IAAI6H,KAD9E7H,EAAE,CAAC0F,GAAGrD,EAAErC,GAAG,IAAI,GAAGwF,GAAGnD,EAAErC,EAAE,GAAG,IAAI,GAAG+D,GAAG1B,EAAErC,EAAE,GAAG,IAAI,GAAGuE,GAAGlC,EAAErC,EAAE,IAAI,IAAI,GAAG8H,GAAGzF,EAAErC,EAAE,IAAI,IAAI,GAAGmE,GAAG9B,EAAErC,EAAE,IAAI,IAAI,GAAG+C,GAAGV,EAAErC,EAAE,IAAI,IAAI,GAAG8D,GAAGzB,EAAErC,EAAE,IAAI,IAAI,GAAG+H,GAAG1F,EAAErC,EAAE,IAAI,IAAI,GAAGuF,GAAGlD,EAAErC,EAAE,IAAI,IAAI,GAAGgH,GAAGtU,EAAEwS,EAAExS,GAAG,IAAIqN,EAAEmF,EAAEnF,GAAGrN,EAAE,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KACnf,MAAM,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAqBqN,EAAEA,EAAEM,QAAQ,IAAI2H,OAAOH,EAAE,KAAKnV,EAAEmV,IAAI,IAAIE,EAAG,2DAA2DE,MAAM,KAAKC,EAAG,wFAAwFD,MAAM,KAE2D,IAAIJ,KAF1DnV,EAAE,CAAC,KAAKoG,GAAGiP,EAAGjP,EAAEiK,IAAIoF,UAAU,EAAE,GAAG,KAAKrP,GAAGiP,EAAGjP,EAAEiK,IAAI,KAAKjK,GAClfoP,EAAGpP,EAAEgP,IAAIK,UAAU,EAAE,GAAG,KAAKrP,GAAGoP,EAAGpP,EAAEgP,IAAI,KAAKhP,GAAGoH,GAAGpH,EAAEqL,GAAG,MAAM,IAAI,EAAE,GAAG,KAAKrL,GAAGoH,EAAEpH,EAAEyL,GAAG,GAAG,KAAKzL,GAAGmH,EAAEnH,EAAEyL,GAAG,EAAE,KAAK,KAAKzL,GAAG0O,EAAE1O,GAAGgF,WAAWqK,UAAU,GAAG,KAAKrP,GAAG0O,EAAE1O,GAAG,KAAKA,GAAGoH,EAAEpH,EAAEiL,GAAG,GAAG,KAAKjL,IAAW,IAAPA,EAAEA,EAAEiL,IAAQjL,EAAE,GAAG,GAAGA,IAAIA,GAAG,IAAWoH,EAAEpH,EAAE,IAAI,KAAKA,IAAI,IAAI,IAAIiO,EAAE,EAAEjM,EAAE,EAAEA,GAAGhC,EAAEgP,GAAG,EAAEf,IAAIzB,EAAExM,EAAEqL,GAAG,MAAMyC,GAAGC,IAAI/L,MAAM,OAAOoF,EAAEpH,EAAEyL,GAAGwC,EAAE,EAAC,EAAG,KAAKjO,GAAGoH,EAAEpH,EAAEgP,GAAG,EAAE,GAAG,KAAKhP,GAAGoH,EAAEpH,EAAE0M,GAAG,GAAG,KAAK,IAAI,KAAK,KAAK1M,GAAG,GAAGA,EAAEiL,IAAI,GAAGjL,EAAEiL,GAAG,KAAK,KAAK,KAAKjL,GAAGoH,EAAEpH,EAAE4M,GAAG,GAAG,KAAK,IAAI,KAAK,KAAK5M,GAAGA,EAAEiK,IAAI,EAAE,KAAKjK,GAAGoH,EAAEpT,KAAKsb,OAAOtP,EAAEgL,GAAG,EAAEhL,EAAEiK,IAAI,GAAG,GAAG,KAAKjK,IACpf,IAAIiO,EAAEja,KAAKsb,OAAOtP,EAAEgL,GAAG,GAAGhL,EAAEiK,GAAG,GAAG,GAAG,GAA+B,GAA5B,IAAIjK,EAAEiK,GAAG,IAAIjK,EAAEgL,GAAG,GAAG,GAAGiD,IAAOA,EAAE,IAAIA,IAAwB,IAApBjM,GAAGhC,EAAEiK,GAAG,IAAIjK,EAAEgL,IAAI,IAAQ,GAAGhJ,GAAGwK,EAAExM,EAAEqL,MAAM4C,EAAE,QAAQ,CAACA,EAAE,GAAG,IAAIjM,GAAGhC,EAAEiK,GAAG,EAAEjK,EAAEgL,GAAG,GAAG,GAAG,GAAGhJ,GAAG,GAAGA,GAAGwK,EAAExM,EAAEqL,GAAG,IAAI,KAAK4C,GAAG,CAAC,OAAO7G,EAAE6G,EAAE,EAAC,EAAG,KAAKjO,GAAGA,EAAEiK,GAAG,KAAKjK,GAAGoH,EAAEpT,KAAKsb,OAAOtP,EAAEgL,GAAG,GAAGhL,EAAEiK,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKjK,IAAIA,EAAEqL,GAAG,MAAMrG,WAAWqK,UAAU,GAAG,KAAKrP,GAAGA,EAAEqL,GAAG,KAAK,KAAKrL,IAAW,IAAIiO,EAAE,IAAbjO,EAAEA,EAAEyM,IAA+B,OAAjBzM,EAAEhM,KAAKub,IAAIvP,GAAG,IAAUiO,EAAE,IAAI,KAAKhC,OAAO,QAAQjM,EAAE,GAAG,IAAIA,EAAE,KAAKwH,OAAO,EAAC,EAAG,KAAKxH,GAAGA,EAAEkO,GAAG,KAAK,IAAI,KAAKjH,EAAEA,EAAEM,QAAQ,MAAM,QAAqB3N,EAAEqN,EAAEuI,SAAST,KACpgB9H,EAAEA,EAAEM,QAAQ,IAAI2H,OAAOH,EAAE,KAAKnV,EAAEmV,GAAG7H,KAAsC,OAAR6H,EAPf,SAAYvN,GAAG,IAAIC,EAAElC,MAAM8M,EAAE7K,GAAG,GAAqB,OAAlB+K,EAAE/K,EAAEC,EAAE,EAAEA,EAAE3N,QAAe2N,CAAC,CAO5CgO,CAA3BxI,EAAEA,EAAEM,QAAQ,QAAQ,MAAgBwH,EAAEjb,OAAO2N,EAAS,GAAE4H,EAAE1L,IAAIoR,EAAEvN,IAAI,GAAUuN,EAAEjb,OAAO,EAAC,CACjI,IAAI4b,GAAG,CAAClO,EAAE,SAASA,EAAEC,EAAEwF,GAAgD,MAAtC,IAAKwE,EAAZjK,KAAK,GAAcoK,GAAGnK,IAAI,EAAEwF,IAAI,GAAMzF,CAAgB,EAAE7J,EAAE,WAAW,OAAO,CAAC,EAAEyR,EAAE,WAAW,EAAE5C,EAAE,WAAW,EAAEX,EAAE,WAAW,EAAEwD,EAAE,WAAW,OAAO,CAAC,EAAEH,EAAE,WAAW,EAAEpD,EAAE,WAAW,EAAEwC,EAAE,WAAW,EAAEnB,EAAE,WAAW,EAAEgH,EAAE,WAAW,EAAEO,EAAE,WAAW,EAAEvF,EAAE,WAAW,EAAE5C,EAAE,WAAW,EAAEa,EAAE,KAAI,EAAG6G,EAAE,SAASzM,EAAEC,EAAEwF,GAAGzF,EAAEC,EAAE,UAAU,EAAE,UAAUD,GAAGA,IAAI,GAAG,WAAWC,EAAEkO,IAAI1I,KAAK,EAAEzF,EAAE,IAAIiN,KAAK,IAAIjN,GAAG+H,EAAEtC,GAAG,IAAI,GAAGzF,EAAEoO,gBAAgBrG,EAAEtC,EAAE,GAAG,IAAI,GAAGzF,EAAEqO,gBAAgBtG,EAAEtC,EAAE,GAAG,IAAI,GAAGzF,EAAEsO,cAAcvG,EAAEtC,EAAE,IAAI,IAClf,GAAGzF,EAAEuO,aAAaxG,EAAEtC,EAAE,IAAI,IAAI,GAAGzF,EAAEwO,cAAczG,EAAEtC,EAAE,IAAI,IAAI,GAAGzF,EAAEyO,iBAAiB,KAAK1G,EAAEtC,EAAE,IAAI,IAAI,GAAGzF,EAAE0O,YAAY3G,EAAEtC,EAAE,IAAI,IAAI,IAAIzF,EAAEmN,UAAUF,KAAK0B,IAAI3O,EAAEyO,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,MAAM,CAAC,EAAEG,EAAE,SAAS5O,EAAEC,EAAEwF,GAAGzF,EAAEC,EAAE,UAAU,EAAE,UAAUD,GAAGA,IAAI,GAAG,WAAWC,EAAEkO,IAAI1I,KAAK,EAAEzF,EAAE,IAAIiN,KAAK,IAAIjN,GAAG+H,EAAEtC,GAAG,IAAI,GAAGzF,EAAE6O,aAAa9G,EAAEtC,EAAE,GAAG,IAAI,GAAGzF,EAAE8O,aAAa/G,EAAEtC,EAAE,GAAG,IAAI,GAAGzF,EAAE+O,WAAWhH,EAAEtC,EAAE,IAAI,IAAI,GAAGzF,EAAE8M,UAAU/E,EAAEtC,EAAE,IAAI,IAAI,GAAGzF,EAAE6M,WAAW9E,EAAEtC,EAAE,IAAI,IAAI,GAAGzF,EAAE4M,cAAc,KAAK7E,EAAEtC,EAAE,IAAI,IAAI,GAAGzF,EAAEgN,SAASjF,EAAEtC,EAAE,IAAI,IACpf,IAAIuF,EAAEhL,EAAE4M,eAAe3B,EAAGC,IAAIlL,EAAE6M,YAAY7M,EAAE8M,UAAU,EAAE,EAAE/E,EAAEtC,EAAE,IAAI,IAAI,IAAK,GAAGzF,EAAEgP,oBAAqB/O,EAAE,IAAKgN,KAAKjN,EAAE4M,cAAc,EAAE,GAAIoC,oBAAoB,IAAItJ,EAAE,IAAKuH,KAAKjN,EAAE4M,cAAc,EAAE,GAAIoC,oBAAoBjH,EAAEtC,EAAE,IAAI,IAAI,GAAgD,GAA5CxF,GAAGyF,GAAG1F,EAAEgP,qBAAqBxc,KAAKC,IAAIiT,EAAEzF,GAAK,EAAEO,EAAE,SAASR,GAAGA,KAAK,EAAE,IAAIC,EAAE,IAAIgN,KAAKlF,EAAE/H,EAAE,IAAI,IAAI,GAAG,KAAK+H,EAAE/H,EAAE,IAAI,IAAI,GAAG+H,EAAE/H,EAAE,IAAI,IAAI,GAAG+H,EAAE/H,EAAE,GAAG,IAAI,GAAG+H,EAAE/H,EAAE,GAAG,IAAI,GAAG+H,EAAE/H,GAAG,IAAI,GAAG,GAAGyF,EAAEsC,EAAE/H,EAAE,IAAI,IAAI,GAAG0F,EAAEzF,EAAE+O,oBAAoBrJ,EAAE,IAAKsH,KAAKhN,EAAE2M,cAAc,EAAE,GAAIoC,oBAClepJ,EAAE,IAAKqH,KAAKhN,EAAE2M,cAAc,EAAE,GAAIoC,oBAAoBrE,EAAEnY,KAAKC,IAAImT,EAAED,GAA0Y,OAAvY,EAAEF,EAAEsC,EAAE/H,EAAE,IAAI,IAAI,GAAG/N,OAAO0T,GAAGC,GAAG+E,GAAGjF,GAAG,EAAED,IAAIkF,GAAGjF,KAAKC,EAAEnT,KAAKyc,IAAIrJ,EAAED,GAAG1F,EAAEiP,QAAQjP,EAAEkN,UAAU,MAAM,EAAE1H,EAAEkF,EAAEhF,GAAGD,KAAKqC,EAAE/H,EAAE,IAAI,IAAI,GAAGC,EAAE+M,SAASjF,EAAE/H,EAAE,IAAI,IAAI,IAAIgL,EAAE/K,EAAE2M,eAAe3B,EAAGC,IAAIjL,EAAE4M,YAAY5M,EAAE6M,UAAU,EAAE,EAAE/E,EAAE/H,GAAG,IAAI,GAAGC,EAAE4O,aAAa9G,EAAE/H,EAAE,GAAG,IAAI,GAAGC,EAAE6O,aAAa/G,EAAE/H,EAAE,GAAG,IAAI,GAAGC,EAAE8O,WAAWhH,EAAE/H,EAAE,IAAI,IAAI,GAAGC,EAAE6M,UAAU/E,EAAE/H,EAAE,IAAI,IAAI,GAAGC,EAAE4M,WAAW9E,EAAE/H,EAAE,IAAI,IAAI,GAAGC,EAAEkP,UAAUnP,EAAEC,EAAEkN,UAAU,IAAWiC,IAAIpG,EAAEhJ,EAAE,IAAIxN,KAAKub,IAAI/E,GAAG,EAAEA,GAAGxW,KAAKsb,MAAM9E,EAC5f,cAAc,KAAKxW,KAAKE,MAAMsW,MAAMA,IAAI,IAAI,cAAc,EAAE,IAAIhJ,IAAI,CAAC,EAAE2K,EAAE,WAAW,OAAO,EAAE,EAAEjG,EAAE,WAAW,EAAE6I,EAAE,SAASvN,EAAEC,EAAEwF,GAAG,SAASC,EAAEwH,GAAG,OAAOA,EAAEA,EAAEmC,eAAeC,MAAM,sBAAsBpC,EAAE,GAAG,KAAK,CAACzH,KAAK,EAAE,IAAIE,GAAE,IAAKsH,MAAML,cAAchH,EAAE,IAAIqH,KAAKtH,EAAE,EAAE,GAAGgF,EAAE,IAAIsC,KAAKtH,EAAE,EAAE,GAAGA,EAAEC,EAAEoJ,oBAAoB,IAAIjC,EAAEpC,EAAEqE,oBAAoBhH,EAAEhI,IAAI,GAAG,IAAI,GAAG,GAAGxN,KAAKyc,IAAItJ,EAAEoH,GAAGhF,EAAE9H,IAAI,GAAG,IAAI,GAAGhO,OAAO0T,GAAGoH,GAAG/M,EAAE0F,EAAEE,GAAG3F,EAAEyF,EAAEiF,GAAG3K,EAAEmL,GAAGnL,GAAGC,EAAEkL,GAAGlL,GAAG8M,EAAEpH,GAAGqC,EAAEvC,GAAG,IAAI,GAAGzF,EAAEgI,EAAEvC,EAAE,GAAG,IAAI,GAAGxF,IAAI+H,EAAEvC,GAAG,IAAI,GAAGxF,EAAE+H,EAAEvC,EAAE,GAAG,IAAI,GAAGzF,EAAE,EAAExB,EAAE,KAAKkJ,EAAE,GAAE,EACzfvD,EAAE,WAAW,OAAO8I,KAAKsC,KAAK,EAAEhP,EAAE,WAAW,OAAO,UAAU,EAAEN,EAAE,IAAIuP,YAAYD,MAAMtH,EAAE,SAASjI,EAAEC,EAAEwF,GAAU,OAAPxF,KAAK,EAAS6H,EAAE2H,WAAWzP,IAAI,IAAI,EAAEC,IAAI,EAAEA,GAAGwF,IAAI,KAAK,EAAE,EAAErN,EAAE,SAAS4H,GAAGA,KAAK,EAAE,IAAIC,EAAE6H,EAAExV,OAAO,GAAG,WAAW0N,EAAE,OAAM,EAAG,IAAI,IAAIyF,EAAE,EAAE,GAAGA,EAAEA,GAAG,EAAE,CAAC,IAAIC,EAAEzF,GAAG,EAAE,GAAGwF,GAAGC,EAAElT,KAAKC,IAAIiT,EAAE1F,EAAE,WAAW,IAAI2F,EAAEnT,KAAKkT,EAAElT,KAAKyc,IAAIjP,EAAE0F,GAAG1F,EAAE,CAAC2F,EAAEA,EAAElT,IAAIid,KAAK/J,EAAE,WAAWD,GAAG,MAAMA,EAAE,OAAO,OAAOiC,EAAEvJ,OAAOnC,WAAW,QAAQ,GAAG,IAAI0L,EAAEgI,KAAKhK,GAAGuC,IAAK,IAAItC,EAAE,EAAE,MAAM5F,CAAC,CAAC,MAAM2K,GAAG,CAAC/E,OAAE,CAAM,CAAC,GAAGA,EAAE,OAAM,CAAE,CAAC,OAAM,CAAE,EAAEV,EAAE,SAASlF,EAAEC,GAAGD,KAClf,EAAEC,KAAK,EAAE,IAAIwF,EAAE,EAA8I,OAA5I6F,KAAKjV,SAAQ,SAASqP,EAAEC,GAAG,IAAIC,EAAE3F,EAAEwF,EAAsB,IAApBE,EAAEqC,EAAEhI,EAAE,EAAE2F,GAAG,IAAI,GAAGC,EAAMA,EAAE,EAAEA,EAAEF,EAAEpT,SAASsT,EAAEiC,EAAElC,KAAK,IAAI,GAAGD,EAAEoF,WAAWlF,GAAGiC,EAAElC,GAAG,IAAI,GAAG,EAAEF,GAAGC,EAAEpT,OAAO,CAAC,IAAU,CAAC,EAAE8U,EAAE,SAASpH,EAAEC,GAAGD,KAAK,EAAEC,KAAK,EAAE,IAAIwF,EAAE6F,KAAKtD,EAAEhI,GAAG,IAAI,GAAGyF,EAAEnT,OAAO,IAAIoT,EAAE,EAAsD,OAApDD,EAAEpP,SAAQ,SAASsP,GAAGD,GAAGC,EAAErT,OAAO,CAAC,IAAG0V,EAAE/H,GAAG,IAAI,GAAGyF,EAAS,CAAC,EAAEkK,EAAE5P,IAAQyH,IAAkBtR,EAAE0Z,QAAO1Z,EAAE0Z,OAAO7P,GAAGiI,GAAE,GAAGtD,EAAE3E,EAAE,IAAI+J,EAAG/J,GAAE,EAAG0F,EAAE,IAAI,GAAGoK,EAAE,WAAW,OAAO,EAAE,EAAEnL,EAAE,WAAW,OAAO,EAAE,EAAElM,EAAE,SAASuH,EAAEC,EAAEwF,EAAEC,GAAGzF,KAAK,EAAEwF,KAAK,EAAEC,KAAK,EAAE,IAAI,IAAIC,EAAE,EAAEC,EAAE,EAAEA,EAAEH,EAAEG,IAAI,CAAC,IAAI+E,EAAE3C,EAAE/H,GACpf,IAAI,GAAG8M,EAAE/E,EAAE/H,EAAE,GAAG,IAAI,GAAGA,GAAG,EAAE,IAAI,IAAIiN,EAAE,EAAEA,EAAEH,EAAEG,IAAI,CAAC,IAAI9U,EAAE0P,EAAE6C,EAAEuC,IAAI,GAAGK,EAAExB,GAAG/L,GAAG,IAAI5H,GAAG,KAAKA,IAAI,IAAI4H,EAAE+G,EAAGK,GAAG8C,EAAGqD,EAAE,IAAIA,EAAEjb,OAAO,GAAGib,EAAEtV,KAAKG,EAAE,CAACuN,GAAGoH,CAAC,CAAe,OAAd/E,EAAEtC,GAAG,IAAI,GAAGC,EAAS,CAAC,EAAEoH,EAAE,SAAS/M,EAAEC,GAA8C,OAA3CD,KAAK,EAAEgM,GAAGlE,EAAEzH,SAASL,IAAI,EAAEA,GAAGC,IAAI,KAAK,IAAW,CAAC,EAAEsE,EAAEiI,GAAG/G,EAAE,SAASzF,EAAEC,EAAEwF,EAAEC,GAAG,OAAO8G,GAAGxM,IAAI,EAAEC,IAAI,EAAEwF,IAAI,EAAEC,IAAI,EAAE,IAClS,WAAY,SAAS1F,EAAEyF,GAA8G,GAA3GA,EAAEA,EAAEnU,QAAQsW,EAAEnC,EAIxC,SAAYzF,GAAyB,IAAIC,EAAEyF,GAAG,IAAIA,MAAM,EAAED,EAAEC,GAAGC,GAAGD,EAAEC,KAAK,EAAwH,OAAlL3F,EAAEtI,OAAO+M,OAAO,CAAC,EAAEzE,IAA2C+P,iBAAiB9P,EAAED,EAAE+P,kBAAkB/P,EAAEgQ,OAAOvK,EAAEzF,EAAEgQ,QAAQhQ,EAAErD,UAAUsD,EAAED,EAAErD,WAAWqD,EAAEnD,WAAW4I,EAAEzF,EAAEnD,YAAmBmD,CAAC,CAJ/JiQ,CAAGxK,GAAGkC,EAAEC,EAAEE,EAAEI,IAAKO,EAAGK,QAAQlB,EAAEG,GAAGkB,IAAI9S,EAAE+Z,wBAAwB/Z,EAAE+Z,uBAAuBjH,GAAM,GAAGA,IAAI,OAAOC,IAAIiH,cAAcjH,GAAGA,EAAE,MAAMC,GAAG,CAAC,IAAIzD,EAAEyD,EAAEA,EAAE,KAAKzD,GAAG,CAAC,OAAOD,CAAC,CAAC,IAAIxF,EAAE,CAACD,EAAEkO,IAA8D,GAA1DjF,IAAI9S,EAAE+Z,wBAAwB/Z,EAAE+Z,uBAAuBjH,GAAM9S,EAAEia,gBAAgB,IAAI,OAAOja,EAAEia,gBAAgBnQ,EAAED,EAAE,CAAC,MAAMyF,GAAG2B,EAAE,sDAAsD3B,GAAGtB,EAAEsB,EAAE,EAtBzZ,SAAYzF,EAAEC,GAAG,IAAIwF,EAAEsD,EAAE,OAAOjC,GAAG,mBAAmBpF,YAAY2O,sBAAsB/G,EAAG7D,IAAIA,EAAEJ,WAAW,YAAYN,GAAG,mBAAmBpO,MAAM8S,EAAGhE,EAAEzF,EAAEC,GAAGtJ,MAAM8O,EAAE,CAACiE,YAAY,gBAAgBnK,MAAKmG,GAAGhE,YAAY2O,qBAAqB3K,EAAE1F,GAAGT,KAAKU,GAAE,SAAS0F,GAAyF,OAAtFyB,EAAE,kCAAkCzB,GAAGyB,EAAE,6CAAoDqC,EAAGhE,EAAEzF,EAAEC,EAAE,KAAG,EAsB6CuN,CAAGvN,GAAE,SAASwF,GAAGzF,EAAEyF,EAAE6K,SAAS,IAAG1G,MAAMzF,EAAY,CAA7c,GACAhO,EAAEyF,SAAS,CAACoE,EAAEC,KAAK9J,EAAEyF,SAASgM,EAAEI,GAAGhI,EAAEC,GAAG9J,EAAEwN,iBAAiB,CAAC3D,EAAEC,KAAK9J,EAAEwN,iBAAiBiE,EAAEqB,GAAGjJ,EAAEC,GAAG9J,EAAE2D,yBAAyB,CAACkG,EAAEC,EAAEwF,EAAEC,EAAEC,EAAEC,EAAE+E,EAAEoC,EAAEG,EAAE9U,KAAKjC,EAAE2D,yBAAyB8N,EAAEsB,GAAGlJ,EAAEC,EAAEwF,EAAEC,EAAEC,EAAEC,EAAE+E,EAAEoC,EAAEG,EAAE9U,GAAGjC,EAAEoE,4BAA4B,CAACyF,EAAEC,KAAK9J,EAAEoE,4BAA4BqN,EAAEuB,GAAGnJ,EAAEC,GAAG9J,EAAEiE,0BAA0B,CAAC4F,EAAEC,EAAEwF,KAAKtP,EAAEiE,0BAA0BwN,EAAEmB,GAAG/I,EAAEC,EAAEwF,GAAGtP,EAAEsE,0BAA0BuF,IAAI7J,EAAEsE,0BAA0BmN,EAAEoB,GAAGhJ,GAAG7J,EAAEoG,kBAAkB,CAACyD,EAAEC,EAAEwF,KAAKtP,EAAEoG,kBAAkBqL,EAAEoC,GAAGhK,EAAEC,EAAEwF,GACnetP,EAAEoH,mBAAmByC,IAAI7J,EAAEoH,mBAAmBqK,EAAEgD,GAAG5K,GAAG7J,EAAE2G,wBAAwB,CAACkD,EAAEC,EAAEwF,KAAKtP,EAAE2G,wBAAwB8K,EAAEiD,GAAG7K,EAAEC,EAAEwF,GAAGtP,EAAE+G,iBAAiB,CAAC8C,EAAEC,KAAK9J,EAAE+G,iBAAiB0K,EAAEmD,GAAG/K,EAAEC,GAAG9J,EAAEiH,kBAAkB,CAAC4C,EAAEC,KAAK9J,EAAEiH,kBAAkBwK,EAAEoD,GAAGhL,EAAEC,GAAG9J,EAAEmH,SAAS0C,IAAI7J,EAAEmH,SAASsK,EAAEyD,GAAGrL,GAAG7J,EAAEsI,iBAAiB,CAACuB,EAAEC,EAAEwF,EAAEC,EAAEC,KAAKxP,EAAEsI,iBAAiBmJ,EAAE2I,GAAGvQ,EAAEC,EAAEwF,EAAEC,EAAEC,GAAGxP,EAAEwJ,kBAAkB,CAACK,EAAEC,EAAEwF,EAAEC,EAAEC,KAAKxP,EAAEwJ,kBAAkBiI,EAAEkE,GAAG9L,EAAEC,EAAEwF,EAAEC,EAAEC,GAAGxP,EAAEmK,kBAAkBN,IAAI7J,EAAEmK,kBAAkBsH,EAAE4I,GAAGxQ,GAC/c7J,EAAEV,qBAAqB,CAACuK,EAAEC,EAAEwF,EAAEC,KAAKvP,EAAEV,qBAAqBmS,EAAE1D,IAAIlE,EAAEC,EAAEwF,EAAEC,GAAGvP,EAAED,sBAAsB,CAAC8J,EAAEC,EAAEwF,KAAKtP,EAAED,sBAAsB0R,EAAEpD,IAAIxE,EAAEC,EAAEwF,GAAGtP,EAAEC,sBAAsB4J,IAAI7J,EAAEC,sBAAsBwR,EAAEhD,IAAI5E,GAAG7J,EAAEiJ,QAAQ,CAACY,EAAEC,EAAEwF,EAAEC,EAAEC,EAAEC,EAAE+E,EAAEoC,KAAK5W,EAAEiJ,QAAQwI,EAAEb,IAAI/G,EAAEC,EAAEwF,EAAEC,EAAEC,EAAEC,EAAE+E,EAAEoC,GAAG5W,EAAEuK,iBAAiBV,IAAI7J,EAAEuK,iBAAiBkH,EAAEM,IAAIlI,GAAG,IAAIoL,GAAGjV,EAAE6F,QAAQgE,IAAIoL,GAAGjV,EAAE6F,QAAQ4L,EAAEY,IAAIxI,GAAG7J,EAAEI,MAAMyJ,IAAI7J,EAAEI,MAAMqR,EAAE6I,IAAIzQ,GAAG,IAChEuQ,GADoEnB,GAAGpP,IAAIoP,GAAGxH,EAAEc,IAAI1I,GAAG0Q,GAAG,KAAKA,GAAG9I,EAAEe,MAAMgI,GAAG3Q,IAAI2Q,GAAG/I,EAAE0B,IAAItJ,GAAG4Q,GAAG5Q,IAAI4Q,GAAGhJ,EAAE2B,IAAIvJ,GAEpd,SAAS6Q,KAAK,SAAS7Q,IAAI,IAAIuQ,KAAIA,IAAE,EAAGpa,EAAE2a,WAAU,GAAI7I,GAAG,CAAgE,GAA/D+B,EAAEvB,GAAIvE,EAAG/N,GAAMA,EAAE4a,sBAAqB5a,EAAE4a,uBAA0B5a,EAAE6a,QAAQ,IAAI,mBAAmB7a,EAAE6a,UAAU7a,EAAE6a,QAAQ,CAAC7a,EAAE6a,UAAU7a,EAAE6a,QAAQ1e,QAAQ,CAAC,IAAI2N,EAAE9J,EAAE6a,QAAQnI,QAAQH,EAAGI,QAAQ7I,EAAE,CAAC+J,EAAEtB,EAAG,CAAC,CAAC,KAAK,EAAEO,GAAG,CAAC,GAAG9S,EAAEyS,OAAO,IAAI,mBAAmBzS,EAAEyS,SAASzS,EAAEyS,OAAO,CAACzS,EAAEyS,SAASzS,EAAEyS,OAAOtW,QAAQqW,IAAKqB,EAAExB,GAAI,EAAES,IAAI9S,EAAE8a,WAAW9a,EAAE8a,UAAU,cAAc3O,YAAW,WAAWA,YAAW,WAAWnM,EAAE8a,UAAU,GAAG,GAAE,GAAGjR,GAAG,GAAE,IAAIA,IAAI,CAAC,CACve,GAF0M7J,EAAE0G,WAAW+T,GAAGza,EAAEwG,UAAU+T,GAAGva,EAAE6G,aAAa2T,GAAGxa,EAAEgH,aAAayN,EAAEzU,EAAEgN,aAAa,CAACnD,EAAEC,EAAEwF,IAAIsF,EAAE/K,EAAE8H,EAAE7H,EAAEwF,GAAGtP,EAAE+M,gBAAgB2H,EAAQ1B,EAAE,SAAS+H,IAAKX,IAAGM,KAAKN,KAAIpH,EAAE+H,EAAG,EAEvW/a,EAAEgb,QAAQ,IAAI,mBAAmBhb,EAAEgb,UAAUhb,EAAEgb,QAAQ,CAAChb,EAAEgb,UAAU,EAAEhb,EAAEgb,QAAQ7e,QAAQ6D,EAAEgb,QAAQC,KAAVjb,GAGzF,OAH2G0a,KAGpG5M,EAAUG,KAGnB,GAGE7S,EAAOD,QAAUyS,C,wGChDnBrM,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQggB,eAAiBhgB,EAAQ+B,qBAAkB,EACnD,MAAMke,EAAW,CAAC,EACZC,EAA2B,GA2CjClgB,EAAQ+B,gBAhCgB,CAACwE,EAAM4Z,EAASC,KACpC,IAAID,GAAmC,mBAAjBA,EAAQE,MAA+D,mBAAjCF,EAAQG,qBA6BpE,MAAM,IAAI1T,UAAU,uBA7BpB,CACI,MAAM2T,EAAiBN,EAAS1Z,GAChC,QAAuB5C,IAAnB4c,EACAN,EAAS1Z,GAAQ,CAAE4Z,UAASC,gBAE3B,IAAIG,EAAeH,SAAWA,EAE/B,OAEC,GAAIG,EAAeH,WAAaA,GAC7BG,EAAeJ,UAAYA,EAC3B,MAAM,IAAItc,MAAM,4BAA4B0C,qBAAwB6Z,IAE5E,CACA,GAAIA,GAAY,EAAG,CACf,MAAMjZ,EAAI+Y,EAAyBxZ,QAAQH,IAChC,IAAPY,GACA+Y,EAAyBM,OAAOrZ,EAAG,GAEvC,IAAK,IAAIA,EAAI,EAAGA,EAAI+Y,EAAyBlf,OAAQmG,IACjD,GAAI8Y,EAASC,EAAyB/Y,IAAIiZ,UAAYA,EAElD,YADAF,EAAyBM,OAAOrZ,EAAG,EAAGZ,GAI9C2Z,EAAyBvZ,KAAKJ,EAClC,CAEJ,CAC0C,EA6C9CvG,EAAQggB,eAlCe3e,MAAOof,IAC1B,MAAMC,EAAuC,IAAxBD,EAAazf,OAAekf,EAA2BO,EACtEE,EAAS,GACf,IAAK,MAAMC,KAAeF,EAAc,CACpC,MAAMG,EAAcZ,EAASW,GAC7B,GAAIC,EAAa,CACb,GAAIA,EAAYnR,YACZ,OAAOmR,EAAYV,QAElB,GAAIU,EAAYjR,QACjB,SAEJ,MAAMkR,IAAmBD,EAAYE,YACrC,IAMI,OALKD,IACDD,EAAYE,YAAcF,EAAYV,QAAQE,cAE5CQ,EAAYE,YAClBF,EAAYnR,aAAc,EACnBmR,EAAYV,OACvB,CACA,MAAOtb,GACEic,GACDH,EAAOha,KAAK,CAAEJ,KAAMqa,EAAaI,IAAKnc,IAE1Cgc,EAAYjR,SAAU,CAC1B,CACA,eACWiR,EAAYE,WACvB,CACJ,CACJ,CACA,MAAM,IAAIld,MAAM,oCAAoC8c,EAAO9Z,KAAIhC,GAAK,IAAIA,EAAE0B,SAAS1B,EAAEmc,QAAOC,KAAK,QAAQ,C,6BCvF7G7a,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQ+B,qBAAkB,EAC1B,IAAImf,EAAoB,EAAQ,KAChC9a,OAAO2Z,eAAe/f,EAAS,kBAAmB,CAAEmhB,YAAY,EAAMjV,IAAK,WAAc,OAAOgV,EAAkBnf,eAAiB,G,6BCHnIqE,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQK,SAAM,EACd,MAAM+gB,EAAe,EAAQ,KAC7B,IAAIC,EAAgB,UACpBrhB,EAAQK,IAAM,CACVC,KAAM,CAAC,EACPghB,MAAO,CAAC,EACRC,OAAQ,CAAC,EACTvf,SAAU,CAAEwf,OAAQJ,EAAalf,SAC7BkI,aAAS3F,GACT,QAAcd,IAAVc,EAAJ,CAGA,GAAqB,iBAAVA,IAA2F,IAArE,CAAC,UAAW,OAAQ,UAAW,QAAS,SAASiC,QAAQjC,GACtF,MAAM,IAAIZ,MAAM,8BAA8BY,KAElD4c,EAAgB5c,CAJhB,CAKJ,EACI2F,eACA,OAAOiX,CACX,GAGJjb,OAAO2Z,eAAe/f,EAAQK,IAAK,WAAY,CAAE8gB,YAAY,G,6BCvB7D/a,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQK,SAAM,EACd,MAAMohB,EAAgB,EAAQ,KAI9BzhB,EAAQK,IAAMohB,EAAcphB,G,mCCN5B,IAAIqhB,EAAmB7b,MAAQA,KAAK6b,kBAAqBtb,OAAOub,OAAS,SAAUrE,EAAGlK,EAAGkB,EAAGsN,QAC7Eje,IAAPie,IAAkBA,EAAKtN,GAC3B,IAAIuN,EAAOzb,OAAO0b,yBAAyB1O,EAAGkB,GACzCuN,KAAS,QAASA,GAAQzO,EAAE2O,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEV,YAAY,EAAMjV,IAAK,WAAa,OAAOkH,EAAEkB,EAAI,IAE5DlO,OAAO2Z,eAAezC,EAAGsE,EAAIC,EAChC,EAAI,SAAUvE,EAAGlK,EAAGkB,EAAGsN,QACTje,IAAPie,IAAkBA,EAAKtN,GAC3BgJ,EAAEsE,GAAMxO,EAAEkB,EACb,GACG4N,EAAgBrc,MAAQA,KAAKqc,cAAiB,SAAS9O,EAAGpT,GAC1D,IAAK,IAAIkP,KAAKkE,EAAa,YAANlE,GAAoB9I,OAAO+b,UAAUC,eAAehE,KAAKpe,EAASkP,IAAIwS,EAAgB1hB,EAASoT,EAAGlE,EAC3H,EACA9I,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IAgBtDyd,EAAa,EAAQ,KAAiBliB,GACtCkiB,EAAa,EAAQ,KAAaliB,GAClCkiB,EAAa,EAAQ,KAA2BliB,GAChDkiB,EAAa,EAAQ,KAAgBliB,GACrCkiB,EAAa,EAAQ,KAAoBliB,E,4BClCzCoG,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQqiB,sBAAmB,EAC3B,MAAMnB,EAAoB,EAAQ,KAC5BoB,EAAc,EAAQ,KAC5B,MAAMD,EACFE,YAAY9gB,GACRoE,KAAKpE,QAAUA,CACnB,CACAJ,UAAU4E,EAAOuc,EAAMC,GACnB,MAAMvc,EAAU,CAAC,EACjB,IAAI1E,EAAU,CAAC,EAEf,GAAqB,iBAAVyE,GAAgC,OAAVA,GAAkBA,aAAiBqc,EAAYlb,QAAUqF,MAAMC,QAAQzG,GACpG,MAAM,IAAI2G,UAAU,iGAExB,IAAI8V,GAAiB,EAErB,GAAoB,iBAATF,EAAmB,CAC1B,GAAa,OAATA,EACA,MAAM,IAAI5V,UAAU,2CAExB,GAAI4V,aAAgBF,EAAYlb,OAC5B,MAAM,IAAIwF,UAAU,gCAExB,GAAIH,MAAMC,QAAQ8V,GAAO,CACrB,GAAoB,IAAhBA,EAAKxhB,OACL,MAAM,IAAI4L,UAAU,uCAExB8V,GAAiB,EAEjB,IAAK,MAAMnc,KAAQic,EAAM,CACrB,GAAoB,iBAATjc,EACP,MAAM,IAAIqG,UAAU,kDAExB,IAAwC,IAApC/G,KAAKE,YAAYW,QAAQH,GACzB,MAAM,IAAIoc,WAAW,2CAA2Cpc,MAEpEL,EAAQK,GAAQ,IACpB,CACA,GAAoB,iBAATkc,GAA8B,OAATA,EAC5BjhB,EAAUihB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAI7V,UAAU,+BAE5B,KACK,CAGD,IAAIgW,GAAY,EAChB,MAAMC,EAAWzc,OAAO0c,oBAAoBN,GAC5C,IAAK,MAAMjc,KAAQV,KAAKE,YACpB,IAAgC,IAA5B8c,EAASnc,QAAQH,GAAc,CAC/B,MAAM0I,EAAIuT,EAAKjc,IACL,OAAN0I,GAAcA,aAAaqT,EAAYlb,UACvCwb,GAAY,EACZF,GAAiB,EACjBxc,EAAQK,GAAQ0I,EAExB,CAEJ,GAAI2T,GACA,GAAoB,iBAATH,GAA8B,OAATA,EAC5BjhB,EAAUihB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAI7V,UAAU,qCAIxBpL,EAAUghB,CAElB,CACJ,MACK,QAAoB,IAATA,EACZ,MAAM,IAAI5V,UAAU,2DAGxB,IAAK,MAAMrG,KAAQV,KAAKC,WACpB,QAA2B,IAAhBG,EAAMM,GACb,MAAM,IAAI1C,MAAM,UAAU0C,6BAIlC,GAAImc,EACA,IAAK,MAAMnc,KAAQV,KAAKE,YACpBG,EAAQK,GAAQ,KAIxB,MAAMwc,QAAgBld,KAAKpE,QAAQwB,IAAIgD,EAAOC,EAAS1E,GACjDwhB,EAAc,CAAC,EACrB,IAAK,MAAMxe,KAAOue,EACV3c,OAAOgc,eAAehE,KAAK2E,EAASve,KACpCwe,EAAYxe,GAAO,IAAI8d,EAAYlb,OAAO2b,EAAQve,GAAKuC,KAAMgc,EAAQve,GAAKyC,KAAM8b,EAAQve,GAAKwC,OAGrG,OAAOgc,CACX,CACA3hB,gBACI,OAAOwE,KAAKpE,QAAQ+P,SACxB,CACAyR,oBAAoBC,EAAMV,EAAMC,EAAMU,GAElC,IAAIC,EACA5hB,EAAU,CAAC,EACf,GAAoB,iBAAT0hB,GAEP,GADAE,EAAuBF,EACH,iBAATV,GAA8B,OAATA,EAC5BhhB,EAAUghB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAI5V,UAAU,qCAGvB,GAAIsW,aAAgB1d,YAErB,GADA4d,EAAuBF,EACH,iBAATV,GAA8B,OAATA,EAC5BhhB,EAAUghB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAI5V,UAAU,oCAGvB,MAAIsW,aAAgBG,aACS,oBAAtBrT,mBAAqCkT,aAAgBlT,mBAyC7D,MAAM,IAAIpD,UAAU,uDAzC6D,CACjF,MAAME,EAASoW,EACf,IAAInW,EAAa,EACbpC,EAAauY,EAAKvY,WACtB,GAAoB,iBAAT6X,GAA8B,OAATA,EAC5BhhB,EAAUghB,OAET,GAAoB,iBAATA,EAAmB,CAE/B,GADAzV,EAAayV,GACR7hB,OAAO2iB,cAAcvW,GACtB,MAAM,IAAI4V,WAAW,oCAEzB,GAAI5V,EAAa,GAAKA,GAAcD,EAAOnC,WACvC,MAAM,IAAIgY,WAAW,oCAAoC7V,EAAOnC,gBAGpE,GADAA,EAAauY,EAAKvY,WAAaoC,EACX,iBAAT0V,EAAmB,CAE1B,GADA9X,EAAa8X,GACR9hB,OAAO2iB,cAAc3Y,GACtB,MAAM,IAAIgY,WAAW,oCAEzB,GAAIhY,GAAc,GAAKoC,EAAapC,EAAamC,EAAOnC,WACpD,MAAM,IAAIgY,WAAW,oCAAoC7V,EAAOnC,WAAaoC,OAEjF,GAAoB,iBAAToW,GAA8B,OAATA,EAC5B3hB,EAAU2hB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIvW,UAAU,+BAE5B,MACK,QAAoB,IAAT6V,EACZ,MAAM,IAAI7V,UAAU,iCAE5B,MACK,QAAoB,IAAT4V,EACZ,MAAM,IAAI5V,UAAU,gCAExBwW,EAAuB,IAAI5d,WAAWsH,EAAQC,EAAYpC,EAC9D,CAGA,CAEA,MACM8V,GADMjf,EAAQmG,oBAAsB,IACjBd,KAAIM,GAAkB,iBAANA,EAAiBA,EAAIA,EAAEZ,OAC1D4Z,QAAgB,EAAIe,EAAkBlB,gBAAgBS,GACtDhf,QAAgB0e,EAAQG,qBAAqB8C,EAAsB5hB,GACzE,OAAO,IAAI6gB,EAAiB5gB,EAChC,CACA4F,iBACIxB,KAAKpE,QAAQ4F,gBACjB,CACAhE,eACIwC,KAAKpE,QAAQ4B,cACjB,CACIyC,iBACA,OAAOD,KAAKpE,QAAQqE,UACxB,CACIC,kBACA,OAAOF,KAAKpE,QAAQsE,WACxB,EAEJ/F,EAAQqiB,iBAAmBA,C,6BC5L3Bjc,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQqiB,sBAAmB,EAC3B,MAAMkB,EAA8B,EAAQ,IAE5CvjB,EAAQqiB,iBAAmBkB,EAA4BlB,gB,2BCJvDjc,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,G,2BCAtD2B,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQwjB,kBAAoBxjB,EAAQyjB,qBAAkB,EA4FtDzjB,EAAQyjB,gBAxFgB,CAACjd,EAAQhF,KAC7B,MAAMkiB,EAASvhB,SAASwhB,cAAc,UACtCD,EAAOE,MAAQpd,EAAOQ,KAAK,GAC3B0c,EAAOG,OAASrd,EAAOQ,KAAK,GAC5B,MAAM8c,EAAkBJ,EAAOK,WAAW,MAC1C,GAAuB,MAAnBD,EAAyB,CAEzB,IAAIF,EACAC,OAC0BlgB,IAA1BnC,GAASwiB,cAAuD,SAAzBxiB,EAAQwiB,cAC/CJ,EAAQpd,EAAOQ,KAAK,GACpB6c,EAASrd,EAAOQ,KAAK,KAGrB4c,EAAQpd,EAAOQ,KAAK,GACpB6c,EAASrd,EAAOQ,KAAK,IAEzB,MAAMid,OAAkCtgB,IAApBnC,GAAS0iB,OAAuB1iB,EAAQ0iB,OAAS,MAC/DC,EAAO3iB,GAAS2iB,KACtB,IAAIC,EACAC,OACS1gB,IAATwgB,QAAoCxgB,IAAdwgB,EAAKG,KAC3BF,EAAW,CAAC,IAAK,IAAK,IAAK,KAGA,iBAAfD,EAAS,KACjBC,EAAW,CAACD,EAAKG,KAAMH,EAAKG,KAAMH,EAAKG,KAAMH,EAAKG,OAGlDF,EAAW,CAACD,EAAKG,KAAK,GAAIH,EAAKG,KAAK,GAAIH,EAAKG,KAAK,GAAI,QACjC3gB,IAAjBwgB,EAAKG,KAAK,KACVF,EAAS,GAAKD,EAAKG,KAAK,UAIvB3gB,IAATwgB,QAAoCxgB,IAAdwgB,EAAKI,KAC3BF,EAAW,CAAC,EAAG,EAAG,EAAG,GAGM,iBAAfF,EAAS,KACjBE,EAAW,CAACF,EAAKI,KAAMJ,EAAKI,KAAMJ,EAAKI,KAAMJ,EAAKI,OAGlDF,EAAW,CAACF,EAAKI,KAAK,GAAIJ,EAAKI,KAAK,GAAIJ,EAAKI,KAAK,GAAI,QACjC5gB,IAAjBwgB,EAAKI,KAAK,KACVF,EAAS,GAAKF,EAAKI,KAAK,KAIpC,MAAMC,EAASX,EAASD,EAExB,IAAIa,EAAiB,EAAGC,EAAiBF,EAAQG,EAA0B,EAATH,EAAYI,GAAkB,EAE5E,SAAhBX,GACAQ,EAAiB,EACjBC,EAAiBF,EACjBG,EAA0B,EAATH,EACjBI,EAA0B,EAATJ,GAEI,QAAhBP,GACLQ,EAAiB,EACjBC,EAAiBF,EACjBG,EAA0B,EAATH,GAEI,QAAhBP,IACLQ,EAAiB,EACjBE,EAAiBH,EACjBE,EAA0B,EAATF,GAErB,IAAK,IAAIrd,EAAI,EAAGA,EAAI0c,EAAQ1c,IACxB,IAAK,IAAIqX,EAAI,EAAGA,EAAIoF,EAAOpF,IAAK,CAC5B,MAAM/G,GAAKjR,EAAOS,KAAKwd,KAAoBJ,EAAS,IAAMD,EAAS,GAC7DhO,GAAK5P,EAAOS,KAAKyd,KAAoBL,EAAS,IAAMD,EAAS,GAC7DpR,GAAKxM,EAAOS,KAAK0d,KAAoBN,EAAS,IAAMD,EAAS,GAC7DrR,GAAwB,IAApB6R,EACN,KACCpe,EAAOS,KAAK2d,KAAoBP,EAAS,IAAMD,EAAS,GAE7DN,EAAgBe,UAAY,QAAUpN,EAAI,IAAMrB,EAAI,IAAMpD,EAAI,IAAMD,EAAI,IACxE+Q,EAAgBgB,SAAStG,EAAGrX,EAAG,EAAG,EACtC,CAEJ,OAAOuc,EAAOqB,WAClB,CAEI,MAAM,IAAIlhB,MAAM,4BACpB,EAmGJ7D,EAAQwjB,kBA7FkB,CAAChd,EAAQhF,KAC/B,MAAMsiB,EAAkB3hB,SAASwhB,cAAc,UAAUI,WAAW,MACpE,IAAIiB,EACJ,GAAuB,MAAnBlB,EAsFA,MAAM,IAAIjgB,MAAM,6BAtFS,CAEzB,IAAI+f,EACAC,EACAoB,OAC0BthB,IAA1BnC,GAASwiB,cAAuD,SAAzBxiB,EAAQwiB,cAC/CJ,EAAQpd,EAAOQ,KAAK,GACpB6c,EAASrd,EAAOQ,KAAK,GACrBie,EAAWze,EAAOQ,KAAK,KAGvB4c,EAAQpd,EAAOQ,KAAK,GACpB6c,EAASrd,EAAOQ,KAAK,GACrBie,EAAWze,EAAOQ,KAAK,IAE3B,MAAMid,OAA0BtgB,IAAZnC,QAA4CmC,IAAnBnC,EAAQ0iB,OAAuB1iB,EAAQ0iB,OAAkB,MAChGC,EAAO3iB,GAAS2iB,KACtB,IAAIC,EACAC,OACS1gB,IAATwgB,QAAoCxgB,IAAdwgB,EAAKG,KAC3BF,EAAW,CAAC,IAAK,IAAK,IAAK,KAGA,iBAAfD,EAAS,KACjBC,EAAW,CAACD,EAAKG,KAAMH,EAAKG,KAAMH,EAAKG,KAAMH,EAAKG,OAGlDF,EAAW,CAACD,EAAKG,KAAK,GAAIH,EAAKG,KAAK,GAAIH,EAAKG,KAAK,GAAI,UACjC3gB,IAAjBwgB,EAAKG,KAAK,KACVF,EAAS,GAAKD,EAAKG,KAAK,UAIvB3gB,IAATwgB,QAAoCxgB,IAAdwgB,EAAKI,KAC3BF,EAAW,CAAC,EAAG,EAAG,EAAG,GAGM,iBAAfF,EAAS,KACjBE,EAAW,CAACF,EAAKI,KAAMJ,EAAKI,KAAMJ,EAAKI,KAAMJ,EAAKI,OAGlDF,EAAW,CAACF,EAAKI,KAAK,GAAIJ,EAAKI,KAAK,GAAIJ,EAAKI,KAAK,GAAI,QACjC5gB,IAAjBwgB,EAAKI,KAAK,KACVF,EAAS,GAAKF,EAAKI,KAAK,KAIpC,MAAMC,EAASX,EAASD,EACxB,QAAgBjgB,IAAZnC,SACuBmC,IAAnBnC,EAAQ0iB,QAAsC,IAAbe,GAAqC,SAAnBzjB,EAAQ0iB,QAC7C,IAAbe,GAAsC,QAAnBzjB,EAAQ0iB,QAAuC,QAAnB1iB,EAAQ0iB,QACxD,MAAM,IAAIrgB,MAAM,iDAIxB,MAAMqhB,EAAO,EACb,IAAIC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EACzEb,EAAiB,EAAGC,EAAiBF,EAAQG,EAA0B,EAATH,EAAYI,GAAkB,EAE5E,SAAhBX,GACAQ,EAAiB,EACjBC,EAAiBF,EACjBG,EAA0B,EAATH,EACjBI,EAA0B,EAATJ,GAEI,QAAhBP,GACLQ,EAAiB,EACjBC,EAAiBF,EACjBG,EAA0B,EAATH,GAEI,QAAhBP,IACLQ,EAAiB,EACjBE,EAAiBH,EACjBE,EAA0B,EAATF,GAErBQ,EAAQlB,EAAgByB,gBAAgB3B,EAAOC,GAC/C,IAAK,IAAI1c,EAAI,EAAGA,EAAI0c,EAASD,EAAOuB,GAAiBD,EAAME,GAAiBF,EAAMG,GAAiBH,EAAMI,GAAiBJ,EAAM/d,IAC5H6d,EAAM/d,KAAKke,IAAkB3e,EAAOS,KAAKwd,KAAoBJ,EAAS,IAAMD,EAAS,GACrFY,EAAM/d,KAAKme,IAAkB5e,EAAOS,KAAKyd,KAAoBL,EAAS,IAAMD,EAAS,GACrFY,EAAM/d,KAAKoe,IAAkB7e,EAAOS,KAAK0d,KAAoBN,EAAS,IAAMD,EAAS,GACrFY,EAAM/d,KAAKqe,IAAqC,IAApBV,EACxB,KACCpe,EAAOS,KAAK2d,KAAoBP,EAAS,IAAMD,EAAS,EAErE,CAIA,OAAOY,CAAK,C,6BC5LhB5e,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQwlB,gBAAkBxlB,EAAQylB,oBAAiB,EACnD,MAAMnD,EAAc,EAAQ,KA+E5BtiB,EAAQylB,eAvEe,CAAC3Y,EAAQtL,KAC5B,QAAemC,IAAXmJ,EACA,MAAM,IAAIjJ,MAAM,gCAEpB,QAAuBF,IAAnBnC,EAAQqiB,aAA0ClgB,IAAlBnC,EAAQoiB,MACxC,MAAM,IAAI/f,MAAM,0CAEpB,GAA6B,SAAzBrC,EAAQwiB,aACR,MAAM,IAAIngB,MAAM,2CAEpB,MAAM,OAAEggB,EAAM,MAAED,GAAUpiB,EACpB2iB,EAAO3iB,EAAQ2iB,MAAQ,CAAEG,KAAM,IAAKC,KAAM,GAChD,IAAIH,EACAC,EAEAD,EADuB,iBAAfD,EAAS,KACN,CAACA,EAAKG,KAAMH,EAAKG,KAAMH,EAAKG,KAAMH,EAAKG,MAGvC,CAACH,EAAKG,KAAK,GAAIH,EAAKG,KAAK,GAAIH,EAAKG,KAAK,GAAIH,EAAKG,KAAK,IAAM,KAGtED,EADuB,iBAAfF,EAAS,KACN,CAACA,EAAKI,KAAMJ,EAAKI,KAAMJ,EAAKI,KAAMJ,EAAKI,MAGvC,CAACJ,EAAKI,KAAK,GAAIJ,EAAKI,KAAK,GAAIJ,EAAKI,KAAK,GAAIJ,EAAKI,KAAK,IAAM,GAE1E,MAAMN,OAAiCtgB,IAAnBnC,EAAQ0iB,OAAuB1iB,EAAQ0iB,OAAS,OAE9DwB,OAAwC/hB,IAAzBnC,EAAQmkB,mBACChiB,IAAzBnC,EAAQmkB,aAA6BnkB,EAAQmkB,aAC9C,MACEnB,EAASX,EAASD,EAClBgC,EAA+B,SAAjBF,EAA0B,IAAI/b,aAAsB,EAAT6a,GAAc,IAAI7a,aAAsB,EAAT6a,GAE9F,IAAIU,EAAO,EAAGC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EACnFb,EAAiB,EAAGC,EAAiBF,EAAQG,EAA0B,EAATH,EAAYI,GAAkB,EAE5E,QAAhBX,IACAiB,EAAO,EACPC,EAAgB,EAChBC,EAAgB,EAChBC,EAAgB,EAChBC,GAAiB,GAGA,SAAjBI,EACAd,EAA0B,EAATJ,EAEK,QAAjBkB,GACLjB,EAAiB,EACjBE,EAAiBH,EACjBE,EAA0B,EAATF,GAEK,QAAjBkB,IACLf,EAAiB,EACjBD,EAAiBF,EACjBC,EAA0B,EAATD,GAErB,IAAK,IAAIrd,EAAI,EAAGA,EAAIqd,EAAQrd,IAAKge,GAAiBD,EAAMG,GAAiBH,EAAME,GAAiBF,EAAMI,GAAiBJ,EACnHU,EAAYnB,MAAqB3X,EAAOqY,GAAiBd,EAAS,IAAMD,EAAS,GACjFwB,EAAYlB,MAAqB5X,EAAOsY,GAAiBf,EAAS,IAAMD,EAAS,GACjFwB,EAAYjB,MAAqB7X,EAAOuY,GAAiBhB,EAAS,IAAMD,EAAS,IACzD,IAApBQ,IAA4C,IAAnBU,IACzBM,EAAYhB,MAAqB9X,EAAOwY,GAAiBjB,EAAS,IAAMD,EAAS,IAMzF,MAFsC,SAAjBsB,EAA0B,IAAIpD,EAAYlb,OAAO,UAAWwe,EAAa,CAAC,EAAG,EAAG/B,EAAQD,IACzG,IAAItB,EAAYlb,OAAO,UAAWwe,EAAa,CAAC,EAAG,EAAG/B,EAAQD,GAC/C,EA0IvB5jB,EAAQwlB,gBApIgBnkB,MAAO2jB,EAAOxjB,KAElC,MAAMqkB,EAA+C,oBAAvB,kBAAsCb,aAAiBc,iBAC/EC,EAAwC,oBAAhB,WAA+Bf,aAAiBgB,UACxEC,EAAyC,oBAAlB,aAAiCjB,aAAiBkB,YACzEC,EAA4B,iBAAVnB,EACxB,IAAI/d,EACAmf,EAAwB5kB,GAAW,CAAC,EAExC,GAAIqkB,EAAgB,CAEhB,MAAMnC,EAASvhB,SAASwhB,cAAc,UACtCD,EAAOE,MAAQoB,EAAMpB,MACrBF,EAAOG,OAASmB,EAAMnB,OACtB,MAAMC,EAAkBJ,EAAOK,WAAW,MAC1C,GAAuB,MAAnBD,EA2BA,MAAM,IAAIjgB,MAAM,6BA3BS,CACzB,IAAIggB,EAASmB,EAAMnB,OACfD,EAAQoB,EAAMpB,MAKlB,QAJgBjgB,IAAZnC,QAAmDmC,IAA1BnC,EAAQ6kB,oBAAwD1iB,IAAzBnC,EAAQ8kB,eACxEzC,EAASriB,EAAQ6kB,cACjBzC,EAAQpiB,EAAQ8kB,mBAEJ3iB,IAAZnC,EAAuB,CAEvB,GADA4kB,EAAwB5kB,OACKmC,IAAzBnC,EAAQmkB,aACR,MAAM,IAAI9hB,MAAM,+DAGhBuiB,EAAsBT,aAAe,OAEzCS,EAAsBvC,OAASA,EAC/BuC,EAAsBxC,MAAQA,CAClC,MAEIwC,EAAsBT,aAAe,OACrCS,EAAsBvC,OAASA,EAC/BuC,EAAsBxC,MAAQA,EAElCE,EAAgByC,UAAUvB,EAAO,EAAG,GACpC/d,EAAO6c,EAAgB0C,aAAa,EAAG,EAAG5C,EAAOC,GAAQ5c,IAC7D,CAIJ,KACK,KAAI8e,EAkCJ,IAAIE,EAAe,CAEpB,QAAgBtiB,IAAZnC,EACA,MAAM,IAAIqC,MAAM,2DAEpB,MAAM6f,EAASvhB,SAASwhB,cAAc,UACtCD,EAAOE,MAAQoB,EAAMpB,MACrBF,EAAOG,OAASmB,EAAMnB,OACtB,MAAMC,EAAkBJ,EAAOK,WAAW,MAC1C,GAAuB,MAAnBD,EAAyB,CACzB,MAAMD,EAASmB,EAAMnB,OACfD,EAAQoB,EAAMpB,MAKpB,OAJAE,EAAgByC,UAAUvB,EAAO,EAAG,EAAGpB,EAAOC,GAC9C5c,EAAO6c,EAAgB0C,aAAa,EAAG,EAAG5C,EAAOC,GAAQ5c,KACzDmf,EAAsBvC,OAASA,EAC/BuC,EAAsBxC,MAAQA,GACvB,EAAI5jB,EAAQylB,gBAAgBxe,EAAMmf,EAC7C,CAEI,MAAM,IAAIviB,MAAM,4BAExB,CACK,GAAIsiB,EACL,OAAO,IAAIvkB,SAAQ,CAACC,EAASoP,KACzB,MAAMyS,EAASvhB,SAASwhB,cAAc,UAChC8C,EAAU/C,EAAOK,WAAW,MAClC,IAAKiB,IAAUyB,EACX,OAAOxV,IAEX,MAAMyV,EAAW,IAAIC,MACrBD,EAASE,YAAc,YACvBF,EAASrkB,IAAM2iB,EACf0B,EAASpR,OAAS,KACdoO,EAAOE,MAAQ8C,EAAS9C,MACxBF,EAAOG,OAAS6C,EAAS7C,OACzB4C,EAAQF,UAAUG,EAAU,EAAG,EAAGhD,EAAOE,MAAOF,EAAOG,QACvD,MAAMgD,EAAMJ,EAAQD,aAAa,EAAG,EAAG9C,EAAOE,MAAOF,EAAOG,QAC5DuC,EAAsBvC,OAASH,EAAOG,OACtCuC,EAAsBxC,MAAQF,EAAOE,MACrC/hB,GAAQ,EAAI7B,EAAQylB,gBAAgBoB,EAAI5f,KAAMmf,GAAuB,CACxE,IAIL,MAAM,IAAIviB,MAAM,iEACpB,CA/EyB,CACrB,IAAIggB,EACAD,EAeJ,QAdgBjgB,IAAZnC,QAAkDmC,IAAzBnC,EAAQ8kB,mBAAwD3iB,IAA1BnC,EAAQ6kB,eACvExC,EAASriB,EAAQ6kB,cACjBzC,EAAQpiB,EAAQ8kB,eAGhBzC,EAASmB,EAAMnB,OACfD,EAAQoB,EAAMpB,YAEFjgB,IAAZnC,IACA4kB,EAAwB5kB,GAE5B4kB,EAAsBlC,OAAS,OAC/BkC,EAAsBvC,OAASA,EAC/BuC,EAAsBxC,MAAQA,OACdjgB,IAAZnC,EAAuB,CACvB,MAAMslB,EAAa3kB,SAASwhB,cAAc,UAC1CmD,EAAWlD,MAAQA,EACnBkD,EAAWjD,OAASA,EACpB,MAAMC,EAAkBgD,EAAW/C,WAAW,MAC9C,GAAuB,MAAnBD,EAKA,MAAM,IAAIjgB,MAAM,6BAJhBigB,EAAgBiD,aAAa/B,EAAO,EAAG,GACvC/d,EAAO6c,EAAgB0C,aAAa,EAAG,EAAG5C,EAAOC,GAAQ5c,IAKjE,MAEIA,EAAO+d,EAAM/d,IAErB,CA8CA,CACA,QAAatD,IAATsD,EACA,OAAO,EAAIjH,EAAQylB,gBAAgBxe,EAAMmf,GAGzC,MAAM,IAAIviB,MAAM,iEACpB,C,6BCvNJuC,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQoH,YAAS,EACjB,MAAM4f,EAA8B,EAAQ,KACtCC,EAA2B,EAAQ,KACnCC,EAAyB,EAAQ,KAEjCC,EAAwC,IAAI3c,IAAI,CAClD,CAAC,UAAWb,cACZ,CAAC,QAASnE,YACV,CAAC,OAAQoE,WACT,CAAC,SAAUF,aACX,CAAC,UAAWA,aACZ,CAAC,QAASG,YACV,CAAC,QAASC,YACV,CAAC,OAAQtE,YACT,CAAC,UAAWuE,cACZ,CAAC,SAAUC,eAGTod,EAAwC,IAAI5c,IAAI,CAClD,CAACb,aAAc,WACf,CAACnE,WAAY,SACb,CAACoE,UAAW,QACZ,CAACF,YAAa,UACd,CAACG,WAAY,SACb,CAACC,WAAY,SACb,CAACC,aAAc,WACf,CAACC,YAAa,YAKlB,IAAIqd,GAAkB,EAoJtBrnB,EAAQoH,OApIR,MACImb,YAAYW,EAAMV,EAAMC,GAEpB,IAAI1b,EACAE,EACAD,EAEJ,GAtBY,MAChB,IAAKqgB,EAAiB,CAClBA,GAAkB,EAClB,MAAMC,EAAoD,oBAAlBrd,eAA+D,mBAAvBA,cAAcsd,KACxFC,EAAsD,oBAAnBtd,gBAAiE,mBAAxBA,eAAeqd,KAC7FD,IACAH,EAAsCtc,IAAI,QAASZ,eACnDmd,EAAsCvc,IAAIZ,cAAe,UAEzDud,IACAL,EAAsCtc,IAAI,SAAUX,gBACpDkd,EAAsCvc,IAAIX,eAAgB,UAElE,GAIIud,GAKoB,iBAATvE,EAMP,GAFAnc,EAAOmc,EACPlc,EAAOyb,EACM,WAATS,EAAmB,CAEnB,IAAKzW,MAAMC,QAAQ8V,GACf,MAAM,IAAI5V,UAAU,kDAIxB3F,EAAOub,CACX,KACK,CAED,MAAMkF,EAAwBP,EAAsCjb,IAAIgX,GACxE,QAA8Bvf,IAA1B+jB,EACA,MAAM,IAAI9a,UAAU,4BAA4BsW,MAEpD,GAAIzW,MAAMC,QAAQ8V,GAAO,CACrB,GAAa,YAATU,EAIA,MAAM,IAAItW,UAAU,iGAYpB3F,EAVc,WAATic,GAA8B,UAATA,EAUnBwE,EAAsBH,KAAK/E,EAAMmF,QAKjCD,EAAsBH,KAAK/E,EAE1C,KACK,MAAIA,aAAgBkF,GAIrB,MAAM,IAAI9a,UAAU,KAAK7F,mCAAsC2gB,KAH/DzgB,EAAOub,CAIX,CACJ,MAOA,GADAxb,EAAOwb,EACH/V,MAAMC,QAAQwW,GAAO,CAErB,GAAoB,IAAhBA,EAAKliB,OACL,MAAM,IAAI4L,UAAU,uDAExB,MAAMgb,SAA0B1E,EAAK,GACrC,GAAyB,WAArB0E,EACA7gB,EAAO,SACPE,EAAOic,MAEN,IAAyB,YAArB0E,EAQL,MAAM,IAAIhb,UAAU,uCAAuCgb,MAP3D7gB,EAAO,OAIPE,EAAOzB,WAAW+hB,KAAKrE,EAI3B,CACJ,KACK,CAED,MAAM2E,EAAaT,EAAsClb,IAAIgX,EAAKX,aAClE,QAAmB5e,IAAfkkB,EACA,MAAM,IAAIjb,UAAU,qCAAqCsW,EAAKX,gBAElExb,EAAO8gB,EACP5gB,EAAOic,CACX,CAGJ,QAAavf,IAATqD,EAEAA,EAAO,CAACC,EAAKjG,aAEZ,IAAKyL,MAAMC,QAAQ1F,GACpB,MAAM,IAAI4F,UAAU,0CAGxB,MAAM4B,GAAO,EAAI0Y,EAAuBY,eAAe9gB,GACvD,GAAIwH,IAASvH,EAAKjG,OACd,MAAM,IAAI6C,MAAM,iBAAiB2K,iCAAoCvH,EAAKjG,YAE9E6E,KAAKmB,KAAOA,EACZnB,KAAKkB,KAAOA,EACZlB,KAAKoB,KAAOA,EACZpB,KAAK2I,KAAOA,CAChB,CACAyU,uBAAuB+B,EAAOxjB,GAC1B,OAAO,EAAIylB,EAAyBzB,iBAAiBR,EAAOxjB,EAChE,CAGAujB,UAAUvjB,GACN,OAAO,EAAIwlB,EAA4BvD,iBAAiB5d,KAAMrE,EAClE,CACAumB,YAAYvmB,GACR,OAAO,EAAIwlB,EAA4BxD,mBAAmB3d,KAAMrE,EACpE,CAGAwmB,QAAQhhB,GACJ,OAAO,EAAIkgB,EAAuBe,eAAepiB,KAAMmB,EAC3D,E,6BClLJZ,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQioB,cAAgBjoB,EAAQ8nB,mBAAgB,EAChD,MAAMxF,EAAc,EAAQ,KAoB5BtiB,EAAQ8nB,cAde9gB,IACnB,IAAIwH,EAAO,EACX,IAAK,IAAIrH,EAAI,EAAGA,EAAIH,EAAKhG,OAAQmG,IAAK,CAClC,MAAM+gB,EAAMlhB,EAAKG,GACjB,GAAmB,iBAAR+gB,IAAqBvnB,OAAO2iB,cAAc4E,GACjD,MAAM,IAAItb,UAAU,QAAQzF,+BAA+B+gB,KAE/D,GAAIA,EAAM,EACN,MAAM,IAAIvF,WAAW,QAAQxb,2CAA2C+gB,KAE5E1Z,GAAQ0Z,CACZ,CACA,OAAO1Z,CAAI,EAOfxO,EAAQioB,cADc,CAACzhB,EAAQQ,IAAS,IAAIsb,EAAYlb,OAAOZ,EAAOO,KAAMP,EAAOS,KAAMD,E,6BC1BzFZ,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQoH,YAAS,EACjB,MAAM+gB,EAAmB,EAAQ,KAEjCnoB,EAAQoH,OAAS+gB,EAAiB/gB,M,2BCJlChB,OAAO2Z,eAAe/f,EAAS,aAAc,CAAEyE,OAAO,IACtDzE,EAAQkC,aAAU,EAGlBlC,EAAQkC,QAAU,Q,GCNdkmB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB3kB,IAAjB4kB,EACH,OAAOA,EAAavoB,QAGrB,IAAIC,EAASmoB,EAAyBE,GAAY,CAGjDtoB,QAAS,CAAC,GAOX,OAHAwoB,EAAoBF,GAAUlK,KAAKne,EAAOD,QAASC,EAAQA,EAAOD,QAASqoB,GAGpEpoB,EAAOD,OACf,CCnB0BqoB,CAAoB,I,MDF1CD,C","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/version.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/wasm-common.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/wasm-utils.ts","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/../common/dist/cjs/backend-impl.js","webpack://ort/../common/dist/cjs/backend.js","webpack://ort/../common/dist/cjs/env-impl.js","webpack://ort/../common/dist/cjs/env.js","webpack://ort/../common/dist/cjs/index.js","webpack://ort/../common/dist/cjs/inference-session-impl.js","webpack://ort/../common/dist/cjs/inference-session.js","webpack://ort/../common/dist/cjs/onnx-value.js","webpack://ort/../common/dist/cjs/tensor-conversion-impl.js","webpack://ort/../common/dist/cjs/tensor-factory-impl.js","webpack://ort/../common/dist/cjs/tensor-impl.js","webpack://ort/../common/dist/cjs/tensor-utils-impl.js","webpack://ort/../common/dist/cjs/tensor.js","webpack://ort/../common/dist/cjs/version.js","webpack://ort/webpack/bootstrap","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, () => {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initializeWebAssemblyInstance} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyInstance();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU && typeof navigator !== 'undefined' && navigator.gpu) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n  registerBackend('webnn', wasmBackend, 9);\n}\n\nenv.versions.web = version;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.16.3';\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyInstance = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initializeRuntime = async(env: Env): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : env};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initRuntime(env);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initializeRuntime, releaseSession, run} from './proxy-wrapper';\n\nlet runtimeInitialized: boolean;\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    if (response.status !== 200) {\n      throw new Error(`failed to load model: ${path}`);\n    }\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!runtimeInitialized) {\n      await initializeRuntime(env);\n      runtimeInitialized = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    // init JSEP if available\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n    await initJsep(getInstance(), env);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * allocate the memory and memcpy the model bytes, preparing for creating an instance of InferenceSession.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session using the prepared buffer containing the model data.\n * @param modelData a 2-elements tuple containing the pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNamesUTF8Encoded = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          checkLastError('Can\\'t create a session.');\n        }\n\n        const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n        const inputNames = [];\n        const outputNames = [];\n        for (let i = 0; i < inputCount; i++) {\n          const name = wasm._OrtGetInputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an input name.');\n          }\n          inputNamesUTF8Encoded.push(name);\n          inputNames.push(wasm.UTF8ToString(name));\n        }\n        for (let i = 0; i < outputCount; i++) {\n          const name = wasm._OrtGetOutputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an output name.');\n          }\n          outputNamesUTF8Encoded.push(name);\n          outputNames.push(wasm.UTF8ToString(name));\n        }\n\n        activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n        return [sessionHandle, inputNames, outputNames];\n      } catch (e) {\n        inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n        outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n        if (sessionHandle !== 0) {\n          wasm._OrtReleaseSession(sessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n      }\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded] = session;\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputValues: number[] = [];\n  const inputAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = inputs[i][0];\n      const dims = inputs[i][1];\n      const data = inputs[i][2];\n\n      let dataOffset: number;\n      let dataByteLength: number;\n\n      if (Array.isArray(data)) {\n        // string tensor\n        dataByteLength = 4 * data.length;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        let dataIndex = dataOffset / 4;\n        for (let i = 0; i < data.length; i++) {\n          if (typeof data[i] !== 'string') {\n            throw new TypeError(`tensor data at index ${i} is not a string`);\n          }\n          wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n      }\n\n      const stack = wasm.stackSave();\n      const dimsOffset = wasm.stackAlloc(4 * dims.length);\n      try {\n        let dimIndex = dimsOffset / 4;\n        dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n        const tensor = wasm._OrtCreateTensor(\n            tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n        if (tensor === 0) {\n          checkLastError(`Can't create tensor for input[${i}].`);\n        }\n        inputValues.push(tensor);\n      } finally {\n        wasm.stackRestore(stack);\n      }\n    }\n\n    const beforeRunStack = wasm.stackSave();\n    const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n    const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n    const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n    const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n    try {\n      let inputValuesIndex = inputValuesOffset / 4;\n      let inputNamesIndex = inputNamesOffset / 4;\n      let outputValuesIndex = outputValuesOffset / 4;\n      let outputNamesIndex = outputNamesOffset / 4;\n      for (let i = 0; i < inputCount; i++) {\n        wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n        wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n      }\n      for (let i = 0; i < outputCount; i++) {\n        wasm.HEAPU32[outputValuesIndex++] = 0;\n        wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n      }\n\n      // support RunOptions\n      let errorCode = wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const runPromise = wasm.jsepRunPromise;\n      if (runPromise && typeof runPromise.then !== 'undefined') {\n        errorCode = await runPromise;\n      }\n\n      const output: SerializableTensor[] = [];\n\n      if (errorCode !== 0) {\n        checkLastError('failed to call OrtRun().');\n      }\n\n      for (let i = 0; i < outputCount; i++) {\n        const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n        const beforeGetTensorDataStack = wasm.stackSave();\n        // stack allocate 4 pointer value\n        const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n        let type: Tensor.Type|undefined, dataOffset = 0;\n        try {\n          errorCode = wasm._OrtGetTensorData(\n              tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n          if (errorCode !== 0) {\n            checkLastError(`Can't access output tensor data on index ${i}.`);\n          }\n          let tensorDataIndex = tensorDataOffset / 4;\n          const dataType = wasm.HEAPU32[tensorDataIndex++];\n          dataOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n          const dims = [];\n          for (let i = 0; i < dimsLength; i++) {\n            dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n          }\n          wasm._OrtFree(dimsOffset);\n\n          const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n          type = tensorDataTypeEnumToString(dataType);\n          if (type === 'string') {\n            const stringData: string[] = [];\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < size; i++) {\n              const offset = wasm.HEAPU32[dataIndex++];\n              const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n              stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n            }\n            output.push([type, dims, stringData]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data]);\n          }\n        } finally {\n          wasm.stackRestore(beforeGetTensorDataStack);\n          if (type === 'string' && dataOffset) {\n            wasm._free(dataOffset);\n          }\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n\n      return output;\n    } finally {\n      wasm.stackRestore(beforeRunStack);\n    }\n  } finally {\n    inputValues.forEach(v => wasm._OrtReleaseTensor(v));\n    inputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n","\r\nvar ortWasm = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(moduleArg = {}) {\r\n\r\nvar e=moduleArg,aa,h;e.ready=new Promise((a,b)=>{aa=a;h=b});var ba=Object.assign({},e),m=\"./this.program\",q=(a,b)=>{throw b;},ca=\"object\"==typeof window,v=\"function\"==typeof importScripts,x=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,y=\"\",A,B,C;\r\nif(x){var fs=require(\"fs\"),D=require(\"path\");y=v?D.dirname(y)+\"/\":__dirname+\"/\";A=(a,b)=>{a=a.startsWith(\"file://\")?new URL(a):D.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};C=a=>{a=A(a,!0);a.buffer||(a=new Uint8Array(a));return a};B=(a,b,c,f=!0)=>{a=a.startsWith(\"file://\")?new URL(a):D.normalize(a);fs.readFile(a,f?void 0:\"utf8\",(g,k)=>{g?c(g):b(f?k.buffer:k)})};!e.thisProgram&&1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);q=(a,b)=>{process.exitCode=\r\na;throw b;};e.inspect=()=>\"[Emscripten Module object]\"}else if(ca||v)v?y=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(y=document.currentScript.src),_scriptDir&&(y=_scriptDir),0!==y.indexOf(\"blob:\")?y=y.substr(0,y.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):y=\"\",A=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},v&&(C=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),\r\nB=(a,b,c)=>{var f=new XMLHttpRequest;f.open(\"GET\",a,!0);f.responseType=\"arraybuffer\";f.onload=()=>{200==f.status||0==f.status&&f.response?b(f.response):c()};f.onerror=c;f.send(null)};var da=e.print||console.log.bind(console),E=e.printErr||console.error.bind(console);Object.assign(e,ba);ba=null;e.thisProgram&&(m=e.thisProgram);e.quit&&(q=e.quit);var F;e.wasmBinary&&(F=e.wasmBinary);var noExitRuntime=e.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&G(\"no native wasm support detected\");\r\nvar H,I,J=!1,K,L,M,N;function ea(){var a=H.buffer;e.HEAP8=K=new Int8Array(a);e.HEAP16=new Int16Array(a);e.HEAP32=M=new Int32Array(a);e.HEAPU8=L=new Uint8Array(a);e.HEAPU16=new Uint16Array(a);e.HEAPU32=N=new Uint32Array(a);e.HEAPF32=new Float32Array(a);e.HEAPF64=new Float64Array(a)}var fa=[],ha=[],ia=[];function ja(){var a=e.preRun.shift();fa.unshift(a)}var O=0,P=null,Q=null;\r\nfunction G(a){if(e.onAbort)e.onAbort(a);a=\"Aborted(\"+a+\")\";E(a);J=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");h(a);throw a;}function ka(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var R;R=\"ort-wasm.wasm\";if(!ka(R)){var la=R;R=e.locateFile?e.locateFile(la,y):y+la}function ma(a){if(a==R&&F)return new Uint8Array(F);if(C)return C(a);throw\"both async and sync fetching of the wasm failed\";}\r\nfunction na(a){if(!F&&(ca||v)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>ma(a));if(B)return new Promise((b,c)=>{B(a,f=>b(new Uint8Array(f)),c)})}return Promise.resolve().then(()=>ma(a))}function oa(a,b,c){return na(a).then(f=>WebAssembly.instantiate(f,b)).then(f=>f).then(c,f=>{E(\"failed to asynchronously prepare wasm: \"+f);G(f)})}\r\nfunction pa(a,b){var c=R;return F||\"function\"!=typeof WebAssembly.instantiateStreaming||ka(c)||c.startsWith(\"file://\")||x||\"function\"!=typeof fetch?oa(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(f=>WebAssembly.instantiateStreaming(f,a).then(b,function(g){E(\"wasm streaming compile failed: \"+g);E(\"falling back to ArrayBuffer instantiation\");return oa(c,a,b)}))}var S;function qa(a){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${a})`;this.status=a}var T=a=>{for(;0<a.length;)a.shift()(e)};\r\nfunction ra(a){this.qa=a-24;this.va=function(b){N[this.qa+4>>2>>>0]=b};this.ua=function(b){N[this.qa+8>>2>>>0]=b};this.sa=function(b,c){this.ta();this.va(b);this.ua(c)};this.ta=function(){N[this.qa+16>>2>>>0]=0}}\r\nvar sa=0,ta=0,ua=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,va=(a,b,c)=>{b>>>=0;var f=b+c;for(c=b;a[c]&&!(c>=f);)++c;if(16<c-b&&a.buffer&&ua)return ua.decode(a.subarray(b,c));for(f=\"\";b<c;){var g=a[b++];if(g&128){var k=a[b++]&63;if(192==(g&224))f+=String.fromCharCode((g&31)<<6|k);else{var l=a[b++]&63;g=224==(g&240)?(g&15)<<12|k<<6|l:(g&7)<<18|k<<12|l<<6|a[b++]&63;65536>g?f+=String.fromCharCode(g):(g-=65536,f+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else f+=String.fromCharCode(g)}return f},\r\nU=(a,b)=>(a>>>=0)?va(L,a,b):\"\",V=a=>{for(var b=0,c=0;c<a.length;++c){var f=a.charCodeAt(c);127>=f?b++:2047>=f?b+=2:55296<=f&&57343>=f?(b+=4,++c):b+=3}return b},W=(a,b,c,f)=>{c>>>=0;if(!(0<f))return 0;var g=c;f=c+f-1;for(var k=0;k<a.length;++k){var l=a.charCodeAt(k);if(55296<=l&&57343>=l){var r=a.charCodeAt(++k);l=65536+((l&1023)<<10)|r&1023}if(127>=l){if(c>=f)break;b[c++>>>0]=l}else{if(2047>=l){if(c+1>=f)break;b[c++>>>0]=192|l>>6}else{if(65535>=l){if(c+2>=f)break;b[c++>>>0]=224|l>>12}else{if(c+3>=\r\nf)break;b[c++>>>0]=240|l>>18;b[c++>>>0]=128|l>>12&63}b[c++>>>0]=128|l>>6&63}b[c++>>>0]=128|l&63}}b[c>>>0]=0;return c-g},X=a=>0===a%4&&(0!==a%100||0===a%400),wa=[0,31,60,91,121,152,182,213,244,274,305,335],xa=[0,31,59,90,120,151,181,212,243,273,304,334],Ca=a=>{var b=V(a)+1,c=ya(b);c&&W(a,L,c,b);return c},Y={},Ea=()=>{if(!Da){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\r\n\"_\")+\".UTF-8\",_:m||\"./this.program\"},b;for(b in Y)void 0===Y[b]?delete a[b]:a[b]=Y[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);Da=c}return Da},Da,Fa=[null,[],[]],Ga=()=>{if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues)return c=>crypto.getRandomValues(c);if(x)try{var a=require(\"crypto\");if(a.randomFillSync)return c=>a.randomFillSync(c);var b=a.randomBytes;return c=>(c.set(b(c.byteLength)),c)}catch(c){}G(\"initRandomDevice\")},Ha=a=>(Ha=Ga())(a),Ia=[31,29,31,30,31,30,31,31,30,\r\n31,30,31],Ja=[31,28,31,30,31,30,31,31,30,31,30,31];function Ka(a){var b=Array(V(a)+1);W(a,b,0,b.length);return b}\r\nfunction La(a,b,c,f){function g(d,n,p){for(d=\"number\"==typeof d?d.toString():d||\"\";d.length<n;)d=p[0]+d;return d}function k(d,n){return g(d,n,\"0\")}function l(d,n){function p(za){return 0>za?-1:0<za?1:0}var z;0===(z=p(d.getFullYear()-n.getFullYear()))&&0===(z=p(d.getMonth()-n.getMonth()))&&(z=p(d.getDate()-n.getDate()));return z}function r(d){switch(d.getDay()){case 0:return new Date(d.getFullYear()-1,11,29);case 1:return d;case 2:return new Date(d.getFullYear(),0,3);case 3:return new Date(d.getFullYear(),\r\n0,2);case 4:return new Date(d.getFullYear(),0,1);case 5:return new Date(d.getFullYear()-1,11,31);case 6:return new Date(d.getFullYear()-1,11,30)}}function w(d){var n=d.ma;for(d=new Date((new Date(d.na+1900,0,1)).getTime());0<n;){var p=d.getMonth(),z=(X(d.getFullYear())?Ia:Ja)[p];if(n>z-d.getDate())n-=z-d.getDate()+1,d.setDate(1),11>p?d.setMonth(p+1):(d.setMonth(0),d.setFullYear(d.getFullYear()+1));else{d.setDate(d.getDate()+n);break}}p=new Date(d.getFullYear()+1,0,4);n=r(new Date(d.getFullYear(),\r\n0,4));p=r(p);return 0>=l(n,d)?0>=l(p,d)?d.getFullYear()+1:d.getFullYear():d.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;f>>>=0;var t=M[f+40>>2>>>0];f={ya:M[f>>2>>>0],xa:M[f+4>>2>>>0],oa:M[f+8>>2>>>0],ra:M[f+12>>2>>>0],pa:M[f+16>>2>>>0],na:M[f+20>>2>>>0],ha:M[f+24>>2>>>0],ma:M[f+28>>2>>>0],Aa:M[f+32>>2>>>0],wa:M[f+36>>2>>>0],za:t?U(t):\"\"};c=U(c);t={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\r\n\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var u in t)c=c.replace(new RegExp(u,\"g\"),t[u]);var Aa=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),Ba=\"January February March April May June July August September October November December\".split(\" \");t={\"%a\":d=>Aa[d.ha].substring(0,3),\"%A\":d=>Aa[d.ha],\"%b\":d=>\r\nBa[d.pa].substring(0,3),\"%B\":d=>Ba[d.pa],\"%C\":d=>k((d.na+1900)/100|0,2),\"%d\":d=>k(d.ra,2),\"%e\":d=>g(d.ra,2,\" \"),\"%g\":d=>w(d).toString().substring(2),\"%G\":d=>w(d),\"%H\":d=>k(d.oa,2),\"%I\":d=>{d=d.oa;0==d?d=12:12<d&&(d-=12);return k(d,2)},\"%j\":d=>{for(var n=0,p=0;p<=d.pa-1;n+=(X(d.na+1900)?Ia:Ja)[p++]);return k(d.ra+n,3)},\"%m\":d=>k(d.pa+1,2),\"%M\":d=>k(d.xa,2),\"%n\":()=>\"\\n\",\"%p\":d=>0<=d.oa&&12>d.oa?\"AM\":\"PM\",\"%S\":d=>k(d.ya,2),\"%t\":()=>\"\\t\",\"%u\":d=>d.ha||7,\"%U\":d=>k(Math.floor((d.ma+7-d.ha)/7),2),\"%V\":d=>\r\n{var n=Math.floor((d.ma+7-(d.ha+6)%7)/7);2>=(d.ha+371-d.ma-2)%7&&n++;if(n)53==n&&(p=(d.ha+371-d.ma)%7,4==p||3==p&&X(d.na)||(n=1));else{n=52;var p=(d.ha+7-d.ma-1)%7;(4==p||5==p&&X(d.na%400-1))&&n++}return k(n,2)},\"%w\":d=>d.ha,\"%W\":d=>k(Math.floor((d.ma+7-(d.ha+6)%7)/7),2),\"%y\":d=>(d.na+1900).toString().substring(2),\"%Y\":d=>d.na+1900,\"%z\":d=>{d=d.wa;var n=0<=d;d=Math.abs(d)/60;return(n?\"+\":\"-\")+String(\"0000\"+(d/60*100+d%60)).slice(-4)},\"%Z\":d=>d.za,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(u in t)c.includes(u)&&\r\n(c=c.replace(new RegExp(u,\"g\"),t[u](f)));c=c.replace(/\\0\\0/g,\"%\");u=Ka(c);if(u.length>b)return 0;K.set(u,a>>>0);return u.length-1}\r\nvar Na={a:function(a,b,c){a>>>=0;(new ra(a)).sa(b>>>0,c>>>0);sa=a;ta++;throw sa;},e:function(){return 0},I:function(){},y:function(){},A:function(){},K:function(){return 0},G:function(){},B:function(){},F:function(){},g:function(){},z:function(){},w:function(){},H:function(){},x:function(){},k:()=>!0,n:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);M[c>>2>>>0]=a.getUTCSeconds();M[c+4>>2>>>0]=a.getUTCMinutes();M[c+8>>2>>>0]=a.getUTCHours();M[c+12>>2>>>\r\n0]=a.getUTCDate();M[c+16>>2>>>0]=a.getUTCMonth();M[c+20>>2>>>0]=a.getUTCFullYear()-1900;M[c+24>>2>>>0]=a.getUTCDay();M[c+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},o:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);M[c>>2>>>0]=a.getSeconds();M[c+4>>2>>>0]=a.getMinutes();M[c+8>>2>>>0]=a.getHours();M[c+12>>2>>>0]=a.getDate();M[c+16>>2>>>0]=a.getMonth();M[c+20>>2>>>0]=a.getFullYear()-1900;M[c+24>>2>>>0]=a.getDay();M[c+28>>2>>>\r\n0]=(X(a.getFullYear())?wa:xa)[a.getMonth()]+a.getDate()-1|0;M[c+36>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();var f=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();M[c+32>>2>>>0]=(b!=f&&a.getTimezoneOffset()==Math.min(f,b))|0},p:function(a){a>>>=0;var b=new Date(M[a+20>>2>>>0]+1900,M[a+16>>2>>>0],M[a+12>>2>>>0],M[a+8>>2>>>0],M[a+4>>2>>>0],M[a>>2>>>0],0),c=M[a+32>>2>>>0],f=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),\r\nk=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),l=Math.min(k,g);0>c?M[a+32>>2>>>0]=Number(g!=k&&l==f):0<c!=(l==f)&&(g=Math.max(k,g),b.setTime(b.getTime()+6E4*((0<c?l:g)-f)));M[a+24>>2>>>0]=b.getDay();M[a+28>>2>>>0]=(X(b.getFullYear())?wa:xa)[b.getMonth()]+b.getDate()-1|0;M[a>>2>>>0]=b.getSeconds();M[a+4>>2>>>0]=b.getMinutes();M[a+8>>2>>>0]=b.getHours();M[a+12>>2>>>0]=b.getDate();M[a+16>>2>>>0]=b.getMonth();M[a+20>>2>>>0]=b.getYear();a=b.getTime()/1E3;return Ma((S=a,1<=+Math.abs(S)?0<S?+Math.floor(S/\r\n4294967296)>>>0:~~+Math.ceil((S-+(~~S>>>0))/4294967296)>>>0:0)),a>>>0},l:function(){return-52},m:function(){},u:function(a,b,c){function f(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:\"GMT\"}c>>>=0;var g=(new Date).getFullYear(),k=new Date(g,0,1),l=new Date(g,6,1);g=k.getTimezoneOffset();var r=l.getTimezoneOffset();N[a>>>0>>2>>>0]=60*Math.max(g,r);M[b>>>0>>2>>>0]=Number(g!=r);a=f(k);b=f(l);a=Ca(a);b=Ca(b);r<g?(N[c>>2>>>0]=a,N[c+4>>2>>>0]=b):(N[c>>2>>>0]=b,N[c+4>>2>>>0]=a)},d:()=>{G(\"\")},\r\nh:function(){return Date.now()},v:function(){return 4294901760},b:()=>performance.now(),J:function(a,b,c){b>>>=0;return L.copyWithin(a>>>0>>>0,b>>>0,b+(c>>>0)>>>0)},t:function(a){a>>>=0;var b=L.length;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var f=b*(1+.2/c);f=Math.min(f,a+100663296);var g=Math;f=Math.max(a,f);a:{g=g.min.call(g,4294901760,f+(65536-f%65536)%65536)-H.buffer.byteLength+65535>>>16;try{H.grow(g);ea();var k=1;break a}catch(l){}k=void 0}if(k)return!0}return!1},D:function(a,b){a>>>=\r\n0;b>>>=0;var c=0;Ea().forEach(function(f,g){var k=b+c;g=N[a+4*g>>2>>>0]=k;for(k=0;k<f.length;++k)K[g++>>0>>>0]=f.charCodeAt(k);K[g>>0>>>0]=0;c+=f.length+1});return 0},E:function(a,b){a>>>=0;b>>>=0;var c=Ea();N[a>>2>>>0]=c.length;var f=0;c.forEach(function(g){f+=g.length+1});N[b>>2>>>0]=f;return 0},s:a=>{if(!noExitRuntime){if(e.onExit)e.onExit(a);J=!0}q(a,new qa(a))},f:()=>52,j:function(){return 52},q:function(){return 70},i:function(a,b,c,f){b>>>=0;c>>>=0;f>>>=0;for(var g=0,k=0;k<c;k++){var l=N[b>>\r\n2>>>0],r=N[b+4>>2>>>0];b+=8;for(var w=0;w<r;w++){var t=L[l+w>>>0],u=Fa[a];0===t||10===t?((1===a?da:E)(va(u,0)),u.length=0):u.push(t)}g+=r}N[f>>2>>>0]=g;return 0},r:function(a,b){a>>>=0;Ha(L.subarray(a>>>0,a+(b>>>0)>>>0));return 0},C:La,c:function(a,b,c,f){return La(a>>>0,b>>>0,c>>>0,f>>>0)}};\r\n(function(){function a(c){c=c.exports;I=c=Oa(c);H=I.L;ea();ha.unshift(I.M);O--;e.monitorRunDependencies&&e.monitorRunDependencies(O);if(0==O&&(null!==P&&(clearInterval(P),P=null),Q)){var f=Q;Q=null;f()}return c}var b={a:Na};O++;e.monitorRunDependencies&&e.monitorRunDependencies(O);if(e.instantiateWasm)try{return e.instantiateWasm(b,a)}catch(c){E(\"Module.instantiateWasm callback failed with error: \"+c),h(c)}pa(b,function(c){a(c.instance)}).catch(h);return{}})();\r\ne._OrtInit=(a,b)=>(e._OrtInit=I.N)(a,b);e._OrtGetLastError=(a,b)=>(e._OrtGetLastError=I.O)(a,b);e._OrtCreateSessionOptions=(a,b,c,f,g,k,l,r,w,t)=>(e._OrtCreateSessionOptions=I.P)(a,b,c,f,g,k,l,r,w,t);e._OrtAppendExecutionProvider=(a,b)=>(e._OrtAppendExecutionProvider=I.Q)(a,b);e._OrtAddSessionConfigEntry=(a,b,c)=>(e._OrtAddSessionConfigEntry=I.R)(a,b,c);e._OrtReleaseSessionOptions=a=>(e._OrtReleaseSessionOptions=I.S)(a);e._OrtCreateSession=(a,b,c)=>(e._OrtCreateSession=I.T)(a,b,c);\r\ne._OrtReleaseSession=a=>(e._OrtReleaseSession=I.U)(a);e._OrtGetInputOutputCount=(a,b,c)=>(e._OrtGetInputOutputCount=I.V)(a,b,c);e._OrtGetInputName=(a,b)=>(e._OrtGetInputName=I.W)(a,b);e._OrtGetOutputName=(a,b)=>(e._OrtGetOutputName=I.X)(a,b);e._OrtFree=a=>(e._OrtFree=I.Y)(a);e._OrtCreateTensor=(a,b,c,f,g)=>(e._OrtCreateTensor=I.Z)(a,b,c,f,g);e._OrtGetTensorData=(a,b,c,f,g)=>(e._OrtGetTensorData=I._)(a,b,c,f,g);e._OrtReleaseTensor=a=>(e._OrtReleaseTensor=I.$)(a);\r\ne._OrtCreateRunOptions=(a,b,c,f)=>(e._OrtCreateRunOptions=I.aa)(a,b,c,f);e._OrtAddRunConfigEntry=(a,b,c)=>(e._OrtAddRunConfigEntry=I.ba)(a,b,c);e._OrtReleaseRunOptions=a=>(e._OrtReleaseRunOptions=I.ca)(a);e._OrtRun=(a,b,c,f,g,k,l,r)=>(e._OrtRun=I.da)(a,b,c,f,g,k,l,r);e._OrtEndProfiling=a=>(e._OrtEndProfiling=I.ea)(a);var ya=e._malloc=a=>(ya=e._malloc=I.fa)(a);e._free=a=>(e._free=I.ga)(a);var Ma=a=>(Ma=I.ia)(a),Pa=()=>(Pa=I.ja)(),Qa=a=>(Qa=I.ka)(a),Ra=a=>(Ra=I.la)(a);\r\nfunction Oa(a){a=Object.assign({},a);var b=f=>()=>f()>>>0,c=f=>g=>f(g)>>>0;a.__errno_location=b(a.__errno_location);a.malloc=c(a.malloc);a.stackSave=b(a.stackSave);a.stackAlloc=c(a.stackAlloc);return a}e.stackAlloc=Ra;e.stackSave=Pa;e.stackRestore=Qa;e.UTF8ToString=U;e.stringToUTF8=(a,b,c)=>W(a,L,b,c);e.lengthBytesUTF8=V;var Z;Q=function Sa(){Z||Ta();Z||(Q=Sa)};\r\nfunction Ta(){function a(){if(!Z&&(Z=!0,e.calledRun=!0,!J)){T(ha);aa(e);if(e.onRuntimeInitialized)e.onRuntimeInitialized();if(e.postRun)for(\"function\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var b=e.postRun.shift();ia.unshift(b)}T(ia)}}if(!(0<O)){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)ja();T(fa);0<O||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){e.setStatus(\"\")},1);a()},1)):a())}}\r\nif(e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();Ta();\r\n\r\n\r\n  return moduleArg.ready\r\n}\r\n\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], () => ortWasm);\r\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveBackend = exports.registerBackend = void 0;\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nconst registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\nexports.registerBackend = registerBackend;\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nconst resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\nexports.resolveBackend = resolveBackend;\n//# sourceMappingURL=backend-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerBackend = void 0;\nvar backend_impl_js_1 = require(\"./backend-impl.js\");\nObject.defineProperty(exports, \"registerBackend\", { enumerable: true, get: function () { return backend_impl_js_1.registerBackend; } });\n//# sourceMappingURL=backend.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.env = void 0;\nconst version_js_1 = require(\"./version.js\");\nlet logLevelValue = 'warning';\nexports.env = {\n    wasm: {},\n    webgl: {},\n    webgpu: {},\n    versions: { common: version_js_1.version },\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        logLevelValue = value;\n    },\n    get logLevel() {\n        return logLevelValue;\n    },\n};\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(exports.env, 'logLevel', { enumerable: true });\n//# sourceMappingURL=env-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.env = void 0;\nconst env_impl_js_1 = require(\"./env-impl.js\");\n/**\n * Represent a set of flags as a global singleton.\n */\nexports.env = env_impl_js_1.env;\n//# sourceMappingURL=env.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript.html)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n__exportStar(require(\"./backend.js\"), exports);\n__exportStar(require(\"./env.js\"), exports);\n__exportStar(require(\"./inference-session.js\"), exports);\n__exportStar(require(\"./tensor.js\"), exports);\n__exportStar(require(\"./onnx-value.js\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InferenceSession = void 0;\nconst backend_impl_js_1 = require(\"./backend-impl.js\");\nconst tensor_js_1 = require(\"./tensor.js\");\nclass InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof tensor_js_1.Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof tensor_js_1.Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof tensor_js_1.Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new tensor_js_1.Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    async release() {\n        return this.handler.dispose();\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await (0, backend_impl_js_1.resolveBackend)(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\nexports.InferenceSession = InferenceSession;\n//# sourceMappingURL=inference-session-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InferenceSession = void 0;\nconst inference_session_impl_js_1 = require(\"./inference-session-impl.js\");\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexports.InferenceSession = inference_session_impl_js_1.InferenceSession;\n//# sourceMappingURL=inference-session.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=onnx-value.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorToImageData = exports.tensorToDataURL = void 0;\n/**\n * implementation of Tensor.toDataURL()\n */\nconst tensorToDataURL = (tensor, options) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = tensor.dims[3];\n    canvas.height = tensor.dims[2];\n    const pixels2DContext = canvas.getContext('2d');\n    if (pixels2DContext != null) {\n        // Default values for height and width & format\n        let width;\n        let height;\n        if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n            width = tensor.dims[2];\n            height = tensor.dims[3];\n        }\n        else { // Default layout is NCWH\n            width = tensor.dims[3];\n            height = tensor.dims[2];\n        }\n        const inputformat = options?.format !== undefined ? options.format : 'RGB';\n        const norm = options?.norm;\n        let normMean;\n        let normBias;\n        if (norm === undefined || norm.mean === undefined) {\n            normMean = [255, 255, 255, 255];\n        }\n        else {\n            if (typeof (norm.mean) === 'number') {\n                normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n            }\n            else {\n                normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n                if (norm.mean[3] !== undefined) {\n                    normMean[3] = norm.mean[3];\n                }\n            }\n        }\n        if (norm === undefined || norm.bias === undefined) {\n            normBias = [0, 0, 0, 0];\n        }\n        else {\n            if (typeof (norm.bias) === 'number') {\n                normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n            }\n            else {\n                normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                if (norm.bias[3] !== undefined) {\n                    normBias[3] = norm.bias[3];\n                }\n            }\n        }\n        const stride = height * width;\n        // Default pointer assignments\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGBA') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n            aTensorPointer = stride * 3;\n        }\n        else if (inputformat === 'RGB') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n        }\n        else if (inputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        for (let i = 0; i < height; i++) {\n            for (let j = 0; j < width; j++) {\n                const R = (tensor.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                const G = (tensor.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                const B = (tensor.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                const A = aTensorPointer === -1 ?\n                    255 :\n                    (tensor.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n                // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n                pixels2DContext.fillRect(j, i, 1, 1);\n            }\n        }\n        return canvas.toDataURL();\n    }\n    else {\n        throw new Error('Can not access image data');\n    }\n};\nexports.tensorToDataURL = tensorToDataURL;\n/**\n * implementation of Tensor.toImageData()\n */\nconst tensorToImageData = (tensor, options) => {\n    const pixels2DContext = document.createElement('canvas').getContext('2d');\n    let image;\n    if (pixels2DContext != null) {\n        // Default values for height and width & format\n        let width;\n        let height;\n        let channels;\n        if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n            width = tensor.dims[2];\n            height = tensor.dims[1];\n            channels = tensor.dims[3];\n        }\n        else { // Default layout is NCWH\n            width = tensor.dims[3];\n            height = tensor.dims[2];\n            channels = tensor.dims[1];\n        }\n        const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n        const norm = options?.norm;\n        let normMean;\n        let normBias;\n        if (norm === undefined || norm.mean === undefined) {\n            normMean = [255, 255, 255, 255];\n        }\n        else {\n            if (typeof (norm.mean) === 'number') {\n                normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n            }\n            else {\n                normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n                if (norm.mean[3] !== undefined) {\n                    normMean[3] = norm.mean[3];\n                }\n            }\n        }\n        if (norm === undefined || norm.bias === undefined) {\n            normBias = [0, 0, 0, 0];\n        }\n        else {\n            if (typeof (norm.bias) === 'number') {\n                normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n            }\n            else {\n                normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                if (norm.bias[3] !== undefined) {\n                    normBias[3] = norm.bias[3];\n                }\n            }\n        }\n        const stride = height * width;\n        if (options !== undefined) {\n            if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                throw new Error('Tensor format doesn\\'t match input tensor dims');\n            }\n        }\n        // Default pointer assignments\n        const step = 4;\n        let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGBA') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n            aTensorPointer = stride * 3;\n        }\n        else if (inputformat === 'RGB') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n        }\n        else if (inputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        image = pixels2DContext.createImageData(width, height);\n        for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n            image.data[rImagePointer] = (tensor.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n            image.data[gImagePointer] = (tensor.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n            image.data[bImagePointer] = (tensor.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n            image.data[aImagePointer] = aTensorPointer === -1 ?\n                255 :\n                (tensor.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n        }\n    }\n    else {\n        throw new Error('Can not access image data');\n    }\n    return image;\n};\nexports.tensorToImageData = tensorToImageData;\n//# sourceMappingURL=tensor-conversion-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorFromImage = exports.bufferToTensor = void 0;\nconst tensor_js_1 = require(\"./tensor.js\");\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nconst bufferToTensor = (buffer, options) => {\n    if (buffer === undefined) {\n        throw new Error('Image buffer must be defined');\n    }\n    if (options.height === undefined || options.width === undefined) {\n        throw new Error('Image height and width must be defined');\n    }\n    if (options.tensorLayout === 'NHWC') {\n        throw new Error('NHWC Tensor layout is not supported yet');\n    }\n    const { height, width } = options;\n    const norm = options.norm ?? { mean: 255, bias: 0 };\n    let normMean;\n    let normBias;\n    if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n    }\n    else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], norm.mean[3] ?? 255];\n    }\n    if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n    }\n    else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], norm.bias[3] ?? 0];\n    }\n    const inputformat = options.format !== undefined ? options.format : 'RGBA';\n    // default value is RGBA since imagedata and HTMLImageElement uses it\n    const outputformat = options.tensorFormat !== undefined ?\n        (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n        'RGB';\n    const stride = height * width;\n    const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n    // Default pointer assignments\n    let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGB') {\n        step = 3;\n        rImagePointer = 0;\n        gImagePointer = 1;\n        bImagePointer = 2;\n        aImagePointer = -1;\n    }\n    // Updating the pointer assignments based on the output tensor format\n    if (outputformat === 'RGBA') {\n        aTensorPointer = stride * 3;\n    }\n    else if (outputformat === 'RBG') {\n        rTensorPointer = 0;\n        bTensorPointer = stride;\n        gTensorPointer = stride * 2;\n    }\n    else if (outputformat === 'BGR') {\n        bTensorPointer = 0;\n        gTensorPointer = stride;\n        rTensorPointer = stride * 2;\n    }\n    for (let i = 0; i < stride; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n        float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n        float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n        float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n        if (aTensorPointer !== -1 && aImagePointer !== -1) {\n            float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n        }\n    }\n    // Float32Array -> ort.Tensor\n    const outputTensor = outputformat === 'RGBA' ? new tensor_js_1.Tensor('float32', float32Data, [1, 4, height, width]) :\n        new tensor_js_1.Tensor('float32', float32Data, [1, 3, height, width]);\n    return outputTensor;\n};\nexports.bufferToTensor = bufferToTensor;\n/**\n * implementation of Tensor.fromImage().\n */\nconst tensorFromImage = async (image, options) => {\n    // checking the type of image object\n    const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n    const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n    const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n    const isString = typeof image === 'string';\n    let data;\n    let bufferToTensorOptions = options ?? {};\n    // filling and checking image configuration options\n    if (isHTMLImageEle) {\n        // HTMLImageElement - image object - format is RGBA by default\n        const canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const pixels2DContext = canvas.getContext('2d');\n        if (pixels2DContext != null) {\n            let height = image.height;\n            let width = image.width;\n            if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            if (options !== undefined) {\n                bufferToTensorOptions = options;\n                if (options.tensorFormat !== undefined) {\n                    throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                }\n                else {\n                    bufferToTensorOptions.tensorFormat = 'RGBA';\n                }\n                bufferToTensorOptions.height = height;\n                bufferToTensorOptions.width = width;\n            }\n            else {\n                bufferToTensorOptions.tensorFormat = 'RGBA';\n                bufferToTensorOptions.height = height;\n                bufferToTensorOptions.width = width;\n            }\n            pixels2DContext.drawImage(image, 0, 0);\n            data = pixels2DContext.getImageData(0, 0, width, height).data;\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    else if (isImageDataEle) {\n        let height;\n        let width;\n        if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n            height = options.resizedHeight;\n            width = options.resizedWidth;\n        }\n        else {\n            height = image.height;\n            width = image.width;\n        }\n        if (options !== undefined) {\n            bufferToTensorOptions = options;\n        }\n        bufferToTensorOptions.format = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n        if (options !== undefined) {\n            const tempCanvas = document.createElement('canvas');\n            tempCanvas.width = width;\n            tempCanvas.height = height;\n            const pixels2DContext = tempCanvas.getContext('2d');\n            if (pixels2DContext != null) {\n                pixels2DContext.putImageData(image, 0, 0);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else {\n            data = image.data;\n        }\n    }\n    else if (isImageBitmap) {\n        // ImageBitmap - image object - format must be provided by user\n        if (options === undefined) {\n            throw new Error('Please provide image config with format for Imagebitmap');\n        }\n        const canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const pixels2DContext = canvas.getContext('2d');\n        if (pixels2DContext != null) {\n            const height = image.height;\n            const width = image.width;\n            pixels2DContext.drawImage(image, 0, 0, width, height);\n            data = pixels2DContext.getImageData(0, 0, width, height).data;\n            bufferToTensorOptions.height = height;\n            bufferToTensorOptions.width = width;\n            return (0, exports.bufferToTensor)(data, bufferToTensorOptions);\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    else if (isString) {\n        return new Promise((resolve, reject) => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            if (!image || !context) {\n                return reject();\n            }\n            const newImage = new Image();\n            newImage.crossOrigin = 'Anonymous';\n            newImage.src = image;\n            newImage.onload = () => {\n                canvas.width = newImage.width;\n                canvas.height = newImage.height;\n                context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                bufferToTensorOptions.height = canvas.height;\n                bufferToTensorOptions.width = canvas.width;\n                resolve((0, exports.bufferToTensor)(img.data, bufferToTensorOptions));\n            };\n        });\n    }\n    else {\n        throw new Error('Input data provided is not supported - aborted tensor creation');\n    }\n    if (data !== undefined) {\n        return (0, exports.bufferToTensor)(data, bufferToTensorOptions);\n    }\n    else {\n        throw new Error('Input data provided is not supported - aborted tensor creation');\n    }\n};\nexports.tensorFromImage = tensorFromImage;\n//# sourceMappingURL=tensor-factory-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tensor = void 0;\nconst tensor_conversion_impl_js_1 = require(\"./tensor-conversion-impl.js\");\nconst tensor_factory_impl_js_1 = require(\"./tensor-factory-impl.js\");\nconst tensor_utils_impl_js_1 = require(\"./tensor-utils-impl.js\");\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['float16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nconst checkBigInt = () => {\n    if (!isBigIntChecked) {\n        isBigIntChecked = true;\n        const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n        const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n        if (isBigInt64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n        }\n        if (isBigUint64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n        }\n    }\n};\nclass Tensor {\n    constructor(arg0, arg1, arg2) {\n        checkBigInt();\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    if (arg0 === 'float16') {\n                        // Throw error here because when user try to use number array as data,\n                        // e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n                        // Uint16Array.from(arg1) which generates wrong data.\n                        throw new TypeError('Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.');\n                    }\n                    else if (arg0 === 'uint64' || arg0 === 'int64') {\n                        // use 'as any' here because:\n                        // 1. TypeScript's check on type of 'Array.isArray()' does not work with readonly arrays.\n                        // see https://github.com/microsoft/TypeScript/issues/17002\n                        // 2. TypeScript's check on union type of '(BigInt64ArrayConstructor|BigUint64ArrayConstructor).from()' does\n                        // not accept parameter mapFn.\n                        // 3. parameters of 'SupportedTypedArrayConstructors.from()' does not match the requirement of the union\n                        // type.\n                        // assume 'arg1' is of type \"readonly number[]|readonly bigint[]\" here.\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        data = typedArrayConstructor.from(arg1, BigInt);\n                    }\n                    else {\n                        // assume 'arg1' is of type \"readonly number[]\" here.\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        data = typedArrayConstructor.from(arg1);\n                    }\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = (0, tensor_utils_impl_js_1.calculateSize)(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    static async fromImage(image, options) {\n        return (0, tensor_factory_impl_js_1.tensorFromImage)(image, options);\n    }\n    // #endregion\n    // #region conversions\n    toDataURL(options) {\n        return (0, tensor_conversion_impl_js_1.tensorToDataURL)(this, options);\n    }\n    toImageData(options) {\n        return (0, tensor_conversion_impl_js_1.tensorToImageData)(this, options);\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return (0, tensor_utils_impl_js_1.tensorReshape)(this, dims);\n    }\n}\nexports.Tensor = Tensor;\n//# sourceMappingURL=tensor-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorReshape = exports.calculateSize = void 0;\nconst tensor_js_1 = require(\"./tensor.js\");\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexports.calculateSize = calculateSize;\n/**\n * implementation of Tensor.reshape()\n */\nconst tensorReshape = (tensor, dims) => new tensor_js_1.Tensor(tensor.type, tensor.data, dims);\nexports.tensorReshape = tensorReshape;\n//# sourceMappingURL=tensor-utils-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tensor = void 0;\nconst tensor_impl_js_1 = require(\"./tensor-impl.js\");\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexports.Tensor = tensor_impl_js_1.Tensor;\n//# sourceMappingURL=tensor.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\nexports.version = '1.16.3';\n//# sourceMappingURL=version.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(57);\n"],"names":["root","factory","exports","module","define","amd","self","env","wasm","initTimeout","simd","proxy","numThreads","Number","isInteger","numCpuLogicalCores","navigator","cpus","length","hardwareConcurrency","Math","min","ceil","async","initializeWebAssemblyInstance","pathOrBuffer","options","handler","OnnxruntimeWebAssemblySessionHandler","loadModel","Promise","resolve","wasmBackend","registerBackend","versions","web","version","document","currentScript","src","initializeWebAssembly","initializeRuntime","core","initRuntime","createSessionAllocate","model","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","run","inputIndices","inputs","outputIndices","endProfiling","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","undefined","logSeverityLevel","Error","logVerbosityLevel","terminate","tagDataOffset","tag","allocWasmString","_OrtCreateRunOptions","checkLastError","extra","iterateExtraOptions","WeakSet","key","value","keyDataOffset","valueDataOffset","_OrtAddRunConfigEntry","e","_OrtReleaseRunOptions","forEach","alloc","_free","runtimeInitialized","path","response","fetch","status","arrayBuffer","Uint8Array","process","node","promisify","readFile","this","inputNames","outputNames","modelData","feeds","fetches","inputArray","Object","entries","kvp","name","tensor","index","indexOf","push","outputs","map","t","type","dims","data","result","i","Tensor","startProfiling","setSessionOptions","sessionOptionsHandle","sessionOptions","session","use_ort_model_bytes_directly","executionProviders","some","ep","enableMemPattern","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","executionMode","getExecutionMode","logIdDataOffset","logId","optimizedModelFilePathOffset","optimizedModelFilePath","_OrtCreateSessionOptions","enableCpuMemArena","enableProfiling","epName","webnnOptions","deviceType","_OrtAddSessionConfigEntry","powerPreference","epNameDataOffset","_OrtAppendExecutionProvider","setExecutionProviders","_OrtReleaseSessionOptions","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","typeProto","getTensorElementSize","dateType","tensorTypeToTypedArrayConstructor","Uint16Array","Float32Array","Int8Array","Int16Array","Int32Array","Float64Array","Uint32Array","BigInt64Array","BigUint64Array","logLevelStringToEnum","logLevel","loggingLevel","_OrtInit","activeSessions","Map","modelDataOffset","_malloc","byteLength","HEAPU8","set","sessionHandle","inputNamesUTF8Encoded","outputNamesUTF8Encoded","_OrtCreateSession","inputCount","outputCount","stack","stackSave","dataOffset","stackAlloc","_OrtGetInputOutputCount","HEAP32","stackRestore","getSessionInputOutputCount","_OrtGetInputName","UTF8ToString","_OrtGetOutputName","buf","_OrtFree","_OrtReleaseSession","get","delete","runOptionsAllocs","inputValues","inputAllocs","dataType","dataByteLength","Array","isArray","dataIndex","TypeError","HEAPU32","buffer","byteOffset","dimsOffset","dimIndex","d","_OrtCreateTensor","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","errorCode","_OrtRun","runPromise","jsepRunPromise","then","output","beforeGetTensorDataStack","tensorDataOffset","_OrtGetTensorData","tensorDataIndex","dimsLength","size","reduce","a","b","stringData","offset","maxBytesToRead","subarray","_OrtReleaseTensor","v","p","profileFileName","_OrtEndProfiling","extractTransferableBuffers","tensors","buffers","ortWasmFactory","ortWasmFactoryThreaded","initialized","initializing","aborted","flags","timeout","useThreads","SharedArrayBuffer","MessageChannel","port1","postMessage","WebAssembly","validate","isMultiThreadSupported","useSimd","isSimdSupported","wasmPaths","wasmPrefixOverride","wasmFileName","getWasmFileName","wasmPathOverride","isTimeout","tasks","setTimeout","reject","locateFile","fileName","scriptDirectory","endsWith","what","race","dispose","PThread","terminateAllThreads","dataLength","lengthBytesUTF8","stringToUTF8","prefix","seen","has","add","toString","message","paramsOffset","_OrtGetLastError","errorMessagePointer","errorMessage","_scriptDir","ortWasm","__filename","moduleArg","aa","h","ready","A","B","C","ba","assign","m","q","ca","window","importScripts","x","y","fs","D","dirname","__dirname","startsWith","URL","normalize","readFileSync","c","f","g","k","thisProgram","argv","replace","slice","exitCode","inspect","location","href","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","onload","onerror","F","da","print","console","log","bind","E","printErr","error","quit","wasmBinary","noExitRuntime","G","H","I","K","L","M","N","J","ea","HEAP8","HEAP16","HEAPU16","HEAPF32","HEAPF64","fa","ha","ia","ja","preRun","shift","unshift","R","S","O","P","Q","onAbort","RuntimeError","ka","la","ma","oa","credentials","ok","catch","na","instantiate","qa","T","ra","va","ua","sa","ta","Da","TextDecoder","decode","String","fromCharCode","l","U","V","charCodeAt","W","X","wa","xa","Ca","ya","Y","Ea","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","_","Fa","Ha","crypto","getRandomValues","randomFillSync","randomBytes","Ga","Ia","Ja","La","n","za","z","getFullYear","getMonth","getDate","r","getDay","Date","w","getTime","setDate","setMonth","setFullYear","u","pa","Aa","RegExp","split","Ba","substring","floor","abs","includes","Ka","Na","NaN","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","o","getSeconds","getMinutes","getHours","getTimezoneOffset","max","setTime","getYear","Ma","toTimeString","match","now","performance","copyWithin","call","grow","s","onExit","j","__errno_location","malloc","Oa","monitorRunDependencies","clearInterval","instantiateWasm","instantiateStreaming","instance","Z","$","ga","Pa","Qa","Ra","Ta","calledRun","onRuntimeInitialized","postRun","setStatus","Sa","preInit","pop","defineProperty","resolveBackend","backends","backendsSortedByPriority","backend","priority","init","createSessionHandler","currentBackend","splice","backendHints","backendNames","errors","backendName","backendInfo","isInitializing","initPromise","err","join","backend_impl_js_1","enumerable","version_js_1","logLevelValue","webgl","webgpu","common","env_impl_js_1","__createBinding","create","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__exportStar","prototype","hasOwnProperty","InferenceSession","tensor_js_1","constructor","arg1","arg2","isFetchesEmpty","RangeError","isFetches","arg1Keys","getOwnPropertyNames","results","returnValue","static","arg0","arg3","filePathOrUint8Array","ArrayBuffer","isSafeInteger","inference_session_impl_js_1","tensorToImageData","tensorToDataURL","canvas","createElement","width","height","pixels2DContext","getContext","tensorLayout","inputformat","format","norm","normMean","normBias","mean","bias","stride","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","fillStyle","fillRect","toDataURL","image","channels","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","createImageData","tensorFromImage","bufferToTensor","outputformat","tensorFormat","float32Data","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isString","bufferToTensorOptions","resizedHeight","resizedWidth","drawImage","getImageData","context","newImage","Image","crossOrigin","img","tempCanvas","putImageData","tensor_conversion_impl_js_1","tensor_factory_impl_js_1","tensor_utils_impl_js_1","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isBigIntChecked","isBigInt64ArrayAvailable","from","isBigUint64ArrayAvailable","checkBigInt","typedArrayConstructor","BigInt","firstElementType","mappedType","calculateSize","toImageData","reshape","tensorReshape","dim","tensor_impl_js_1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}