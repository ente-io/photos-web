{"version":3,"file":"static/chunks/153-894f16c3a73a74b8fe67.js","mappings":"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","sources":["webpack://_N_E/./node_modules/bip39/src/_wordlists.js","webpack://_N_E/./node_modules/bip39/src/index.js","webpack://_N_E/./node_modules/buffer/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = require('./wordlists/czech.json');\n    wordlists.czech = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/korean.json');\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/french.json');\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/italian.json');\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/spanish.json');\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/japanese.json');\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/portuguese.json');\n    wordlists.portuguese = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/english.json');\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHash = require(\"create-hash\");\nconst pbkdf2_1 = require(\"pbkdf2\");\nconst randomBytes = require(\"randombytes\");\nconst _wordlists_1 = require(\"./_wordlists\");\nlet DEFAULT_WORDLIST = _wordlists_1._default;\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\nconst WORDLIST_REQUIRED = 'A wordlist is required but a default could not be found.\\n' +\n    'Please pass a 2048 word array explicitly.';\nfunction pbkdf2Promise(password, saltMixin, iterations, keylen, digest) {\n    return Promise.resolve().then(() => new Promise((resolve, reject) => {\n        const callback = (err, derivedKey) => {\n            if (err) {\n                return reject(err);\n            }\n            else {\n                return resolve(derivedKey);\n            }\n        };\n        pbkdf2_1.pbkdf2(password, saltMixin, iterations, keylen, digest, callback);\n    }));\n}\nfunction normalize(str) {\n    return (str || '').normalize('NFKD');\n}\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => lpad(x.toString(2), '0', 8)).join('');\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = createHash('sha256')\n        .update(entropyBuffer)\n        .digest();\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\nfunction salt(password) {\n    return 'mnemonic' + (password || '');\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n    const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n    return pbkdf2_1.pbkdf2Sync(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\nfunction mnemonicToSeed(mnemonic, password) {\n    return Promise.resolve().then(() => {\n        const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n        const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n        return pbkdf2Promise(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n    });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = normalize(mnemonic).split(' ');\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return lpad(index.toString(2), '0', 11);\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length % 4 !== 0) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = Buffer.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return entropy.toString('hex');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    if (!Buffer.isBuffer(entropy)) {\n        entropy = Buffer.from(entropy, 'hex');\n    }\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length > 32) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length % 4 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    const entropyBits = bytesToBinary(Array.from(entropy));\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map((binary) => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093' // Japanese wordlist\n        ? words.join('\\u3000')\n        : words.join(' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    rng = rng || randomBytes;\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nfunction setDefaultWordlist(language) {\n    const result = _wordlists_1.wordlists[language];\n    if (result) {\n        DEFAULT_WORDLIST = result;\n    }\n    else {\n        throw new Error('Could not find wordlist for language \"' + language + '\"');\n    }\n}\nexports.setDefaultWordlist = setDefaultWordlist;\nfunction getDefaultWordlist() {\n    if (!DEFAULT_WORDLIST) {\n        throw new Error('No Default Wordlist set');\n    }\n    return Object.keys(_wordlists_1.wordlists).filter((lang) => {\n        if (lang === 'JA' || lang === 'EN') {\n            return false;\n        }\n        return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);\n    })[0];\n}\nexports.getDefaultWordlist = getDefaultWordlist;\nvar _wordlists_2 = require(\"./_wordlists\");\nexports.wordlists = _wordlists_2.wordlists;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n"],"names":["Object","defineProperty","exports","value","wordlists","_default","czech","err","chinese_simplified","chinese_traditional","korean","french","italian","spanish","japanese","JA","portuguese","english","EN","createHash","pbkdf2_1","randomBytes","_wordlists_1","DEFAULT_WORDLIST","INVALID_MNEMONIC","INVALID_ENTROPY","WORDLIST_REQUIRED","normalize","str","lpad","padString","length","binaryToByte","bin","parseInt","bytesToBinary","bytes","map","x","toString","join","deriveChecksumBits","entropyBuffer","CS","hash","update","digest","Array","from","slice","salt","password","mnemonicToEntropy","mnemonic","wordlist","Error","words","split","bits","word","index","indexOf","dividerIndex","Math","floor","entropyBits","checksumBits","entropyBytes","match","entropy","Buffer","entropyToMnemonic","isBuffer","TypeError","binary","mnemonicToSeedSync","mnemonicBuffer","saltBuffer","pbkdf2Sync","mnemonicToSeed","Promise","resolve","then","saltMixin","iterations","keylen","reject","pbkdf2","derivedKey","pbkdf2Promise","generateMnemonic","strength","rng","validateMnemonic","e","setDefaultWordlist","language","result","getDefaultWordlist","keys","filter","lang","every","_wordlists_2","base64","ieee754","customInspectSymbol","Symbol","for","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Uint8Array","setPrototypeOf","prototype","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","byteLength","actual","write","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","fromArrayBuffer","SharedArrayBuffer","valueOf","b","obj","len","checked","copy","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","i","byteOffset","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","src","dst","constructor","name","alphabet","table","i16"],"sourceRoot":""}