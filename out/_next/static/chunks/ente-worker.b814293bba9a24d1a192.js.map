{"version":3,"file":"static/chunks/ente-worker.b814293bba9a24d1a192.js","mappings":"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","sources":["webpack://_N_E/./src/types.ts","webpack://_N_E/./src/utils/crypto/libsodium.ts","webpack://_N_E/./src/utils/file/convertHEIC.ts","webpack://_N_E/./src/worker/crypto.worker.js","webpack://_N_E/webpack/bootstrap","webpack://_N_E/webpack/runtime/chunk loaded","webpack://_N_E/webpack/runtime/compat get default export","webpack://_N_E/webpack/runtime/define property getters","webpack://_N_E/webpack/runtime/ensure chunk","webpack://_N_E/webpack/runtime/get javascript chunk filename","webpack://_N_E/webpack/runtime/get mini-css chunk filename","webpack://_N_E/webpack/runtime/global","webpack://_N_E/webpack/runtime/hasOwnProperty shorthand","webpack://_N_E/webpack/runtime/make namespace object","webpack://_N_E/webpack/runtime/node module decorator","webpack://_N_E/webpack/runtime/publicPath","webpack://_N_E/webpack/runtime/importScripts chunk loading","webpack://_N_E/webpack/runtime/startup chunk dependencies","webpack://_N_E/webpack/startup"],"sourcesContent":["export interface KeyAttributes {\n    kekSalt: string;\n    encryptedKey: string;\n    keyDecryptionNonce: string;\n    opsLimit: number;\n    memLimit: number;\n    publicKey: string;\n    encryptedSecretKey: string;\n    secretKeyDecryptionNonce: string;\n    masterKeyEncryptedWithRecoveryKey: string;\n    masterKeyDecryptionNonce: string;\n    recoveryKeyEncryptedWithMasterKey: string;\n    recoveryKeyDecryptionNonce: string;\n}\n\nexport const ENCRYPTION_CHUNK_SIZE = 4 * 1024 * 1024;\nexport const GAP_BTW_TILES = 4;\nexport const DATE_CONTAINER_HEIGHT = 48;\nexport const IMAGE_CONTAINER_MAX_HEIGHT = 200;\nexport const IMAGE_CONTAINER_MAX_WIDTH =\n    IMAGE_CONTAINER_MAX_HEIGHT - GAP_BTW_TILES;\nexport const MIN_COLUMNS = 4;\nexport const SPACE_BTW_DATES = 44;\n\nexport enum PAGES {\n    CHANGE_EMAIL = '/change-email',\n    CHANGE_PASSWORD = '/change-password',\n    CREDENTIALS = '/credentials',\n    GALLERY = '/gallery',\n    GENERATE = '/generate',\n    LOGIN = '/login',\n    RECOVER = '/recover',\n    SIGNUP = '/signup',\n    TWO_FACTOR_SETUP = '/two-factor/setup',\n    TWO_FACTOR_VERIFY = '/two-factor/verify',\n    TWO_FACTOR_RECOVER = '/two-factor/recover',\n    VERIFY = '/verify',\n    ROOT = '/',\n}\n","import sodium, { StateAddress } from 'libsodium-wrappers';\nimport { ENCRYPTION_CHUNK_SIZE } from 'types';\n\nexport async function decryptChaChaOneShot(\n    data: Uint8Array,\n    header: Uint8Array,\n    key: string\n) {\n    await sodium.ready;\n    const pullState = sodium.crypto_secretstream_xchacha20poly1305_init_pull(\n        header,\n        await fromB64(key)\n    );\n    const pullResult = sodium.crypto_secretstream_xchacha20poly1305_pull(\n        pullState,\n        data,\n        null\n    );\n    return pullResult.message;\n}\n\nexport async function decryptChaCha(\n    data: Uint8Array,\n    header: Uint8Array,\n    key: string\n) {\n    await sodium.ready;\n    const pullState = sodium.crypto_secretstream_xchacha20poly1305_init_pull(\n        header,\n        await fromB64(key)\n    );\n    const decryptionChunkSize =\n        ENCRYPTION_CHUNK_SIZE +\n        sodium.crypto_secretstream_xchacha20poly1305_ABYTES;\n    let bytesRead = 0;\n    const decryptedData = [];\n    let tag = sodium.crypto_secretstream_xchacha20poly1305_TAG_MESSAGE;\n    while (tag !== sodium.crypto_secretstream_xchacha20poly1305_TAG_FINAL) {\n        let chunkSize = decryptionChunkSize;\n        if (bytesRead + chunkSize > data.length) {\n            chunkSize = data.length - bytesRead;\n        }\n        const buffer = data.slice(bytesRead, bytesRead + chunkSize);\n        const pullResult = sodium.crypto_secretstream_xchacha20poly1305_pull(\n            pullState,\n            buffer\n        );\n        for (let index = 0; index < pullResult.message.length; index++) {\n            decryptedData.push(pullResult.message[index]);\n        }\n        tag = pullResult.tag;\n        bytesRead += chunkSize;\n    }\n    return Uint8Array.from(decryptedData);\n}\n\nexport async function initChunkDecryption(header: Uint8Array, key: Uint8Array) {\n    await sodium.ready;\n    const pullState = sodium.crypto_secretstream_xchacha20poly1305_init_pull(\n        header,\n        key\n    );\n    const decryptionChunkSize =\n        ENCRYPTION_CHUNK_SIZE +\n        sodium.crypto_secretstream_xchacha20poly1305_ABYTES;\n    const tag = sodium.crypto_secretstream_xchacha20poly1305_TAG_MESSAGE;\n    return { pullState, decryptionChunkSize, tag };\n}\n\nexport async function decryptChunk(data: Uint8Array, pullState: StateAddress) {\n    await sodium.ready;\n    const pullResult = sodium.crypto_secretstream_xchacha20poly1305_pull(\n        pullState,\n        data\n    );\n    const newTag = pullResult.tag;\n    return { decryptedData: pullResult.message, newTag };\n}\n\nexport async function encryptChaChaOneShot(data: Uint8Array, key?: string) {\n    await sodium.ready;\n\n    const uintkey: Uint8Array = key\n        ? await fromB64(key)\n        : sodium.crypto_secretstream_xchacha20poly1305_keygen();\n    const initPushResult =\n        sodium.crypto_secretstream_xchacha20poly1305_init_push(uintkey);\n    const [pushState, header] = [initPushResult.state, initPushResult.header];\n\n    const pushResult = sodium.crypto_secretstream_xchacha20poly1305_push(\n        pushState,\n        data,\n        null,\n        sodium.crypto_secretstream_xchacha20poly1305_TAG_FINAL\n    );\n    return {\n        key: await toB64(uintkey),\n        file: {\n            encryptedData: pushResult,\n            decryptionHeader: await toB64(header),\n        },\n    };\n}\n\nexport async function encryptChaCha(data: Uint8Array, key?: string) {\n    await sodium.ready;\n\n    const uintkey: Uint8Array = key\n        ? await fromB64(key)\n        : sodium.crypto_secretstream_xchacha20poly1305_keygen();\n\n    const initPushResult =\n        sodium.crypto_secretstream_xchacha20poly1305_init_push(uintkey);\n    const [pushState, header] = [initPushResult.state, initPushResult.header];\n    let bytesRead = 0;\n    let tag = sodium.crypto_secretstream_xchacha20poly1305_TAG_MESSAGE;\n\n    const encryptedData = [];\n\n    while (tag !== sodium.crypto_secretstream_xchacha20poly1305_TAG_FINAL) {\n        let chunkSize = ENCRYPTION_CHUNK_SIZE;\n        if (bytesRead + chunkSize >= data.length) {\n            chunkSize = data.length - bytesRead;\n            tag = sodium.crypto_secretstream_xchacha20poly1305_TAG_FINAL;\n        }\n\n        const buffer = data.slice(bytesRead, bytesRead + chunkSize);\n        bytesRead += chunkSize;\n        const pushResult = sodium.crypto_secretstream_xchacha20poly1305_push(\n            pushState,\n            buffer,\n            null,\n            tag\n        );\n        for (let index = 0; index < pushResult.length; index++) {\n            encryptedData.push(pushResult[index]);\n        }\n    }\n    return {\n        key: await toB64(uintkey),\n        file: {\n            encryptedData: new Uint8Array(encryptedData),\n            decryptionHeader: await toB64(header),\n        },\n    };\n}\n\nexport async function initChunkEncryption() {\n    await sodium.ready;\n    const key = sodium.crypto_secretstream_xchacha20poly1305_keygen();\n    const initPushResult =\n        sodium.crypto_secretstream_xchacha20poly1305_init_push(key);\n    const [pushState, header] = [initPushResult.state, initPushResult.header];\n    return {\n        key: await toB64(key),\n        decryptionHeader: await toB64(header),\n        pushState,\n    };\n}\nexport async function encryptFileChunk(\n    data: Uint8Array,\n    pushState: sodium.StateAddress,\n    finalChunk?: boolean\n) {\n    await sodium.ready;\n\n    const tag = finalChunk\n        ? sodium.crypto_secretstream_xchacha20poly1305_TAG_FINAL\n        : sodium.crypto_secretstream_xchacha20poly1305_TAG_MESSAGE;\n    const pushResult = sodium.crypto_secretstream_xchacha20poly1305_push(\n        pushState,\n        data,\n        null,\n        tag\n    );\n\n    return pushResult;\n}\nexport async function encryptToB64(data: string, key?: string) {\n    await sodium.ready;\n    const encrypted = await encrypt(\n        await fromB64(data),\n        key ? await fromB64(key) : null\n    );\n\n    return {\n        encryptedData: await toB64(encrypted.encryptedData),\n        key: await toB64(encrypted.key),\n        nonce: await toB64(encrypted.nonce),\n    };\n}\nexport async function encryptUTF8(data: string, key?: string) {\n    const b64Data = await toB64(await fromString(data));\n    return await encryptToB64(b64Data, key);\n}\n\nexport async function decryptB64(data: string, nonce: string, key: string) {\n    await sodium.ready;\n    const decrypted = await decrypt(\n        await fromB64(data),\n        await fromB64(nonce),\n        await fromB64(key)\n    );\n\n    return await toB64(decrypted);\n}\n\nexport async function decryptToUTF8(data: string, nonce: string, key: string) {\n    await sodium.ready;\n    const decrypted = await decrypt(\n        await fromB64(data),\n        await fromB64(nonce),\n        await fromB64(key)\n    );\n\n    return sodium.to_string(decrypted);\n}\n\nexport async function encrypt(data: Uint8Array, key?: Uint8Array) {\n    await sodium.ready;\n    const uintkey: Uint8Array = key || sodium.crypto_secretbox_keygen();\n    const nonce = sodium.randombytes_buf(sodium.crypto_secretbox_NONCEBYTES);\n    const encryptedData = sodium.crypto_secretbox_easy(data, nonce, uintkey);\n    return {\n        encryptedData,\n        key: uintkey,\n        nonce,\n    };\n}\n\nexport async function decrypt(\n    data: Uint8Array,\n    nonce: Uint8Array,\n    key: Uint8Array\n) {\n    await sodium.ready;\n    return sodium.crypto_secretbox_open_easy(data, nonce, key);\n}\n\nexport async function verifyHash(hash: string, input: string) {\n    await sodium.ready;\n    return sodium.crypto_pwhash_str_verify(hash, await fromB64(input));\n}\n\nexport async function hash(input: string) {\n    await sodium.ready;\n    return sodium.crypto_pwhash_str(\n        await fromB64(input),\n        sodium.crypto_pwhash_OPSLIMIT_SENSITIVE,\n        sodium.crypto_pwhash_MEMLIMIT_MODERATE\n    );\n}\n\nexport async function deriveKey(\n    passphrase: string,\n    salt: string,\n    opsLimit: number,\n    memLimit: number\n) {\n    await sodium.ready;\n    return await toB64(\n        sodium.crypto_pwhash(\n            sodium.crypto_secretbox_KEYBYTES,\n            await fromString(passphrase),\n            await fromB64(salt),\n            opsLimit,\n            memLimit,\n            sodium.crypto_pwhash_ALG_DEFAULT\n        )\n    );\n}\n\nexport async function deriveSensitiveKey(passphrase: string, salt: string) {\n    await sodium.ready;\n    const minMemLimit = sodium.crypto_pwhash_MEMLIMIT_MIN;\n    let opsLimit = sodium.crypto_pwhash_OPSLIMIT_SENSITIVE;\n    let memLimit = sodium.crypto_pwhash_MEMLIMIT_SENSITIVE;\n    while (memLimit > minMemLimit) {\n        try {\n            const key = await deriveKey(passphrase, salt, opsLimit, memLimit);\n            return {\n                key,\n                opsLimit,\n                memLimit,\n            };\n        } catch (e) {\n            opsLimit *= 2;\n            memLimit /= 2;\n        }\n    }\n}\n\nexport async function deriveIntermediateKey(passphrase: string, salt: string) {\n    await sodium.ready;\n    const key = await toB64(\n        sodium.crypto_pwhash(\n            sodium.crypto_secretbox_KEYBYTES,\n            await fromString(passphrase),\n            await fromB64(salt),\n            sodium.crypto_pwhash_OPSLIMIT_INTERACTIVE,\n            sodium.crypto_pwhash_MEMLIMIT_INTERACTIVE,\n            sodium.crypto_pwhash_ALG_DEFAULT\n        )\n    );\n    return {\n        key,\n        opsLimit: sodium.crypto_pwhash_OPSLIMIT_INTERACTIVE,\n        memLimit: sodium.crypto_pwhash_MEMLIMIT_INTERACTIVE,\n    };\n}\n\nexport async function generateEncryptionKey() {\n    await sodium.ready;\n    return await toB64(sodium.crypto_kdf_keygen());\n}\n\nexport async function generateSaltToDeriveKey() {\n    await sodium.ready;\n    return await toB64(sodium.randombytes_buf(sodium.crypto_pwhash_SALTBYTES));\n}\n\nexport async function generateKeyPair() {\n    await sodium.ready;\n    const keyPair: sodium.KeyPair = sodium.crypto_box_keypair();\n    return {\n        privateKey: await toB64(keyPair.privateKey),\n        publicKey: await toB64(keyPair.publicKey),\n    };\n}\n\nexport async function boxSealOpen(\n    input: string,\n    publicKey: string,\n    secretKey: string\n) {\n    await sodium.ready;\n    return await toB64(\n        sodium.crypto_box_seal_open(\n            await fromB64(input),\n            await fromB64(publicKey),\n            await fromB64(secretKey)\n        )\n    );\n}\n\nexport async function boxSeal(input: string, publicKey: string) {\n    await sodium.ready;\n    return await toB64(\n        sodium.crypto_box_seal(await fromB64(input), await fromB64(publicKey))\n    );\n}\n\nexport async function fromB64(input: string) {\n    await sodium.ready;\n    return sodium.from_base64(input, sodium.base64_variants.ORIGINAL);\n}\n\nexport async function toB64(input: Uint8Array) {\n    await sodium.ready;\n    return sodium.to_base64(input, sodium.base64_variants.ORIGINAL);\n}\n\nexport async function toURLSafeB64(input: Uint8Array) {\n    await sodium.ready;\n    return sodium.to_base64(input, sodium.base64_variants.URLSAFE);\n}\n\nexport async function fromString(input: string) {\n    await sodium.ready;\n    return sodium.from_string(input);\n}\nexport async function toHex(input: string) {\n    await sodium.ready;\n    return sodium.to_hex(await fromB64(input));\n}\n\nexport async function fromHex(input: string) {\n    await sodium.ready;\n    return await toB64(sodium.from_hex(input));\n}\n","import * as HeicConvert from 'heic-convert';\n\nexport async function convertHEIC2JPEG(fileBlob: Blob): Promise<Blob> {\n    const filedata = new Uint8Array(await fileBlob.arrayBuffer());\n    const result = await HeicConvert({ buffer: filedata, format: 'JPEG' });\n    const convertedFileData = new Uint8Array(result);\n    const convertedFileBlob = new Blob([convertedFileData]);\n    return convertedFileBlob;\n}\n","import * as Comlink from 'comlink';\nimport * as libsodium from 'utils/crypto/libsodium';\nimport { convertHEIC2JPEG } from 'utils/file/convertHEIC';\n\nexport class Crypto {\n    async decryptMetadata(encryptedMetadata, header, key) {\n        const encodedMetadata = await libsodium.decryptChaChaOneShot(\n            await libsodium.fromB64(encryptedMetadata),\n            await libsodium.fromB64(header),\n            key\n        );\n        return JSON.parse(new TextDecoder().decode(encodedMetadata));\n    }\n\n    async decryptThumbnail(fileData, header, key) {\n        return libsodium.decryptChaChaOneShot(fileData, header, key);\n    }\n\n    async decryptFile(fileData, header, key) {\n        return libsodium.decryptChaCha(fileData, header, key);\n    }\n\n    async encryptMetadata(metadata, key) {\n        const encodedMetadata = new TextEncoder().encode(\n            JSON.stringify(metadata)\n        );\n\n        const { file: encryptedMetadata } =\n            await libsodium.encryptChaChaOneShot(encodedMetadata, key);\n        const { encryptedData, ...other } = encryptedMetadata;\n        return {\n            file: {\n                encryptedData: await libsodium.toB64(encryptedData),\n                ...other,\n            },\n            key,\n        };\n    }\n\n    async encryptThumbnail(fileData, key) {\n        return libsodium.encryptChaChaOneShot(fileData, key);\n    }\n\n    async encryptFile(fileData, key) {\n        return libsodium.encryptChaCha(fileData, key);\n    }\n\n    async encryptFileChunk(data, pushState, finalChunk) {\n        return libsodium.encryptFileChunk(data, pushState, finalChunk);\n    }\n\n    async initChunkEncryption() {\n        return libsodium.initChunkEncryption();\n    }\n\n    async initDecryption(header, key) {\n        return libsodium.initChunkDecryption(header, key);\n    }\n\n    async decryptChunk(fileData, pullState) {\n        return libsodium.decryptChunk(fileData, pullState);\n    }\n\n    async encrypt(data, key) {\n        return libsodium.encrypt(data, key);\n    }\n\n    async decrypt(data, nonce, key) {\n        return libsodium.decrypt(data, nonce, key);\n    }\n\n    async hash(input) {\n        return libsodium.hash(input);\n    }\n\n    async verifyHash(hash, input) {\n        return libsodium.verifyHash(hash, input);\n    }\n\n    async deriveKey(passphrase, salt, opsLimit, memLimit) {\n        return libsodium.deriveKey(passphrase, salt, opsLimit, memLimit);\n    }\n\n    async deriveSensitiveKey(passphrase, salt) {\n        return libsodium.deriveSensitiveKey(passphrase, salt);\n    }\n\n    async deriveIntermediateKey(passphrase, salt) {\n        return libsodium.deriveIntermediateKey(passphrase, salt);\n    }\n\n    async decryptB64(data, nonce, key) {\n        return libsodium.decryptB64(data, nonce, key);\n    }\n\n    async decryptToUTF8(data, nonce, key) {\n        return libsodium.decryptToUTF8(data, nonce, key);\n    }\n\n    async encryptToB64(data, key) {\n        return libsodium.encryptToB64(data, key);\n    }\n\n    async encryptUTF8(data, key) {\n        return libsodium.encryptUTF8(data, key);\n    }\n\n    async generateEncryptionKey() {\n        return libsodium.generateEncryptionKey();\n    }\n\n    async generateSaltToDeriveKey() {\n        return libsodium.generateSaltToDeriveKey();\n    }\n\n    async generateKeyPair() {\n        return libsodium.generateKeyPair();\n    }\n\n    async boxSealOpen(input, publicKey, secretKey) {\n        return libsodium.boxSealOpen(input, publicKey, secretKey);\n    }\n\n    async boxSeal(input, publicKey) {\n        return libsodium.boxSeal(input, publicKey);\n    }\n\n    async fromString(string) {\n        return libsodium.fromString(string);\n    }\n\n    async toB64(data) {\n        return libsodium.toB64(data);\n    }\n\n    async toURLSafeB64(data) {\n        return libsodium.toURLSafeB64(data);\n    }\n\n    async fromB64(string) {\n        return libsodium.fromB64(string);\n    }\n\n    async toHex(string) {\n        return libsodium.toHex(string);\n    }\n\n    async fromHex(string) {\n        return libsodium.fromHex(string);\n    }\n\n    // temporary fix for  https://github.com/vercel/next.js/issues/25484\n    async getUint8ArrayView(file) {\n        try {\n            return await new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.onabort = () =>\n                    reject(Error('file reading was aborted'));\n                reader.onerror = () => reject(Error('file reading has failed'));\n                reader.onload = () => {\n                    // Do whatever you want with the file contents\n                    const result =\n                        typeof reader.result === 'string'\n                            ? new TextEncoder().encode(reader.result)\n                            : new Uint8Array(reader.result);\n                    resolve(result);\n                };\n                reader.readAsArrayBuffer(file);\n            });\n        } catch (e) {\n            console.log(e, 'error reading file to byte-array');\n            throw e;\n        }\n    }\n\n    async convertHEIC2JPEG(file) {\n        return convertHEIC2JPEG(file);\n    }\n}\n\nComlink.expose(Crypto);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [78,293,714,963], function() { return __webpack_require__(93965); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames not based on template\n\tif (chunkId === 714) return \"static/chunks/714-003557f07b307779db51.js\";\n\t// return url for filenames based on template\n\treturn \"static/chunks/\" + ({\"78\":\"102d0109\",\"293\":\"10785a6b\"}[chunkId] || chunkId) + \".\" + {\"78\":\"6680232293a8a4862049\",\"293\":\"1d3718c48831958ba9f5\",\"963\":\"b0049619e11fe1a5ec31\"}[chunkId] + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/_next/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t287: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([78,293,714,963].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["PAGES","ENCRYPTION_CHUNK_SIZE","decryptChaChaOneShot","data","header","key","sodium","fromB64","pullState","crypto_secretstream_xchacha20poly1305_init_pull","pullResult","message","decryptChaCha","decryptionChunkSize","bytesRead","decryptedData","tag","chunkSize","length","buffer","slice","index","push","Uint8Array","from","initChunkDecryption","decryptChunk","newTag","encryptChaChaOneShot","uintkey","initPushResult","state","pushState","pushResult","toB64","encryptedData","decryptionHeader","file","encryptChaCha","initChunkEncryption","encryptFileChunk","finalChunk","encryptToB64","encrypt","encrypted","nonce","encryptUTF8","fromString","b64Data","decryptB64","decrypt","decrypted","decryptToUTF8","verifyHash","hash","input","crypto_pwhash_str_verify","crypto_pwhash_str","deriveKey","passphrase","salt","opsLimit","memLimit","crypto_pwhash","deriveSensitiveKey","minMemLimit","deriveIntermediateKey","generateEncryptionKey","generateSaltToDeriveKey","generateKeyPair","keyPair","privateKey","publicKey","boxSealOpen","secretKey","crypto_box_seal_open","boxSeal","crypto_box_seal","toURLSafeB64","toHex","to_hex","fromHex","convertHEIC2JPEG","fileBlob","arrayBuffer","filedata","HeicConvert","format","result","convertedFileData","convertedFileBlob","Blob","Crypto","encryptedMetadata","libsodium","encodedMetadata","JSON","parse","TextDecoder","decode","fileData","metadata","TextEncoder","encode","stringify","other","string","Promise","resolve","reject","reader","FileReader","onabort","Error","onerror","onload","readAsArrayBuffer","console","log","Comlink","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","threw","__webpack_modules__","call","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","e","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","nmd","paths","children","p","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","map","then"],"sourceRoot":""}