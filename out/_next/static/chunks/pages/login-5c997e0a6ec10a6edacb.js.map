{"version":3,"file":"static/chunks/pages/login-5c997e0a6ec10a6edacb.js","mappings":"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","sources":["webpack://_N_E/./src/components/Login.tsx","webpack://_N_E/./src/components/LogoImg.tsx","webpack://_N_E/./src/pages/login/index.tsx","webpack://_N_E/?d186"],"sourcesContent":["import Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport constants from 'utils/strings/constants';\nimport { Formik, FormikHelpers } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport * as Yup from 'yup';\nimport { getOtt } from 'services/userService';\nimport { setData, LS_KEYS, getData } from 'utils/storage/localStorage';\nimport SubmitButton from 'components/SubmitButton';\nimport Button from 'react-bootstrap/Button';\nimport LogoImg from './LogoImg';\nimport { PAGES } from 'types';\n\ninterface formValues {\n    email: string;\n}\n\ninterface LoginProps {\n    signUp: () => void;\n}\n\nexport default function Login(props: LoginProps) {\n    const router = useRouter();\n    const [waiting, setWaiting] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const main = async () => {\n            router.prefetch(PAGES.VERIFY);\n            const user = getData(LS_KEYS.USER);\n            if (user?.email) {\n                await router.push(PAGES.VERIFY);\n            }\n            setLoading(false);\n        };\n        main();\n    }, []);\n\n    const loginUser = async (\n        { email }: formValues,\n        { setFieldError }: FormikHelpers<formValues>\n    ) => {\n        try {\n            setWaiting(true);\n            await getOtt(email);\n            setData(LS_KEYS.USER, { email });\n            router.push(PAGES.VERIFY);\n        } catch (e) {\n            setFieldError('email', `${constants.UNKNOWN_ERROR} ${e.message}`);\n        }\n        setWaiting(false);\n    };\n    const inputElement = useRef(null);\n    useEffect(() => {\n        setTimeout(() => {\n            inputElement.current?.focus();\n        }, 250);\n    }, []);\n\n    return (\n        <>\n            <Card.Title style={{ marginBottom: '32px' }}>\n                <LogoImg src=\"/icon.svg\" />\n                {constants.LOGIN}\n            </Card.Title>\n            <Formik<formValues>\n                initialValues={{ email: '' }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string()\n                        .email(constants.EMAIL_ERROR)\n                        .required(constants.REQUIRED),\n                })}\n                validateOnChange={false}\n                validateOnBlur={false}\n                onSubmit={loginUser}>\n                {({ values, errors, touched, handleChange, handleSubmit }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control\n                                ref={inputElement}\n                                type=\"email\"\n                                placeholder={constants.ENTER_EMAIL}\n                                value={values.email}\n                                onChange={handleChange('email')}\n                                isInvalid={Boolean(\n                                    touched.email && errors.email\n                                )}\n                                autoFocus\n                                disabled={loading}\n                            />\n                            <FormControl.Feedback type=\"invalid\">\n                                {errors.email}\n                            </FormControl.Feedback>\n                        </Form.Group>\n                        <SubmitButton\n                            buttonText={constants.LOGIN}\n                            loading={waiting}\n                        />\n                        <br />\n                        <Button\n                            block\n                            variant=\"link\"\n                            className=\"text-center\"\n                            onClick={props.signUp}>\n                            {constants.NO_ACCOUNT}\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    );\n}\n","import styled from 'styled-components';\n\nexport default styled.img`\n    height: 25px;\n    vertical-align: bottom;\n    padding-right: 15px;\n    border-right: 2px solid #aaa;\n    margin-right: 15px;\n`;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport EnteSpinner from 'components/EnteSpinner';\nimport { AppContext } from 'pages/_app';\nimport Login from 'components/Login';\nimport Container from 'components/Container';\nimport { getData, LS_KEYS } from 'utils/storage/localStorage';\nimport Card from 'react-bootstrap/Card';\nimport { PAGES } from 'types';\n\nexport default function Home() {\n    const router = useRouter();\n    const appContext = useContext(AppContext);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        router.prefetch(PAGES.VERIFY);\n        router.prefetch(PAGES.SIGNUP);\n        const user = getData(LS_KEYS.USER);\n        if (user?.email) {\n            router.push(PAGES.VERIFY);\n        }\n        setLoading(false);\n        appContext.showNavBar(false);\n    }, []);\n\n    const register = () => {\n        router.push(PAGES.SIGNUP);\n    };\n\n    return (\n        <Container>\n            {loading ? (\n                <EnteSpinner>\n                    <span className=\"sr-only\">Loading...</span>\n                </EnteSpinner>\n            ) : (\n                <Card style={{ minWidth: '320px' }} className=\"text-center\">\n                    <Card.Body style={{ padding: '40px 30px' }}>\n                        <Login signUp={register} />\n                    </Card.Body>\n                </Card>\n            )}\n        </Container>\n    );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/login\",\n      function () {\n        return require(\"private-next-pages/login/index.tsx\");\n      }\n    ]);\n  "],"names":["Login","props","router","useRouter","useState","waiting","setWaiting","loading","setLoading","useEffect","prefetch","PAGES","user","getData","LS_KEYS","email","push","main","loginUser","setFieldError","getOtt","setData","constants","message","inputElement","useRef","setTimeout","current","focus","style","marginBottom","src","initialValues","validationSchema","Yup","shape","required","validateOnChange","validateOnBlur","onSubmit","values","errors","touched","handleChange","handleSubmit","noValidate","controlId","ref","type","placeholder","value","onChange","isInvalid","Boolean","autoFocus","disabled","buttonText","block","variant","className","onClick","signUp","styled","Home","appContext","useContext","AppContext","showNavBar","minWidth","padding","window","__NEXT_P"],"sourceRoot":""}