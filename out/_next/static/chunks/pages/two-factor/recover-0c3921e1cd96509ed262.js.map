{"version":3,"file":"static/chunks/pages/two-factor/recover-0c3921e1cd96509ed262.js","mappings":"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","sources":["webpack://_N_E/./src/components/LogoImg.tsx","webpack://_N_E/./src/components/MessageDialog.tsx","webpack://_N_E/./src/components/icons/Visibility.tsx","webpack://_N_E/./src/components/icons/VisibilityOff.tsx","webpack://_N_E/./src/components/SingleInputForm.tsx","webpack://_N_E/./src/pages/two-factor/recover/index.tsx","webpack://_N_E/?b74c"],"sourcesContent":["import styled from 'styled-components';\n\nexport default styled.img`\n    height: 25px;\n    vertical-align: bottom;\n    padding-right: 15px;\n    border-right: 2px solid #aaa;\n    margin-right: 15px;\n`;\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport constants from 'utils/strings/constants';\n\nexport interface MessageAttributes {\n    title?: string;\n    staticBackdrop?: boolean;\n    nonClosable?: boolean;\n    content?: any;\n    close?: { text?: string; variant?: string; action?: () => void };\n    proceed?: {\n        text: string;\n        action: () => void;\n        variant: string;\n        disabled?: boolean;\n    };\n}\n\nexport type SetDialogMessage = React.Dispatch<\n    React.SetStateAction<MessageAttributes>\n>;\ntype Props = React.PropsWithChildren<{\n    show: boolean;\n    onHide: () => void;\n    attributes: MessageAttributes;\n    size?: 'sm' | 'lg' | 'xl';\n}>;\nexport default function MessageDialog({\n    attributes,\n    children,\n    ...props\n}: Props) {\n    if (!attributes) {\n        return <Modal />;\n    }\n    return (\n        <Modal\n            {...props}\n            onHide={attributes.nonClosable ? () => null : props.onHide}\n            centered\n            backdrop={attributes.staticBackdrop ? 'static' : true}>\n            <Modal.Header\n                style={{ borderBottom: 'none' }}\n                closeButton={!attributes.nonClosable}>\n                {attributes.title && (\n                    <Modal.Title>{attributes.title}</Modal.Title>\n                )}\n            </Modal.Header>\n            {(children || attributes?.content) && (\n                <Modal.Body style={{ borderTop: '1px solid #444' }}>\n                    {children || (\n                        <p style={{ fontSize: '1.25rem', marginBottom: 0 }}>\n                            {attributes.content}\n                        </p>\n                    )}\n                </Modal.Body>\n            )}\n            {(attributes.close || attributes.proceed) && (\n                <Modal.Footer style={{ borderTop: 'none' }}>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexWrap: 'wrap',\n                        }}>\n                        {attributes.close && (\n                            <Button\n                                variant={`outline-${\n                                    attributes.close?.variant ?? 'secondary'\n                                }`}\n                                onClick={() => {\n                                    attributes.close.action &&\n                                        attributes.close?.action();\n                                    props.onHide();\n                                }}\n                                style={{\n                                    padding: '6px 3em',\n                                    margin: '0 20px',\n                                    marginBottom: '20px',\n                                    flex: 1,\n                                    whiteSpace: 'nowrap',\n                                }}>\n                                {attributes.close?.text ?? constants.OK}\n                            </Button>\n                        )}\n                        {attributes.proceed && (\n                            <Button\n                                variant={`outline-${\n                                    attributes.proceed?.variant ?? 'primary'\n                                }`}\n                                onClick={() => {\n                                    attributes.proceed.action();\n                                    props.onHide();\n                                }}\n                                style={{\n                                    padding: '6px 3em',\n                                    margin: '0 20px',\n                                    marginBottom: '20px',\n                                    flex: 1,\n                                    whiteSpace: 'nowrap',\n                                }}\n                                disabled={attributes.proceed.disabled}>\n                                {attributes.proceed.text}\n                            </Button>\n                        )}\n                    </div>\n                </Modal.Footer>\n            )}\n        </Modal>\n    );\n}\n","import React from 'react';\nexport default function Visibility(props) {\n    return (\n        <div>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                height={props.height}\n                viewBox={props.viewBox}\n                width={props.width}\n                fill=\"#000000\">\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\" />\n            </svg>\n        </div>\n    );\n}\n\nVisibility.defaultProps = {\n    height: 24,\n    width: 24,\n    viewBox: '0 0 24 24',\n    open: false,\n};\n","import React from 'react';\nexport default function VisibilityOff(props) {\n    return (\n        <div>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                height={props.height}\n                viewBox={props.viewBox}\n                width={props.width}\n                fill=\"#000000\">\n                <path\n                    d=\"M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z\"\n                    fill=\"none\"\n                />\n                <path d=\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\" />\n            </svg>\n        </div>\n    );\n}\n\nVisibilityOff.defaultProps = {\n    height: 24,\n    width: 24,\n    viewBox: '0 0 24 24',\n    open: false,\n};\n","import React, { useState } from 'react';\nimport constants from 'utils/strings/constants';\nimport { Form } from 'react-bootstrap';\nimport { Formik, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport SubmitButton from './SubmitButton';\nimport styled from 'styled-components';\nimport Visibility from './icons/Visibility';\nimport VisibilityOff from './icons/VisibilityOff';\n\ninterface formValues {\n    passphrase: string;\n}\ninterface Props {\n    callback: (passphrase: string, setFieldError) => void;\n    fieldType: string;\n    placeholder: string;\n    buttonText: string;\n}\n\nconst Group = styled.div`\n    position: relative;\n`;\n\nconst Button = styled.button`\n    background: transparent;\n    border: none;\n    width: 46px;\n    height: 34px;\n    position: absolute;\n    top: 1px;\n    right: 1px;\n    border-radius: 5px;\n    align-items: center;\n`;\n\nexport default function SingleInputForm(props: Props) {\n    const [loading, SetLoading] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n\n    const submitForm = async (\n        values: formValues,\n        { setFieldError }: FormikHelpers<formValues>\n    ) => {\n        SetLoading(true);\n        await props.callback(values.passphrase, setFieldError);\n        SetLoading(false);\n    };\n    return (\n        <Formik<formValues>\n            initialValues={{ passphrase: '' }}\n            onSubmit={submitForm}\n            validationSchema={Yup.object().shape({\n                passphrase: Yup.string().required(constants.REQUIRED),\n            })}\n            validateOnChange={false}\n            validateOnBlur={false}>\n            {({ values, touched, errors, handleChange, handleSubmit }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Group>\n                            <Form.Control\n                                type={showPassword ? 'text' : props.fieldType}\n                                placeholder={props.placeholder}\n                                value={values.passphrase}\n                                onChange={handleChange('passphrase')}\n                                isInvalid={Boolean(\n                                    touched.passphrase && errors.passphrase\n                                )}\n                                disabled={loading}\n                                autoFocus\n                            />\n                            {props.fieldType === 'password' && (\n                                <Button\n                                    type=\"button\"\n                                    onClick={() =>\n                                        setShowPassword(!showPassword)\n                                    }>\n                                    {showPassword ? (\n                                        <VisibilityOff />\n                                    ) : (\n                                        <Visibility />\n                                    )}\n                                </Button>\n                            )}\n                            <Form.Control.Feedback type=\"invalid\">\n                                {errors.passphrase}\n                            </Form.Control.Feedback>\n                        </Group>\n                    </Form.Group>\n                    <SubmitButton\n                        buttonText={props.buttonText}\n                        loading={loading}\n                    />\n\n                    <br />\n                </Form>\n            )}\n        </Formik>\n    );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport constants from 'utils/strings/constants';\nimport { getData, LS_KEYS, setData } from 'utils/storage/localStorage';\nimport { useRouter } from 'next/router';\nimport CryptoWorker, { B64EncryptionResult } from 'utils/crypto';\nimport SingleInputForm from 'components/SingleInputForm';\nimport MessageDialog from 'components/MessageDialog';\nimport Container from 'components/Container';\nimport { Card, Button } from 'react-bootstrap';\nimport LogoImg from 'components/LogoImg';\nimport { logError } from 'utils/sentry';\nimport { recoverTwoFactor, removeTwoFactor } from 'services/userService';\nimport { AppContext, FLASH_MESSAGE_TYPE } from 'pages/_app';\nimport { PAGES } from 'types';\nconst bip39 = require('bip39');\n// mobile client library only supports english.\nbip39.setDefaultWordlist('english');\n\nexport default function Recover() {\n    const router = useRouter();\n    const [messageDialogView, SetMessageDialogView] = useState(false);\n    const [encryptedTwoFactorSecret, setEncryptedTwoFactorSecret] =\n        useState<B64EncryptionResult>(null);\n    const [sessionID, setSessionID] = useState(null);\n    const appContext = useContext(AppContext);\n    useEffect(() => {\n        router.prefetch(PAGES.GALLERY);\n        const user = getData(LS_KEYS.USER);\n        if (!user.isTwoFactorEnabled && (user.encryptedToken || user.token)) {\n            router.push(PAGES.GENERATE);\n        } else if (!user.email || !user.twoFactorSessionID) {\n            router.push(PAGES.ROOT);\n        } else {\n            setSessionID(user.twoFactorSessionID);\n        }\n        const main = async () => {\n            const resp = await recoverTwoFactor(user.twoFactorSessionID);\n            setEncryptedTwoFactorSecret({\n                encryptedData: resp.encryptedSecret,\n                nonce: resp.secretDecryptionNonce,\n                key: null,\n            });\n        };\n        main();\n    }, []);\n\n    const recover = async (recoveryKey: string, setFieldError) => {\n        try {\n            // check if user is entering mnemonic recovery key\n            if (recoveryKey.trim().indexOf(' ') > 0) {\n                if (recoveryKey.trim().split(' ').length !== 24) {\n                    throw new Error('recovery code should have 24 words');\n                }\n                recoveryKey = bip39.mnemonicToEntropy(recoveryKey);\n            }\n            const cryptoWorker = await new CryptoWorker();\n            const twoFactorSecret: string = await cryptoWorker.decryptB64(\n                encryptedTwoFactorSecret.encryptedData,\n                encryptedTwoFactorSecret.nonce,\n                await cryptoWorker.fromHex(recoveryKey)\n            );\n            const resp = await removeTwoFactor(sessionID, twoFactorSecret);\n            const { keyAttributes, encryptedToken, token, id } = resp;\n            setData(LS_KEYS.USER, {\n                ...getData(LS_KEYS.USER),\n                token,\n                encryptedToken,\n                id,\n                isTwoFactorEnabled: false,\n            });\n            setData(LS_KEYS.KEY_ATTRIBUTES, keyAttributes);\n            appContext.setDisappearingFlashMessage({\n                message: constants.TWO_FACTOR_DISABLE_SUCCESS,\n                type: FLASH_MESSAGE_TYPE.INFO,\n            });\n            router.push(PAGES.CREDENTIALS);\n        } catch (e) {\n            logError(e, 'two factor recovery failed');\n            setFieldError('passphrase', constants.INCORRECT_RECOVERY_KEY);\n        }\n    };\n\n    return (\n        <>\n            <Container>\n                <Card style={{ minWidth: '320px' }} className=\"text-center\">\n                    <Card.Body style={{ padding: '40px 30px' }}>\n                        <Card.Title style={{ marginBottom: '32px' }}>\n                            <LogoImg src=\"/icon.svg\" />\n                            {constants.RECOVER_TWO_FACTOR}\n                        </Card.Title>\n                        <SingleInputForm\n                            callback={recover}\n                            fieldType=\"text\"\n                            placeholder={constants.RETURN_RECOVERY_KEY_HINT}\n                            buttonText={constants.RECOVER}\n                        />\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                marginTop: '12px',\n                            }}>\n                            <Button\n                                variant=\"link\"\n                                onClick={() => SetMessageDialogView(true)}>\n                                {constants.NO_RECOVERY_KEY}\n                            </Button>\n                            <Button variant=\"link\" onClick={router.back}>\n                                {constants.GO_BACK}\n                            </Button>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Container>\n            <MessageDialog\n                size=\"lg\"\n                show={messageDialogView}\n                onHide={() => SetMessageDialogView(false)}\n                attributes={{\n                    title: constants.CONTACT_SUPPORT,\n                    close: {},\n                    content: constants.NO_TWO_FACTOR_RECOVERY_KEY_MESSAGE(),\n                }}\n            />\n        </>\n    );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/two-factor/recover\",\n      function () {\n        return require(\"private-next-pages/two-factor/recover/index.tsx\");\n      }\n    ]);\n  "],"names":["styled","MessageDialog","attributes","children","props","onHide","nonClosable","centered","backdrop","staticBackdrop","style","borderBottom","closeButton","title","content","borderTop","fontSize","marginBottom","close","proceed","display","flexWrap","variant","onClick","action","padding","margin","flex","whiteSpace","text","constants","disabled","Visibility","xmlns","height","viewBox","width","fill","d","VisibilityOff","defaultProps","open","Group","Button","SingleInputForm","useState","loading","SetLoading","showPassword","setShowPassword","submitForm","values","setFieldError","callback","passphrase","initialValues","onSubmit","validationSchema","Yup","shape","required","validateOnChange","validateOnBlur","touched","errors","handleChange","handleSubmit","Form","noValidate","type","fieldType","placeholder","value","onChange","isInvalid","Boolean","autoFocus","SubmitButton","buttonText","bip39","require","Recover","router","useRouter","messageDialogView","SetMessageDialogView","encryptedTwoFactorSecret","setEncryptedTwoFactorSecret","sessionID","setSessionID","appContext","useContext","AppContext","useEffect","prefetch","PAGES","user","getData","LS_KEYS","isTwoFactorEnabled","encryptedToken","token","email","twoFactorSessionID","push","recoverTwoFactor","resp","encryptedData","encryptedSecret","nonce","secretDecryptionNonce","key","main","recover","recoveryKey","trim","indexOf","split","length","Error","mnemonicToEntropy","CryptoWorker","cryptoWorker","fromHex","decryptB64","twoFactorSecret","removeTwoFactor","keyAttributes","id","setData","setDisappearingFlashMessage","message","FLASH_MESSAGE_TYPE","logError","minWidth","className","src","flexDirection","marginTop","back","size","show","setDefaultWordlist","window","__NEXT_P"],"sourceRoot":""}