{"version":3,"file":"static/chunks/pages/recover-ae5bc76c765cd2b638e1.js","mappings":"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","sources":["webpack://_N_E/./src/components/LogoImg.tsx","webpack://_N_E/./src/components/MessageDialog.tsx","webpack://_N_E/./src/components/icons/Visibility.tsx","webpack://_N_E/./src/components/icons/VisibilityOff.tsx","webpack://_N_E/./src/components/SingleInputForm.tsx","webpack://_N_E/./src/pages/recover/index.tsx","webpack://_N_E/?47a7"],"sourcesContent":["import styled from 'styled-components';\n\nexport default styled.img`\n    height: 25px;\n    vertical-align: bottom;\n    padding-right: 15px;\n    border-right: 2px solid #aaa;\n    margin-right: 15px;\n`;\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport constants from 'utils/strings/constants';\n\nexport interface MessageAttributes {\n    title?: string;\n    staticBackdrop?: boolean;\n    nonClosable?: boolean;\n    content?: any;\n    close?: { text?: string; variant?: string; action?: () => void };\n    proceed?: {\n        text: string;\n        action: () => void;\n        variant: string;\n        disabled?: boolean;\n    };\n}\n\nexport type SetDialogMessage = React.Dispatch<\n    React.SetStateAction<MessageAttributes>\n>;\ntype Props = React.PropsWithChildren<{\n    show: boolean;\n    onHide: () => void;\n    attributes: MessageAttributes;\n    size?: 'sm' | 'lg' | 'xl';\n}>;\nexport default function MessageDialog({\n    attributes,\n    children,\n    ...props\n}: Props) {\n    if (!attributes) {\n        return <Modal />;\n    }\n    return (\n        <Modal\n            {...props}\n            onHide={attributes.nonClosable ? () => null : props.onHide}\n            centered\n            backdrop={attributes.staticBackdrop ? 'static' : true}>\n            <Modal.Header\n                style={{ borderBottom: 'none' }}\n                closeButton={!attributes.nonClosable}>\n                {attributes.title && (\n                    <Modal.Title>{attributes.title}</Modal.Title>\n                )}\n            </Modal.Header>\n            {(children || attributes?.content) && (\n                <Modal.Body style={{ borderTop: '1px solid #444' }}>\n                    {children || (\n                        <p style={{ fontSize: '1.25rem', marginBottom: 0 }}>\n                            {attributes.content}\n                        </p>\n                    )}\n                </Modal.Body>\n            )}\n            {(attributes.close || attributes.proceed) && (\n                <Modal.Footer style={{ borderTop: 'none' }}>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexWrap: 'wrap',\n                        }}>\n                        {attributes.close && (\n                            <Button\n                                variant={`outline-${\n                                    attributes.close?.variant ?? 'secondary'\n                                }`}\n                                onClick={() => {\n                                    attributes.close.action &&\n                                        attributes.close?.action();\n                                    props.onHide();\n                                }}\n                                style={{\n                                    padding: '6px 3em',\n                                    margin: '0 20px',\n                                    marginBottom: '20px',\n                                    flex: 1,\n                                    whiteSpace: 'nowrap',\n                                }}>\n                                {attributes.close?.text ?? constants.OK}\n                            </Button>\n                        )}\n                        {attributes.proceed && (\n                            <Button\n                                variant={`outline-${\n                                    attributes.proceed?.variant ?? 'primary'\n                                }`}\n                                onClick={() => {\n                                    attributes.proceed.action();\n                                    props.onHide();\n                                }}\n                                style={{\n                                    padding: '6px 3em',\n                                    margin: '0 20px',\n                                    marginBottom: '20px',\n                                    flex: 1,\n                                    whiteSpace: 'nowrap',\n                                }}\n                                disabled={attributes.proceed.disabled}>\n                                {attributes.proceed.text}\n                            </Button>\n                        )}\n                    </div>\n                </Modal.Footer>\n            )}\n        </Modal>\n    );\n}\n","import React from 'react';\nexport default function Visibility(props) {\n    return (\n        <div>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                height={props.height}\n                viewBox={props.viewBox}\n                width={props.width}\n                fill=\"#000000\">\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\" />\n            </svg>\n        </div>\n    );\n}\n\nVisibility.defaultProps = {\n    height: 24,\n    width: 24,\n    viewBox: '0 0 24 24',\n    open: false,\n};\n","import React from 'react';\nexport default function VisibilityOff(props) {\n    return (\n        <div>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                height={props.height}\n                viewBox={props.viewBox}\n                width={props.width}\n                fill=\"#000000\">\n                <path\n                    d=\"M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z\"\n                    fill=\"none\"\n                />\n                <path d=\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\" />\n            </svg>\n        </div>\n    );\n}\n\nVisibilityOff.defaultProps = {\n    height: 24,\n    width: 24,\n    viewBox: '0 0 24 24',\n    open: false,\n};\n","import React, { useState } from 'react';\nimport constants from 'utils/strings/constants';\nimport { Form } from 'react-bootstrap';\nimport { Formik, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport SubmitButton from './SubmitButton';\nimport styled from 'styled-components';\nimport Visibility from './icons/Visibility';\nimport VisibilityOff from './icons/VisibilityOff';\n\ninterface formValues {\n    passphrase: string;\n}\ninterface Props {\n    callback: (passphrase: string, setFieldError) => void;\n    fieldType: string;\n    placeholder: string;\n    buttonText: string;\n}\n\nconst Group = styled.div`\n    position: relative;\n`;\n\nconst Button = styled.button`\n    background: transparent;\n    border: none;\n    width: 46px;\n    height: 34px;\n    position: absolute;\n    top: 1px;\n    right: 1px;\n    border-radius: 5px;\n    align-items: center;\n`;\n\nexport default function SingleInputForm(props: Props) {\n    const [loading, SetLoading] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n\n    const submitForm = async (\n        values: formValues,\n        { setFieldError }: FormikHelpers<formValues>\n    ) => {\n        SetLoading(true);\n        await props.callback(values.passphrase, setFieldError);\n        SetLoading(false);\n    };\n    return (\n        <Formik<formValues>\n            initialValues={{ passphrase: '' }}\n            onSubmit={submitForm}\n            validationSchema={Yup.object().shape({\n                passphrase: Yup.string().required(constants.REQUIRED),\n            })}\n            validateOnChange={false}\n            validateOnBlur={false}>\n            {({ values, touched, errors, handleChange, handleSubmit }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Group>\n                            <Form.Control\n                                type={showPassword ? 'text' : props.fieldType}\n                                placeholder={props.placeholder}\n                                value={values.passphrase}\n                                onChange={handleChange('passphrase')}\n                                isInvalid={Boolean(\n                                    touched.passphrase && errors.passphrase\n                                )}\n                                disabled={loading}\n                                autoFocus\n                            />\n                            {props.fieldType === 'password' && (\n                                <Button\n                                    type=\"button\"\n                                    onClick={() =>\n                                        setShowPassword(!showPassword)\n                                    }>\n                                    {showPassword ? (\n                                        <VisibilityOff />\n                                    ) : (\n                                        <Visibility />\n                                    )}\n                                </Button>\n                            )}\n                            <Form.Control.Feedback type=\"invalid\">\n                                {errors.passphrase}\n                            </Form.Control.Feedback>\n                        </Group>\n                    </Form.Group>\n                    <SubmitButton\n                        buttonText={props.buttonText}\n                        loading={loading}\n                    />\n\n                    <br />\n                </Form>\n            )}\n        </Formik>\n    );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport constants from 'utils/strings/constants';\nimport {\n    clearData,\n    getData,\n    LS_KEYS,\n    setData,\n} from 'utils/storage/localStorage';\nimport { useRouter } from 'next/router';\nimport { KeyAttributes, PAGES } from 'types';\nimport CryptoWorker, {\n    decryptAndStoreToken,\n    SaveKeyInSessionStore,\n} from 'utils/crypto';\nimport SingleInputForm from 'components/SingleInputForm';\nimport MessageDialog from 'components/MessageDialog';\nimport Container from 'components/Container';\nimport { Card, Button } from 'react-bootstrap';\nimport { AppContext } from 'pages/_app';\nimport LogoImg from 'components/LogoImg';\nimport { logError } from 'utils/sentry';\nimport { getKey, SESSION_KEYS } from 'utils/storage/sessionStorage';\nimport { User } from 'services/userService';\nconst bip39 = require('bip39');\n// mobile client library only supports english.\nbip39.setDefaultWordlist('english');\n\nexport default function Recover() {\n    const router = useRouter();\n    const [keyAttributes, setKeyAttributes] = useState<KeyAttributes>();\n    const [messageDialogView, SetMessageDialogView] = useState(false);\n    const appContext = useContext(AppContext);\n\n    useEffect(() => {\n        router.prefetch(PAGES.GALLERY);\n        const user: User = getData(LS_KEYS.USER);\n        const keyAttributes: KeyAttributes = getData(LS_KEYS.KEY_ATTRIBUTES);\n        const key = getKey(SESSION_KEYS.ENCRYPTION_KEY);\n        if (\n            (!user?.token && !user?.encryptedToken) ||\n            !keyAttributes?.memLimit\n        ) {\n            clearData();\n            router.push(PAGES.ROOT);\n        } else if (!keyAttributes) {\n            router.push(PAGES.GENERATE);\n        } else if (key) {\n            router.push(PAGES.GALLERY);\n        } else {\n            setKeyAttributes(keyAttributes);\n        }\n        appContext.showNavBar(false);\n    }, []);\n\n    const recover = async (recoveryKey: string, setFieldError) => {\n        try {\n            // check if user is entering mnemonic recovery key\n            if (recoveryKey.trim().indexOf(' ') > 0) {\n                if (recoveryKey.trim().split(' ').length !== 24) {\n                    throw new Error('recovery code should have 24 words');\n                }\n                recoveryKey = bip39.mnemonicToEntropy(recoveryKey);\n            }\n            const cryptoWorker = await new CryptoWorker();\n            const masterKey: string = await cryptoWorker.decryptB64(\n                keyAttributes.masterKeyEncryptedWithRecoveryKey,\n                keyAttributes.masterKeyDecryptionNonce,\n                await cryptoWorker.fromHex(recoveryKey)\n            );\n            await SaveKeyInSessionStore(SESSION_KEYS.ENCRYPTION_KEY, masterKey);\n            await decryptAndStoreToken(masterKey);\n\n            setData(LS_KEYS.SHOW_BACK_BUTTON, { value: false });\n            router.push(PAGES.CHANGE_PASSWORD);\n        } catch (e) {\n            logError(e, 'password recovery failed');\n            setFieldError('passphrase', constants.INCORRECT_RECOVERY_KEY);\n        }\n    };\n\n    return (\n        <>\n            <Container>\n                <Card style={{ minWidth: '320px' }} className=\"text-center\">\n                    <Card.Body style={{ padding: '40px 30px' }}>\n                        <Card.Title style={{ marginBottom: '32px' }}>\n                            <LogoImg src=\"/icon.svg\" />\n                            {constants.RECOVER_ACCOUNT}\n                        </Card.Title>\n                        <SingleInputForm\n                            callback={recover}\n                            fieldType=\"text\"\n                            placeholder={constants.RETURN_RECOVERY_KEY_HINT}\n                            buttonText={constants.RECOVER}\n                        />\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                marginTop: '12px',\n                            }}>\n                            <Button\n                                variant=\"link\"\n                                onClick={() => SetMessageDialogView(true)}>\n                                {constants.NO_RECOVERY_KEY}\n                            </Button>\n                            <Button variant=\"link\" onClick={router.back}>\n                                {constants.GO_BACK}\n                            </Button>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Container>\n            <MessageDialog\n                size=\"lg\"\n                show={messageDialogView}\n                onHide={() => SetMessageDialogView(false)}\n                attributes={{\n                    title: constants.SORRY,\n                    close: {},\n                    content: constants.NO_RECOVERY_KEY_MESSAGE,\n                }}\n            />\n        </>\n    );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/recover\",\n      function () {\n        return require(\"private-next-pages/recover/index.tsx\");\n      }\n    ]);\n  "],"names":["styled","MessageDialog","attributes","children","props","onHide","nonClosable","centered","backdrop","staticBackdrop","style","borderBottom","closeButton","title","content","borderTop","fontSize","marginBottom","close","proceed","display","flexWrap","variant","onClick","action","padding","margin","flex","whiteSpace","text","constants","disabled","Visibility","xmlns","height","viewBox","width","fill","d","VisibilityOff","defaultProps","open","Group","Button","SingleInputForm","useState","loading","SetLoading","showPassword","setShowPassword","submitForm","values","setFieldError","callback","passphrase","initialValues","onSubmit","validationSchema","Yup","shape","required","validateOnChange","validateOnBlur","touched","errors","handleChange","handleSubmit","Form","noValidate","type","fieldType","placeholder","value","onChange","isInvalid","Boolean","autoFocus","SubmitButton","buttonText","bip39","require","Recover","router","useRouter","keyAttributes","setKeyAttributes","messageDialogView","SetMessageDialogView","appContext","useContext","AppContext","useEffect","prefetch","PAGES","user","getData","LS_KEYS","key","getKey","SESSION_KEYS","token","encryptedToken","memLimit","push","clearData","showNavBar","recover","recoveryKey","trim","indexOf","split","length","Error","mnemonicToEntropy","CryptoWorker","cryptoWorker","masterKeyEncryptedWithRecoveryKey","masterKeyDecryptionNonce","fromHex","decryptB64","masterKey","SaveKeyInSessionStore","decryptAndStoreToken","setData","logError","minWidth","className","src","flexDirection","marginTop","back","size","show","setDefaultWordlist","window","__NEXT_P"],"sourceRoot":""}